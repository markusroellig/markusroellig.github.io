(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    231683,       6389]
NotebookOptionsPosition[    209290,       5662]
NotebookOutlinePosition[    210554,       5702]
CellTagsIndexPosition[    210295,       5693]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a Tool for Astronomy and Physics"
}], "Title",
 CellChangeTimes->{{3.4631492689871325`*^9, 3.4631492808119326`*^9}}],

Cell["\<\
Lecture 2
Wintersemester 2009/10

Markus R\[ODoubleDot]llig\
\>", "Subtitle",
 CellChangeTimes->{{3.4631492844155326`*^9, 3.463149301715933*^9}, {
   3.463149446339533*^9, 3.4631494500679326`*^9}, {3.463150895378133*^9, 
   3.4631508957369328`*^9}, {3.4631509331145325`*^9, 
   3.4631509348461323`*^9}, {3.4633918330178003`*^9, 3.4633918441094*^9}, {
   3.4633924180713997`*^9, 3.4633924208326*^9}, 3.4633925658190002`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Conventions"
}], "Section",
 CellChangeTimes->{{3.4632273839386*^9, 3.4632273886342*^9}, {
  3.463393378488*^9, 3.4633933787064*^9}}],

Cell[CellGroupData[{

Cell["Naming", "Subsection",
 CellChangeTimes->{{3.4632274690834*^9, 3.4632274699726*^9}}],

Cell[TextData[{
 "Required reading :\n\n",
 ButtonBox["Naming Conventions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{
      ParentDirectory[
       ParentDirectory[
        ParentDirectory[
         ParentDirectory[
          ParentDirectory[
           ParentDirectory[
            ParentDirectory[
             ParentDirectory[]]]]]]]], "Program Files", "Wolfram Research", 
      "Mathematica", "7.0", "Documentation", "English", "System", 
      "Tutorials"}, "NamingConventions.nb", CharacterEncoding -> 
     "WindowsANSI"], None}]
}], "Text",
 CellChangeTimes->{{3.463227822439*^9, 3.4632278866798*^9}}],

Cell[TextData[{
 "Without exception, all ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Functions and pre-defined Symbols start with a capital Letter."
}], "Text",
 CellChangeTimes->{{3.463227476041*^9, 3.4632275258674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sin", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sin", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sin", 
  RowBox[{"(", "x", ")"}]}]}], "Input",
 CellChangeTimes->{{3.4632275318422003`*^9, 3.4632275372242002`*^9}, {
  3.4632275957553997`*^9, 3.4632275971282*^9}}],

Cell[BoxData[
 RowBox[{"sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.4649460632882*^9}],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.4649460632882*^9}],

Cell[BoxData[
 RowBox[{"Sin", " ", "x"}]], "Output",
 CellChangeTimes->{3.4649460632882*^9}]
}, Open  ]],

Cell[TextData[{
 "Starting with Version 6.0 ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "introduced format highlighting. The above cell demonstrates this. Symbols \
(Commands, Variables, etc.) that are known to the kernel are shown black. \
Unknown symbols are printed blue (here the x is undefined, hence blue and the \
sin is also unknown to ",
 StyleBox["Mathematica)",
  FontSlant->"Italic"],
 ". Obvious typing errors show up in red (round brackets instead of the \
expected square brackets [ ] to indicate a function argument). "
}], "Text",
 CellChangeTimes->{{3.463227543433*^9, 3.4632277167802*^9}, {
  3.4646067525388002`*^9, 3.4646067540832*^9}}],

Cell[TextData[{
 "Most ",
 StyleBox[" Mathematica",
  FontSlant->"Italic"],
 " commands usually are spelled out complete English words."
}], "Text",
 CellChangeTimes->{{3.4632277430662003`*^9, 3.4632277570282*^9}, {
  3.463227790771*^9, 3.4632278198962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.4632274726401997`*^9, {3.4632278927326*^9, 3.4632279152122*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "18"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", "\[Pi]"}], "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.4649460654566*^9}]
}, Open  ]],

Cell["\<\
If the command consists of multiple word, each one starts with a capital \
letter.\
\>", "Text",
 CellChangeTimes->{{3.4646067927244*^9, 3.4646067930052*^9}, {
  3.4646068231756*^9, 3.4646068466848*^9}, {3.4646069038588*^9, 
  3.4646069091940002`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "100000", "]"}]], "Input",
 CellChangeTimes->{{3.4646069174932003`*^9, 3.4646069219547997`*^9}}],

Cell[BoxData["33620"], "Output",
 CellChangeTimes->{3.464946065519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "123456789", "]"}]], "Input",
 CellChangeTimes->{{3.4646069394268*^9, 3.4646069465716*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460655346003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "#", "]"}], "&"}], ",", "1."}], "]"}]], "Input",
 CellChangeTimes->{{3.464607011998*^9, 3.4646070508887997`*^9}, {
  3.4646070918856*^9, 3.4646071019788*^9}, {3.4646071475308*^9, 
  3.464607234142*^9}, {3.4646072765116*^9, 3.4646072794912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.5403023058681398`", ",", "0.8575532158463934`", ",", 
   "0.6542897904977791`", ",", "0.7934803587425656`", ",", 
   "0.7013687736227565`", ",", "0.7639596829006542`", ",", 
   "0.7221024250267077`", ",", "0.7504177617637605`", ",", 
   "0.7314040424225098`", ",", "0.744237354900557`", ",", 
   "0.7356047404363473`", ",", "0.7414250866101092`", ",", 
   "0.7375068905132428`", ",", "0.7401473355678757`", ",", 
   "0.7383692041223232`", ",", "0.739567202212256`", ",", 
   "0.7387603198742114`", ",", "0.7393038923969057`", ",", 
   "0.7389377567153446`", ",", "0.7391843997714936`", ",", 
   "0.7390182624274122`", ",", "0.7391301765296711`", ",", 
   "0.7390547907469175`", ",", "0.7391055719265361`", ",", 
   "0.739071365298945`", ",", "0.7390944073790912`", ",", 
   "0.7390788859949922`", ",", "0.7390893414033927`", ",", 
   "0.7390822985224023`", ",", "0.7390870426953323`", ",", 
   "0.7390838469650002`", ",", "0.7390859996481299`", ",", 
   "0.7390845495752126`", ",", "0.7390855263619245`", ",", 
   "0.7390848683867142`", ",", "0.7390853116067619`", ",", 
   "0.7390850130484203`", ",", "0.7390852141609171`", ",", 
   "0.739085078689123`", ",", "0.7390851699445544`", ",", 
   "0.7390851084737987`", ",", "0.7390851498812394`", ",", 
   "0.7390851219886894`", ",", "0.7390851407774467`", ",", 
   "0.7390851281211138`", ",", "0.7390851366465718`", ",", 
   "0.7390851309037207`", ",", "0.7390851347721744`", ",", 
   "0.7390851321663374`", ",", "0.7390851339216605`", ",", 
   "0.7390851327392538`", ",", "0.7390851335357372`", ",", 
   "0.7390851329992164`", ",", "0.7390851333606232`", ",", 
   "0.7390851331171753`", ",", "0.7390851332811648`", ",", 
   "0.7390851331706995`", ",", "0.7390851332451102`", ",", 
   "0.7390851331949863`", ",", "0.7390851332287504`", ",", 
   "0.7390851332060064`", ",", "0.7390851332213271`", ",", 
   "0.7390851332110069`", ",", "0.7390851332179587`", ",", 
   "0.7390851332132758`", ",", "0.7390851332164303`", ",", 
   "0.7390851332143054`", ",", "0.7390851332157368`", ",", 
   "0.7390851332147725`", ",", "0.7390851332154221`", ",", 
   "0.7390851332149845`", ",", "0.7390851332152794`", ",", 
   "0.7390851332150807`", ",", "0.7390851332152144`", ",", 
   "0.7390851332151244`", ",", "0.7390851332151851`", ",", 
   "0.7390851332151441`", ",", "0.7390851332151718`", ",", 
   "0.7390851332151531`", ",", "0.7390851332151657`", ",", 
   "0.7390851332151572`", ",", "0.739085133215163`", ",", 
   "0.739085133215159`", ",", "0.7390851332151618`", ",", 
   "0.7390851332151599`", ",", "0.7390851332151611`", ",", 
   "0.7390851332151603`", ",", "0.7390851332151608`", ",", 
   "0.7390851332151606`", ",", "0.7390851332151607`"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460655502*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Use meaningful naming for your own variables and \
functions!",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.4646069112844*^9, 3.464606914264*^9}, {
  3.464607322204*^9, 3.4646073351052*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Brackets", "Subsection",
 PageWidth->PaperWidth,
 Evaluatable->False,
 CellChangeTimes->{{3.39825464509375*^9, 3.398254648078125*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the following brackets are used:\n\n( )\tto control the order of \
calculations,\n[ ]  \tto indicate the argument or arguments of a function,\n{ \
} \tto indicate a list, a group of elements,\n\[LeftDoubleBracket] \
\[RightDoubleBracket] \tto indicate the element number in the list, the \
index.\n\tcan by typed also as [[ ]]"
}], "Text",
 PageWidth->PaperWidth,
 Evaluatable->False,
 CellChangeTimes->{
  3.3981817910569963`*^9, 3.39818199929982*^9, 3.398182049383073*^9, 
   3.398182092934407*^9, {3.3981821502215223`*^9, 3.398182150268402*^9}, {
   3.3981825322021914`*^9, 3.398182532249069*^9}, {3.398184436361782*^9, 
   3.3981844364086585`*^9}, {3.398254651296875*^9, 3.3982547781875*^9}, {
   3.4632274125022*^9, 3.4632274198185997`*^9}, {3.4633018073334*^9, 
   3.4633018081602*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["1/(1+2+x^2+x^3)", "Input",
 PageWidth->PaperWidth,
 CellChangeTimes->{{3.4633018456782*^9, 3.4633018569462*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"3", "+", 
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{3.4649460655657997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "/", 
  RowBox[{"(", 
   RowBox[{"b", " ", "c"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "/", "b"}], " ", "c"}]}], "Input",
 PageWidth->PaperWidth,
 CellChangeTimes->{{3.463301827863*^9, 3.4633018312794*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True],

Cell[BoxData[
 FractionBox["a", 
  RowBox[{"b", " ", "c"}]]], "Output",
 CellChangeTimes->{3.4649460655814*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", "c"}], "b"]], "Output",
 CellChangeTimes->{3.4649460655814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "\[LeftDoubleBracket]",
   "2", "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 PageWidth->PaperWidth,
 CellChangeTimes->{{3.4632274296778*^9, 3.4632274335466003`*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.464946065597*^9}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.464946065597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excercise", "Subsubsection",
 CellChangeTimes->{{3.4649285452939997`*^9, 3.464928546613*^9}}],

Cell["Use the keyboard to enter \[LeftDoubleBracket] \[RightDoubleBracket] ", \
"Text",
 CellChangeTimes->{{3.464928551229*^9, 3.464928560309*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input Defaults\t", "Subsection",
 CellChangeTimes->{{3.463302534466*^9, 3.4633025382724*^9}}],

Cell["\<\
By default a new cell will be an input cell unless you selected a different \
cell style before creating the cell. An input cell interprets anything as \
interpretable expression. If you want to write comments or text use either a \
text cell or use comment brackets (* ...*). Everything between the (* ... *) \
will be ignored and greyed out. Comments can span many lines (but not many \
cells).
Example:\
\>", "Text",
 CellChangeTimes->{{3.4633025409712*^9, 3.4633026242128*^9}, {
  3.4633026582676*^9, 3.4633027094667997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     SuperscriptBox["x", "2"], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "simple", " ", "plot"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4633026265996*^9, 3.4633026542896*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
oN7ldczFFD7cOKR9vf40BW3rll7NTWfnp5J//J0527/+Dj8k/JUP+5/NnOXW
Zvuhbes92gr4cHuI73EOMXY/gyoffijlw6auUZb0AAsUmlwSb1bz4dyOR0uM
v7KgeQXvjwONfCjbUrclLJgFEe6xfSs7+LBOt6hrwY4Fh3K2cP3p40PHh+5j
9zRYUH3g/JZnE3y4uy12N28eEx7EiFq5zfDhyrCiitnbTDAdeXsBOfkxOuS+
hoIxE0p8O5J6xfgxa1Jwy2ABA759NFVaq8qPsfLyAoqRI+A9P7B1QZMf8zTF
qGrjEdhkcsu6Wpcfg9WNm2omhyGtMyvkohE/Sh4Ina0xHIaERSq83+z4UXCH
rvKNokFwPpK/LNiJH0eVrqSaHRuElW/+M7B348fxHhIRPTUAsQahl/m8+dHz
nfyWkSUDEH6Gc3hvOD8+3SqksMq8Dw5mPeNbFs2Pt3MvBXA19IIEr97yiXh+
9P2b++j9kV548MzNNjyVH6cZ/reDjvaAX1lLZUcFP1YG/DtevKcL3Nekf3Ln
EcCtm9dctXjeBLv7Tl0LOSeAK85yH11F0mHnteWJhp4COOSjK63y6iNsl2pt
nvIRwAs7Kzr6F72DzUZmekcCBTDx5twDRU1fUH21bmL5G/b75r3uOmapRNhx
0vlzqwC6xJraaTyrIALzieFOPQJ4afqm6HHxKsIT5vhdblgARSVdRswOVJO5
wvrlPtMCSKnPHvGtqSWMFVntOyUEkbnTK+FcdiMp7712sHGXIGoeSf2eLtBF
Srx1bgXsFUSnUJlNq8K7SKEk9XGrpSDCyqVtFcu7SY6h3aI4e0Fcsw/Gbur2
kMT47aUu1wSx26xLPmFnH3m7dfbPYj9BDGjqW8df1Efi6z6pVAYIsvX7833Z
bf3kGc/K29oRgtgrscZATnuABDnw42yqIPZ5bPve93uQBMwRt6QsQSx0WCOh
azdE7oR6Pj+WK4jHHr2xLyweIj6FQzMFFYKYXrHf+siDYeJl+2LNpTpBvHFA
pcyEOUwuTdpYrW4RxBzLZW36JiPEbUX558BB9v4BeJf7zwg5lePXa0AJYpL3
Sa2c3Qxy8qA+fey3IO4UKI02jmSQo37J7pbcQrj4nL558jomsVFwiuEXEsJ/
JyRUz11k80za0sosmhCqf4yYbs5gkr29wWqKikI4Lsuw9tJmkXK13jrbFUL4
+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
k6Q+ePkyOVsK06rzf6zQYxHlod6bv75KodML0wNUEIuE7FhlN5crhYVD18R4
WliEM9rJYHmhFIovWIuaLGXr75+3CruL2evDXZpe21Ck02J4xr1UCovi+K8J
BFHEPEmtKbyC3Q/1hftH0imSy38m41uVFL7Kv6QWXE8RTfvksL5aKQwiK+We
Mtk8kEN5iDRI4c9TVR9d2fpNk9GyWN/Mvk/CP83+vsn1c+c1bdqkMFdENdSc
/ZxV9knsZqcUtmTHdduw1x9d9ZvxpocdVx9jKrL3r7yhU1bZz+7HxEOPmM8U
MWi5/O73kBQaVd4a7rpPkeSNWf4KTCmM16rzYVlRZEnwjOOOUSms3pwuWaXA
5oXhLYanJqRQZcOtXaENLDJneE350ZQUNi8677znHoucjvnGkflXCm0ibnoL
aLNI69+F9vY59v4pIZu6qpnE9OC2r7wc0qiwOZWL5cwkX5J9o9S5pdHqWkiP
yTSD8JlayofzSeO+tzdunjvPIPuHVJ5yCkmjey0p+9AzQgaWVzypp0njj0uZ
61XeDRPtvBipbZLSaDy3ybNwfohcO3o+9L2MNMaVqEehyRChP5UJuaEojURH
RbygaIAc1RmmjSyTxuA13AeMp/vJu9qch5YrpXHS7pRaAptHQcw+SFVdGgW0
qpKW2/YS11uJd+s2SWP6AvXhrE8nSVe6zg/60qhYH2MVwGonnN/233mH0shz
I+vFv7pWEv5n6pbPLmlkWqVUrbnVSArObLu+2lIaYf/togsTlWSxVf1Fb3dp
NMlRsdzf/R5O/n472e8hjWvV72uL38iAjyFXPfZflsapE7e//buVC7sqlM6t
8pFGn+3fhR7O/ACP7a6nq+5Lo/bi2c9qm+rhW4f+yOaH0li4NSpu9lIjCF6j
nXoVIo03ere070hshpiMz05eT6Vx9H30ttm/7VCmznFixRtp3Fpx4tD47R6Q
Lq3pepAgja/Wvz758nIvHHd6Zfc3SRod3JL2zR7vg+m43Ucr06QxsV9XX3/p
AGyHJW16mdI4+EjrqffYAAS1UkdefpHGcbmAPNEvg7BcJszaM18an1sfbaO0
h8Etzamxu0gaBZu+tCV1DkPW/s2HzX5I4+qeS5wRfiPAQ4nUZ5RLY637d80z
igzYF9hxULlKGndPeHdRSQyIXJNaG1jL7pdOpla/NhP6vvtZTNez+5FjySmf
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
/weW6sR6
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-0.9999999832925813, 0.9999999326492379}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.464946065909*^9}]
}, Open  ]],

Cell[TextData[{
 "Comment blocks can be inserted at any position of a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression as long as the expression names are untouched:."
}], "Text",
 CellChangeTimes->{{3.464928626928*^9, 3.464928646118*^9}, {3.464928774597*^9,
   3.464928806459*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", 
  RowBox[{"(*", "test", "*)"}], "[", 
  RowBox[{"(*", "test", "*)"}], 
  RowBox[{"x", ",", "x"}], 
  RowBox[{"(*", "test", "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.464928809358*^9, 3.4649288275959997`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "2"], "2"]], "Output",
 CellChangeTimes->{3.4649460659245996`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integr", 
  RowBox[{"(*", "test", "*)"}], "ate"}]], "Input",
 CellChangeTimes->{{3.464928649409*^9, 3.464928650071*^9}, {3.464928780598*^9,
   3.464928785302*^9}}],

Cell[BoxData[
 RowBox[{"ate", " ", "Integr"}]], "Output",
 CellChangeTimes->{3.4649460659402*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["In/Output, Sequence of Inputs", "Subsection",
 CellChangeTimes->{{3.4633033897146*^9, 3.4633033977642*^9}, {
  3.4633036915206003`*^9, 3.463303691973*^9}, {3.4646076902704*^9, 
  3.4646076980236*^9}}],

Cell[TextData[{
 "Required reading:\n\n",
 ButtonBox["Sequences of Operations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SequencesOfOperations"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.4649290087506*^9, 3.4649290250369997`*^9}}],

Cell[TextData[{
 "Most ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input creates an output. If you want to supress outputs use semicolon ; \
after the expression:"
}], "Text",
 CellChangeTimes->{{3.4633034105406*^9, 3.4633034716302*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "2", "+", "f", "+", "g", "+", "t", "+", "4"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4633034747033997`*^9, 3.4633034812086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "3"], 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["x", "2"], 
        RowBox[{"Cos", "[", 
         SqrtBox["x"], "]"}]}]}]], 
     RowBox[{"Log", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "17"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4633034862474003`*^9, 3.4633035388194*^9}}],

Cell[TextData[{
 "Please note, that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " assumes that a semicolon after a Plot is unwanted and accordingly \
highlights it red. "
}], "Text",
 CellChangeTimes->{{3.4633035492402*^9, 3.4633035801282*^9}}],

Cell["\<\
If you want to use more then one expression in one line use ; but note, that \
only the last expression produces an output.\
\>", "Text",
 CellChangeTimes->{{3.4633035950106*^9, 3.4633036619814*^9}, {
  3.4646073994708*^9, 3.4646074126372004`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}], ";", 
  RowBox[{"1", "+", "2", "+", "3", "+", "4", "+", "5"}], ";", 
  SqrtBox["13.8764831276"]}]], "Input",
 CellChangeTimes->{{3.4633036645866003`*^9, 3.4633036779642*^9}}],

Cell[BoxData["3.725115183131926`"], "Output",
 CellChangeTimes->{3.4649460659714003`*^9}]
}, Open  ]],

Cell[TextData[{
 "If you want the output of intermediary expressions vissible you can use ",
 ButtonBox["Print",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Print"],
 ". "
}], "Text",
 CellChangeTimes->{{3.464928874656*^9, 3.464928946413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}], "]"}], ";", 
  RowBox[{"1", "+", "2", "+", "3", "+", "4", "+", "5"}], ";", 
  SqrtBox["13.8764831276"]}]], "Input",
 CellChangeTimes->{{3.4633036645866003`*^9, 3.4633036779642*^9}, {
  3.464929180257*^9, 3.4649291877606*^9}}],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}]], "Print",
 CellChangeTimes->{3.464946065987*^9}],

Cell[BoxData["3.725115183131926`"], "Output",
 CellChangeTimes->{3.4649460660025997`*^9}]
}, Open  ]],

Cell["You can not use Print[%]:", "Text",
 CellChangeTimes->{{3.4649291962938004`*^9, 3.4649292240774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}], ";", 
  RowBox[{"Print", "[", "%", "]"}], ";", 
  RowBox[{"1", "+", "2", "+", "3", "+", "4", "+", "5"}], ";", 
  SqrtBox["13.8764831276"]}]], "Input",
 CellChangeTimes->{{3.4649289526218*^9, 3.464928956163*^9}, {
  3.4649292542166*^9, 3.4649292561977997`*^9}}],

Cell[BoxData["3.725115183131926`"], "Print",
 CellChangeTimes->{3.4649460660025997`*^9}],

Cell[BoxData["3.725115183131926`"], "Output",
 CellChangeTimes->{3.4649460660182*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{{3.4633933846968*^9, 3.4633933851492*^9}, {
  3.4639308128297997`*^9, 3.4639308139062*^9}}],

Cell[TextData[{
 "Required Reading\n\n",
 Cell[BoxData[
  FormBox[
   ButtonBox["Lists",
    BaseStyle->"Link",
    ButtonData->"paclet:tutorial/ListsOverview"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.4633934166456003`*^9, 3.4633934453496*^9}, {
  3.4633935008076*^9, 3.4633935008076*^9}, {3.463400621975*^9, 
  3.4634006219906*^9}}],

Cell["\<\
In doing calculations, it is often convenient to collect together several \
objects, and treat them as a single entity. Lists give you a way to make \
collections of objects in Mathematica. As you will see later, lists are very \
important and general structures in Mathematica. \
\>", "Text"],

Cell[CellGroupData[{

Cell["Overview", "Subsection",
 CellChangeTimes->{{3.463393541586*^9, 3.4633935427716*^9}}],

Cell["\<\
Lists in Mathematica are delimited by curly braces, with elements separated \
by commas. They can contain any valid Mathematica expression: numbers, \
strings, symbols, graphics, ... basically anything.
When a list is constructed, each element is evaluated and the corresponding \
entry is filled with that value. 
List expressions have List as their Head.\
\>", "Text",
 CellChangeTimes->{{3.4351781591119537`*^9, 3.4351783632719536`*^9}, {
  3.435178403914953*^9, 3.4351784042619534`*^9}, {3.4352881147081537`*^9, 
  3.4352881195681534`*^9}, {3.4649294710878*^9, 3.4649294785134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "List"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Head", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Show", " ", "the", " ", "Head", " ", "of", " ", "the", " ", "List"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullForm", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Show", " ", "the", " ", "Full", " ", "Form", " ", "of", " ", "the", " ", 
    "list"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"List", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Length", "[", "%", "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "give", " ", "the", " ", "length", " ", "of", " ", "the", " ", "list"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4351782436439533`*^9, 3.4351782516899533`*^9}, {
  3.4351783168749533`*^9, 3.4351783527039537`*^9}, {3.4351783865649533`*^9, 
  3.4351783888549533`*^9}, {3.4352881888611536`*^9, 3.4352881958971534`*^9}, {
  3.4352963190943537`*^9, 3.4352963229943533`*^9}, {3.4633933998912*^9, 
  3.4633934065992002`*^9}, {3.4633935812567997`*^9, 3.4633936420968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660182*^9}],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.4649460660338*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.4649460660338*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660338*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.4649460660338*^9}]
}, Open  ]],

Cell[TextData[{
 "In many ways you can treat lists as single objects. Many ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " operations work on whole lists."
}], "Text",
 CellChangeTimes->{{3.4633937005968*^9, 3.463393722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "1"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660494003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "5", ",", "1"}], "}"}], "2"]], "Input",
 CellChangeTimes->{{3.4633937333568*^9, 3.4633937338248*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "25", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.464946066065*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "3.1"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"v", "/", 
  RowBox[{"(", 
   RowBox[{"v", "-", "1"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "v", "]"}]}], "Input",
 CellChangeTimes->{{3.4633937518584003`*^9, 3.463393761234*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "3.1`"}], "}"}]], "Output",
 CellChangeTimes->{3.464946066065*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["4", "3"], ",", "1.476190476190476`"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "1"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "%"], "-", "1"}]], "Input",
 CellChangeTimes->{{3.4633937903436003`*^9, 3.4633937943996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460660962*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating Lists", "Subsection",
 CellChangeTimes->{{3.4633938289379997`*^9, 3.4633938307320004`*^9}}],

Cell[TextData[{
 "Required Reading :\n\n",
 ButtonBox["Constructing Lists",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{
      ParentDirectory[
       ParentDirectory[
        ParentDirectory[
         ParentDirectory[
          ParentDirectory[
           ParentDirectory[
            ParentDirectory[
             ParentDirectory[]]]]]]]], "Program Files", "Wolfram Research", 
      "Mathematica", "7.0", "Documentation", "English", "System", "Guides"}, 
     "ConstructingLists.nb", CharacterEncoding -> "WindowsANSI"], None}]
}], "Text",
 CellChangeTimes->{{3.463394419788*^9, 3.4633944460896*^9}}],

Cell["\<\
You can create lists in many ways. Of course you can directly type in lists:\
\>", "Text",
 CellChangeTimes->{{3.463393931508*^9, 3.463393954986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\"", ",", 
   "\"\<e\>\"", ",", "\"\<f\>\"", ",", "\"\<g\>\"", ",", "\"\<h\>\"", ",", 
   "\"\<i\>\"", ",", "\"\<j\>\""}], "}"}]}], "Input",
 CellChangeTimes->{{3.4633939573416*^9, 3.4633939613664*^9}, {
  3.4633940149212*^9, 3.4633940172768*^9}, {3.4633941046991997`*^9, 
  3.46339414359*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661118*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"j\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661118*^9}]
}, Open  ]],

Cell["There are programmatic ways to create the same lists:", "Text",
 CellChangeTimes->{{3.4633940606292*^9, 3.4633940707692003`*^9}, 
   3.4633941499236*^9, {3.4633944694896*^9, 3.4633944805032*^9}, 
   3.4649295278873997`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Range", "[", "9", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CharacterRange", "[", 
  RowBox[{"\"\<a\>\"", ",", "\"\<j\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.4633940730156*^9, 3.4633940765568*^9}, {
   3.4633941150888*^9, 3.4633941252756*^9}, {3.4633942411836*^9, 
   3.4633943558747997`*^9}, 3.4633945339706*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661274*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"j\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661274*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Range",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Range"], "[", 
   RowBox[{
    SubscriptBox[
     StyleBox["i", "TI"], 
     StyleBox["min", "TI"]], ",", 
    SubscriptBox[
     StyleBox["i", "TI"], 
     StyleBox["max", "TI"]], ",", 
    StyleBox["di", "TI"]}], "]"}]], "InlineFormula"],
 "  generates the list ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["i", "TI"], 
     StyleBox["min", "TI"]], ",", 
    StyleBox["\[Ellipsis]", "TR"], ",", 
    SubscriptBox[
     StyleBox["i", "TI"], 
     StyleBox["max", "TI"]]}], "}"}]], "InlineFormula"],
 " using step ",
 Cell[BoxData[
  StyleBox["di", "TI"]], "InlineFormula"],
 ". ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["i", "TI"], 
   StyleBox["min", "TI"]]]],
 " and ",
 Cell[BoxData[
  StyleBox["di", "TI"]], "InlineFormula"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "are by default 1. \n\n",
 Cell[BoxData[
  RowBox[{
   ButtonBox["CharacterRange",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/CharacterRange"], "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[
StyleBox[\"c\", \"TI\"], \"1\"]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[
StyleBox[\"c\", \"TI\"], \"2\"]\)\>\""}], "]"}]], "InlineFormula"],
 " yields a list of the characters in the range from ",
 Cell[BoxData["\"\<\!\(\*SubscriptBox[
StyleBox[\"c\", \"TI\"], \"1\"]\)\>\""], "InlineFormula"],
 " to ",
 Cell[BoxData["\"\<\!\(\*SubscriptBox[
StyleBox[\"c\", \"TI\"], \"2\"]\)\>\""], "InlineFormula"],
 ","
}], "Text",
 CellChangeTimes->{{3.4633944901907997`*^9, 3.4633945079904003`*^9}, {
  3.4633945489154*^9, 3.4633946334049997`*^9}, {3.4633946634505997`*^9, 
  3.4633946847446003`*^9}}],

Cell["Other (more flexible) ways are:", "Text",
 CellChangeTimes->{{3.4633943636748*^9, 3.463394366514*^9}, 
   3.4633944568848*^9, {3.4633944871331997`*^9, 3.4633944886619997`*^9}, {
   3.4633969425972*^9, 3.4633969549992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"#1", "&"}], ",", "9"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4633941870048*^9, 3.4633942370495996`*^9}, {
  3.4633943699616003`*^9, 3.4633943711472*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661429996`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661586*^9}]
}, Open  ]],

Cell[TextData[{
 "One of the most important commands to set up lists is ",
 Cell[BoxData[
  ButtonBox["Table",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Table"]], "InlineFormula"],
 ". \nThe standard syntax is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Table"], "[", 
   RowBox[{
    StyleBox["expr", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["i", "TI"], ",", 
      SubscriptBox[
       StyleBox["i", "TI"], 
       StyleBox["min", "TI"]], ",", 
      SubscriptBox[
       StyleBox["i", "TI"], 
       StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.4633940498964*^9, 3.4633940531879997`*^9}, {
  3.4633944618924*^9, 3.4633944667752*^9}, {3.4633947106562*^9, 
  3.4633947457094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4633940471976*^9, 3.463394048274*^9}, {
  3.4633969885236*^9, 3.463397012844*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   SuperscriptBox["2", "i"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4633970270088*^9, 3.4633970279292*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",", 
   "128", ",", "256", ",", "512", ",", "1024"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661742*^9}]
}, Open  ]],

Cell["The table index can have symbolic values:", "Text",
 CellChangeTimes->{3.463397357961*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "^", "x"}], "+", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", 
     RowBox[{"a", "+", 
      RowBox[{"5", "n"}]}], ",", "n"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", "a"], "+", "a"}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"a", "+", "n"}]], "+", "a", "+", "n"}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"a", "+", 
      RowBox[{"2", " ", "n"}]}]], "+", "a", "+", 
    RowBox[{"2", " ", "n"}]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"a", "+", 
      RowBox[{"3", " ", "n"}]}]], "+", "a", "+", 
    RowBox[{"3", " ", "n"}]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"a", "+", 
      RowBox[{"4", " ", "n"}]}]], "+", "a", "+", 
    RowBox[{"4", " ", "n"}]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"a", "+", 
      RowBox[{"5", " ", "n"}]}]], "+", "a", "+", 
    RowBox[{"5", " ", "n"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460661898003`*^9}]
}, Open  ]],

Cell["\<\
Table can swallow any expression. This makes it one of the most important and \
powerful commands\
\>", "Text",
 CellChangeTimes->{{3.4633970495196*^9, 3.463397071344*^9}, 
   3.4649295547194*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.463397073216*^9, 3.463397090922*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwd1Xk8lO/XB3B7lpRlBqnGDLIXIRJ1jlIKRUQRKpUlZUtp1zd7UrQgSgtS
hIhSyS1bljCDGSmJsZQiW7Lz3L/nn5nXe/6Y+7rP+ZxzMdx8bY/y8fDwmJAf
//u+f8lNaO2R6E2n/v/7/KaKZrrVXroXdOz0dLanO8JCVUkInX4WYkaWVsqR
v98vjVEQpEfBg+2mq/oUzsLxjadOTCjchWXlT8LOK0RB84zn7WGFZ7DR14aH
l3YXFn3lqg4qvIF2w6MnteWewaPaB/6/FWpAc3eV9jzPG8jJjfp6fM0X2LyL
cnNtag14AOvuQEA39Bt6HI+KbQKfXvXugpx+GEza8dspqxU6XduEP9T0g9zI
jxxGaSvYfY5cU9/TD1foe1u/trTC+rofZ3vlf4Fb9DtNjflW4M9Ll5CJ+AXv
aLWvV9t8hsQLjE1BB37Dk5t7FT6OfIYP0svuGkkMAtf/Nnta4wuIMkJVv68f
Bp9HhSEbT7ZDtUmc9qWtw7BO0fSOe0g7hO9LMVxpOwy1TveuXbnVDnyxReb7
vYdBwzNK4tbLdpieH/BovT8MFoarn1HH2uF3u/3TRr4RaD7lJ53s+w0+Jaqq
l34aAYvy6z1Brh1wtUB/7YG2EdBT1Q4fPt4B25mmRvO9I7CYO7d+//kOqFjk
vMNkYQTMVbzeCCV2QPHpWK+itaNQH9Z+tpDZAdl7pp69iB+FkSypguPwHa5L
1Gk8OjgGFWfS8xaLdMIbw5WFu3zGwCe46d/vpZ3Q4+oLs+fH4NUR5UdlMp1g
nC29Z2/CGPBms2QdlDvh5w7ni+INY/BpT54OFTphS8hg41njv5Awdt9kJKAT
JseXnrKVGYequ6Ar1tIJSivdFhaUxiH5jSQfq60TdpkVRGWvHYdFVX3smO+d
kH5zX4rwznFoTPlyaeBXJ9hqP/pYEjIOctMd0Rt5uyDbU1dec2QcRszZdlpa
XeD2dQ/B/+kf1OgPVGqe7wLR5K4T/m3/oNa+peR1cBfkO/ms+N73D24QUlUb
QruA/0vE2be8EzDYOz+xKqYL0j6/1fM3nAAHp+zC2JQu6GPTn3Y8noBuAU3R
V0QXXL+T7WD1YgKSeH8szS/vAgP7DYJv309A1g0B4fSPXRDRYud25/MEJFus
rPFt7AK15vAVVksmgW40eTixowuOMQdi35ydhA4Nudf6M10gFXsWVCMmQf/I
ibUP5rvgrbXQn9u3J+GtokcEDx8XxBoVLP1yJwGe2HzIEObC83pbQdXeSbDu
d7GMpHLhT23R2ds2U1C8jSiOXc2F+Ktb1fhcp+DiFjMPTx0ubLJo4vh6T8Fx
p7GvBnpcuFHzW88yfArOqmrQi9ZzQaea9oe3eAoeDyfNWG7hgn9lqJuv6jRo
5I5YFTlwgdazTeif3jTIHDeIZO/jQh2fSOYFnAbmEufCX05cWIUxI1GO05Cf
crR71pULbW/vXE6LnoYqE8qVUncuhLftVdZMnIb1Tn1w35MLepPLqvPSpqFW
3mjA/xgXYtalLCXeT4N1w+wSfh8umL54ktI2NA3h5sqBFYHk+zV4bj44Ow20
FKH7B09zIXlQo69PeAZay0Xz/wZxYVwjd/Vfxgw4ht55IHCeC8/SXxcv2TMD
Ta6HQsovc8Gh4uzBOwdnQDaKu0jhChf4u40FVpyYgXtaakEBIVxwoZdaqofP
wJHUFCpvOBckk6u/bCmaAdtuL5v3V7lQ8ubqpdqKGaBtVlb/HM0F789WirtZ
M9CubT7w6xoXKqksL9dfM0Bd1bt28joXAvRviff+m4FSn7MFoze4oGBnn+fN
PwuBdU8ZvbFcOBvbNnlmxSyUBxgW593kgkpu8r0FtVn4zGD2R9/iQnO9C4av
m4Wk56f5XG9zYbUYN+LWrlmI3nZtvP8OF76op2nK75+FZM4eZmo8FyK2uzc+
9JiFB1s64u0TuNAV9ksm5/Is2LOlfj5M5ML1tOdv9WNmYWus4ckNd7lgXO7j
+u7uLKjskfhdR/pnlw7f5iezUDfcbW2fxIU7PGPp1fmz4GM494hDerNC4Q5r
YhaOTmd2WSdzYWhj0CC7bhY6FuPSD6R3nJ/R7+6ZBXff4HXR97jw7+77z14j
s7DJo3tND+nUouALw3OzEDX3SHbdfS7YtJrSg0TnYEZAcfgi6blx/oo5mTlY
b91QVEI6k1LlEao0B6eeUwMmSO/VixQT05kDpd/HVqilcEHA1iI3zmQO4lrN
imxI5/kttpPbMQfRxrRt/qQ/JUmfzXaYA86szdlo0n0V8g82H5mDYsXV6+6R
5hliVLb6z4EE48C5VNLyy9R/Hw+eg5eDiTsekdbfoiPJFzMHEwtxqXdIW58w
NExImoNf1ouiLpM+lrDJRevpHHyyfzd9iHToh60hHwrnwFrk9JQR6ZTfVs8c
yudgvFMgXJh0EXVP42/mHBxhbXhUT75PE+wfv9wxBxlWw5ZRpAe93JbLDMzB
JVP+CGPSwre9TLOm5iBbfq/d/+qnWOLngYvmQb2kJS+EtMnPoBg2ZR58rx1L
XUbaQSr45THFecg7sFj9CdkPP5PwtgXteZCIfrlFnfRV95iF2xvngd3m+vcx
2U/ibbIlsW8eMtw+Lz9H9v9Lz2P/Pe7zUBBK3G4l8/J3SWZC/8l5CElsz9Ak
rXa4qFv6xjyYe6g8ek3mbXMMIfLs3jzIZSZEDZF5dH5dpb0pcx7uD3yUoJGO
E2Of96ychxP7NXgOkHmefjki/X5mHgrPRYX5kfNA6Zg0shVZgADjA+Eu5Lys
EeY5+ENmgeyLqI5pDBcOOy95Lqm7ALfuOIQMkPP3SUDTzN1zAZoVl+xuDiP7
uUb32MypBehrLSZOhZL9dDSKjQ1ZgLV387lLyHlel23e/jZlAR4uv2m5ipz/
FPsjgUvZC+D4eBWbe5bsR7B3Uhp3AXJu/pY0PkPO27OAUqPhBRB49mHpVXK/
CASjUL4gD1oFetovPsmF9c27bNvpPPhExdbosTcXHp33/qWzlwczCuOmKfvJ
/VkqMhnhwoMx24fseRy5UCrwVPD7YR58Orq8uJvcn50xPfQYPx5M8DmXe9OW
3KcPXfb2R/Gg0S7bQ3E7uJBUYV3xqJgHRU9knJY24IKGyB/WZBkPEgpzVpfJ
ff1m57Xv1jU8SCvZadFL7vPPnOrpOTYPnqgJ/JCgyQWZftO1TkM8GPm8ujWF
zoWb4vopUoq82JJefdBQhMyPbVOWlxovxsU43lQVIucl3u9N6RpelMycE5Xg
5wJTIbvFx5gX2XLiX2pmu2CJropY3R5edOyb1+wa6oKrDnJnQiJ4Uf2OV9zD
li648mB2998BXjQyU3kXkNgFNjpF/ppjvDjjeD449HYX0D6cjHOb4sWlEjfo
N2LJ+4z7i8kU5MNj9Cq+G5FdMLqqzTqbxocnIqevGZ0h7+vnhTvdbfhQ+m/5
kLFDF5i+8dnx+SUfZvR82SssTp7HQsNr6Vs+vFRbU7hBuAvav/RGbivlw3gP
n63u/F1wZta5uuATH6om2go+m+qEF2BpHtfLhyFu1/d96+0EepXqVgtZfmwb
Pfud/30n8DR3YvE5fmRh61MX904I7S95dO4/fnTN2qpjerATRHju8xlF8qN5
tLjaSqdOkFrtWFF4hx+te3adLdnZCasiWOa5L/ix6z2/XIZ+J1gYl+163MeP
gcf5F6R5O+FWaqpzpK0Adtw5JP9P7TuoBLqf2aMhiOJfVU4tWH2D1Ru+2z3Q
EcThPxxhu03fQJ9nn/YvA0Gc2rDrdLL2N9h8bUdf8BZBVM4nFkSlvoFrmtae
LGdBXPJK5NVRTjvEt4xq890QxLjqIjFJl3YQXBf8I3dMEGv/PTQ+7/YVesYT
HMTeC6HaIu0116zbwKL32MWb/sK4dotTWMf+FtjVE6tJo4niGb1ik3i5BvhV
7na5OlsMd9Zr904Vl8MaSc7KLQfE0Uv8j7Z0wwsQhfFD7WNLsLHbhAjOvE6Y
DzpNKNpLoI/jTu2G9iLic9kRXictSTQulHu2+m0lMWz6Rf6itiTadcbvj/hS
SSz6YK3/UFcS5SiW/g3TlYQBscGjb70k6jnIX1M2riJuv5OoD9gqiZmftH79
eVtFWBcUJ0a7SqLDcq2KoVcfiap0is77WEmUMBBcjQ9riMLIClf6uCSamwgk
66+rJ55a1MlFTEqiYfIbVpVtPZG0uKlpcEYSGa1bLcGvnrgc+33bOz4p5GmW
/MTNrCesEqfXOEhI4ZYfD4+P0hoIbobOQrSmFGaUuaar8jUSSz7eezBxSApp
0u5lZk5Mgjcq1dH1qBRaqFafOuLBJP5aZEpXekph15UzfqcDmURbw+uIm75S
OObXq+h/nUmkcZp8V1+Uwvnt3Y2lH5jEhj5hPJwohSlHXwtXrGIR7oKnOhsa
pJAIaeOs7WYR8go1rTMsKWxYXXG9YZBFNKxf2ajGJs8rS3npOskiDI5Xvr/y
VQr/qF/ScRRvIoSaqckGP6XQbJVNzCuDJiL94Sv7FF5pLAgrdlka0UT0GE/W
ntCXxrimkT0KtGYi0d6qLMlQGl22tespqjYTVr4P33zcII072MtF5XSaiYLH
258yTKXR1XzgRrtpMxEqcjeMvVMaJcRfPas+0kwotxrhRg9pzLCoPqXxtJk4
HHC+cHGSNEaKCc/yrGohDHQ7CtXvS2POqpc267VaCNFRfLXtoTTmLf9e66bX
QrzwF3p9+Yk05gs4qsaZthCzfnFFf/OlUXxRsbmdSwsR75vxrr1OGvcUPg30
vtlCeGmLFk81SONHlxf6LYkthMnQ8WKZJmk86P5rRvtBC9Hto/ve5rM0ThQ4
3i3NaiF0fN6XVPRIY4K0b/fWihai5njzh+dz0jibIeL+fbSFuKdlUFbDQ0Hx
zEddQZMthN9AYlkfPwVVj+jt5J9vIWSOu5bTRSmob+0zNCrMJty8+ytuy1Bw
YnIC1tHYxKzXwscL2hSsuuOksnUbm2hUd6u+q0vB1pr1Cost2cTj/orqV+so
mLN8dKLSmk3s8LpaM2xMwcP0H1ulHNlEvCe17sh2ChbkLoC4N5vQ9tBssDpE
QbQ8uOraNTbR4aXgm32Egq8qF+icWDZx7bi0xBJPCu4Q8nogcYdN9PvP7G70
oeCm29OKe++zidQLdezdFyjIIn4ba2SzCdtg4nR+MAXtQ9zNJl+wCZ4rL2Wl
QygYn3ui/lUBm3CJSHZsiaKg3p/ig4LFbEL2pvc3hwQKrrarjP5Zwyaqbh+4
9DqJgoPClQkb6tlEYIKdglwKBe/QIpQvMtkE657xobY0CpbvVP3QzGET0Rli
vfvzKZi4vH7JRy6b2JC5EFZcSMHC17Fq93vZxM/nYyor31Dw4dGSysM/2cTW
/K+eHQQFj6gfvVY2yCYWirMGDtZTcBWv6/6qCTaRQzyI+cCk4P6krIf0aTbh
XHZrjWILBVcUnvPxnmUTbz6e9+v+QkFRdteTJh4O4VnrK2nWQUHGLn3pIT4O
IVN/OD+ti4Kaay6KzQpwiJNNln+P/iT7k8FK/SHMIRTZcKfqNwVDDXu3Voly
CGarnoHqEAWTZReC7izmEKu/LT/zc5yCUdKlsYISHOLHj98zx/ipOJf9u1BL
hkPE//p+r06IijElblM3ZDmE2WDzRi1RKu6KbuR0y3GIR6PvggclqKi52Oio
y3IOYTOeS99FoWIJbdWykBUcYn4i9UOOLBUjM3qP313JIfbPRfP70ai447DW
dIIChxDluZzGZFAxJOePwWU6hyjiC9y6dhUVBe7NLXNkcMh94dkXp0bFWKWl
6YqKHIIq7BwxqknFvlpuWzvpClEbNTttKralmr6NUOIQAeJmNS91qThhMW+u
pMwh6BLrj1EMqOR9+jc0l3SjlJbYKSMqLl8hdlJrFYfYdOJEf7IJFV8VHzK+
RTrnY87HMqBioJ9x/gBpmuJwev9mKjbuNmpbr8Ihrl9YGyqxjYrJOfz5QaTn
OQFuhjuoGCpksekZ6RNrC9DVioovRcqD60m3R4/TwqypGJCgdaaHtFWfwVyW
LRVVii3V/5AuxjNfm+ypaPBi4PYv0lrJb95M7aPiOQ63uI30vfHpBLozFT3f
Cqe+Iy1mY3La/AAVeZfijljS5zIv7vFxo6L7c/+8vaR/CRC6d45S8fiNmG+S
pJ0O8EgWe1LxLedqYwn5PrVvTIe43lQUK/OIciW9gRJSL+JLReMX6uIjZH0y
fSqydALI56/85nyatHyN4NW9p6ho9PjOuT9kfaOUzD0vnaHi9uETno6kJy9G
bks/T0Xvpgi112Q/PD/XKH+6RMUO9cXvF5HeHmPVtSyMiqKrlh//73/9/RFD
YCQV+QflozPJ/qtubrzvEU1FfV/fiCoahxCa2O1UGEfFazd2MVrJ/JzefWt9
+20qOpeGl9eR+erLapHhT6Ti5Xofq5fyHKLy4N5mmxQqBv37t3w/mUf9d4l5
QY+oyPl8wWM5mdc06pcbKWlknhiXUhuoHCK01tlqIJOsl7/YhLg0h/irnKIh
nUPasFA6SZJDHA7+Lrwhj4r/vlA1l5HzsFnfrTLiNRVNuCF7hsl5yb+emprz
lorPi/u8t4uR89Xf8x/7PRWvuGRF3hLhELwpHpuUKqj4RG/3Nz4hDlG66MTr
EiYVVznZm26bZxM6bjl3epupKDn1lWVAzvfD4qGTi1upqHbR/ZI8Of/B/gE6
Tt/I/i3bb/hunE1s+hr0bLyfimMx4hfdBtjEu5wryVr8MoiuthKWrWxCyMpe
PkFIBoccxb7rtLCJ3f2qd3lFZbBG5V/FIhab+KFUH8+RkMEXx1J+RNayCem7
sjcv02Tw15oBvjZyH3qHPI9sMZLBa+ytYQUpbOIVPXgRbJTBsEnn79lJbIK3
ZHf4M5RB07DKu4nxbCJh8l/IJXMZvNQuuWXzdTZRfsI0WM1eBp2sTUf7LrCJ
5fs4py74yeDAZP66c3vZhPv40799J2XQoNZ8JNqWTeTdPH9yd5AMmiXtO3Bj
J5swr6f7q1ySwcX6uZ7eW9jEyc3ex5nRMjhy7lDtmTVsok6L57Byhgy6bh96
PcjLJs7zath8+iaDV6Ocfb1SWog+M7HPKl0yKOaybfJrQgthEzlw4L8eGTQu
v+ZrGtdCKC/N9TX4LYMrjlab9oa0EJ9W6N94OCmDFSPNinGeLQRt/aaGQGlZ
PNdb7Bqs3UKU+dhardwhixqM88HdL5sJrXy9liArWdw46mBZmtVMxI9TnJus
ZbHcJ/hzbGoz4X2h1TvCgfTpSVvxW80E5apz9MhhWQy/3Hkj0L+ZcE93r628
JIuaJUPn+LSaCdH2c9t9CmRxLxoL2SQ2EQZBz8RvvJbFe14Lso43mohDUp+b
ct/KYuZLNdt94U1E0fZ1LiOlsuhbZeVoFNhEuBcO+QfWy2LDV3uPcOsm4sP1
I8nn+mRx+zbmOluBJuKM6a4/4XJy2EeYan53ZxG9Txi3H1yQQ443J2S3JJMY
CO2a4r8sh1SrB4qqgkxi1O3RAc8QOTy85Wtg30gjwaPA0Fx7VQ47eeL+fStt
JOQT6GVlCXIY3ZR377dLI2EToTDcmy+HOxfW7795u4Eo9lhppdUvh9dM6zvj
/34ibqstE3hjvwyndjnJ9YTUELFJ7h8P0eXx1eOjD+2jygin2y4Ni3/Io1Bm
dlKk3yti0ix96kHJcnQfeui4OjyR6O7dfKYsYgWuDGr7/qPmETzeuHZ5/aGV
mKssuvn7niLIDjsl6bGahv0Cb0QUX5bBgInLlTAdGp58ybtUsa4MtP6ajaXq
0bAg9PpBSncZZLpR2J1GNPzXWl/YKFUOT+FlotM2Gjqwbasf+JdD2tSwwq4D
NIxbJ5uRpFUBSSeOr1kXR0P1sO98TxIqIcL+sCX/OA1pTpcjI6EaHlu3Ox+d
pOEnoghP2ldD8Q57n48zNOwScQ6y8K6G0Y3mcdF8CmgUxtQsia8GZxXNVmkJ
BdxgS9v+ZqAadCdG3ZQ1FfD5qh69sds10JF45dzWQwroo/FYgs6phambM9EZ
RxTwlY1C4JX+WqDEBN4X8VRA1kwxq3G2Fnb8515a70P+/+qqXZpKdVDgZSHk
cEEBH3a7L+/xqYOrG6Ruuico4NL2i9fs+D7BuvZHzyLqFfC83D2/Lrl6kFjj
OZnLVMB4nqqUALV6GAheY/65WQG3mnUcHDashzSldz1qXxTQ9vX8lTyHeqB4
tyjU9ingP8scvx236mH6Ar+lEA8dn1ddyqgRboA2MYMP25fRkX4gruhrTwNU
6d/92S5Px2mnNs7ISAMUuMwu9V9Bx+s33+WNzTdAbG6Z610FOo4vygh7K9cI
2+2sZ/tX0fHS0q38eywboSjJ0zBal441dc6eec8bIVE9Obveko5FjxJDJ7WZ
8HdsW3rITjo2ywiuy1zHBOuS0XtG1nS8LOybYm3MBCE7i2vptnTctn5T3Klt
TDh1YerYRUc6XnWsz1rtzATbxr1qqz3o5D7tPGsVxoScu/z0bk86ums2XVl/
lQkiR3Jl7x6j41oZ1gq5G0wonRRaJOhDx5yKtTN5iUzQVnzV2x5Ix8cL4io2
WUxYfIqSeu0K+T6nh07pNzDBE0qTNofScQ1bKnlfExPKRY7fnAyjo/VbI10/
DhPOpZT/dySKjgqawi/OdjCh/2PAQZNYOs6NcN6PDzLB7CZt32gcHc02LDIv
HGHCQ+da66e36OhXuNTAc5wJ+0YYQEmgo8adjfh0lglV8qyVA/fpuHmjRFes
KAsUey9QHz8gz1NVFfhbnAUXc9XE9z2iY0Sz+xEjSRbom12eLU8j66MsY5cr
y4LHJ7S/JmfRUa1fxJZfmQXBpTGJlm/oGPzkqJTlBhb8+lZ6e+otHa+dnaM1
mrDAYWYsNqOYjlsuvxraBizQMnCK4i+lo2dF/FdJMxZ8zlI5966Kjg6HNFmU
nSzYUuN42quajjrfs0cNrFmQ03ctQLaWjj73NrGtdrMgjDF27GQ9HfmGUtrt
7Fmgm0Ds12yh4ybVoqEGZxbcLxjd28Ymz3OvkXLDlQXCTav2RLSSz+Mbn9p8
kAXfF1+z6v5Cx8SGcIHwwyyw0CC2x7XTMd5XRoN6lAWvzEfNoIOON4Onlya6
s+DalX0bk7vo+N+eQyvPerFg4kG00Y5uOmr67djaeowFbu9L1k300HHJc5s1
6sdZYDSpvMbuJx3LhrvMnvqwII26T4P3Fx2f2kufZPuyQEIvWiX3Nx0dw/IP
//NjQd+JEZrYEB1jr3fHSJ9kwe5o5eVvhul4JNW1emkgC4qf7pX1GKVjzNiy
jwuk1aquSlP/0lE+O+Vq9ykW3Op+v7R8nI7f116SfneaBfM8I2L+E3Q8J2/r
Fh7EgmM0ZWGFKTre0S8O2nqGBeh4lef8LJknM/6plLMsyDr9flZtnqxvk5W7
0TkWyNwenuQs0PFDneD9j6Sv5CmNh/IyUHJ28v6O8ywYbHAY0eVnYNyeKS+C
9L6BqMFOAQYuTHfxql9gQYXI+/7rQgw0MYl3DyetrTrcayLMQLGbvHdbSSeZ
KXF/iTCwPl02acVFFgi6OXQkijHwvUnLMXvSfsFRX7aJM/A/C+PFV0i33yvm
/F3CQJn+fcGPSZu/HWp6LMFA+i7Tylek81sVG22kGDj9VeJ7CWnauH3dvDT5
PMpA/VvSUVJRH59TGfgsbuFmJum/2sXlTrIM9JG6rH2d9IGdQ4TwMvL5JzPT
jpKuPaZY/EqegfKZ5WM6pNdF2hcdWcFAVrkcbZg8/8P0yAIpGgNv/Z5XTiUt
Vv7uRakCAxc5N4tYkD7d+ee5D4OB30/M1PeQ9eHOMZ6tUGKgWmRPwEnSO5fb
p9cqM1BRWWB6nKxvYs+a0v0qDBS8m8B/mnRPtvDXAVUGft4SH/qb7I9OEHf8
ojoDl8HmSw6kL2CxxFJNBuZ/7B55RfazWiRe86EWAxXUazoXk6Y0+25bu4aB
zjXbrPaR/X9+VOmC3VoGLn9zLqWRzMvkmrn4Hl0GCqlNRsyQeTKb5OSd0mdg
gOK9sRWkv169+iPBkIFmD9T2YgALRF+M2LZvZODWbS5nRcg8O5ytO3ECGMgd
HrzfReb98eb0yHlkkPuwxybXm8w/e18J3YyBqyxveWqS8+I5TagftWDgaKnF
9SfkvBWU3zX7Z8lAFTUte003FvDEnDwQsZOBwgp6RenkfCYqqN55ZsNA60B+
p/MuLPhodp3njwMDX6sZmmY6sEBqiefy4H0MrCxOW9m+hwWuraYGEk4MrOI9
nc5vx4J/XuPeui4MrDlsR+iR+0PlhnPr6cPkefGlvZw5CwL2GYwuOkrm70RD
1QS5f0oYEuJ33RlIOSj099NmFtgXlG9+58VA7E6M3reJBaFtGjkLvgxcV6vy
568+C5iPBWpi/RmYtv3bpSu6LFhxvKObcZKBouZd3wR1WPByPm6Z2WkGGvTv
k/ijQfZfaSo08gIDY8LmrprRWWDq83G/ZBQDH81XiSwWYcH05/5tFVcZKDKb
+r5AkKzPlsW6QdcYeOSFV/puPvL8y3YLf7tBzt/aHJrnDHl/VHwpeBrPQCeT
uuXC5P7/vOyPOKYxcFNaQJAseZ/cDJWYGk1noF5y/0rBWiZYDun2pGcw8FJZ
vd6PSiaUVAS9Fcsi8+pT/z7yPRPSfHk9WvMY+Ha+553pcyb4VVJKfQgyr4ab
+G9EMEFDxzCL8YGcP9ej1yuvMKE7yTG+pYyBS7rUPw1fZIKDX8rxDVUMzLZy
9V8VyAST5WrLhOoZmPLoa+eig0wQ9jcOuP+FgZ6P7hwoJO/fByvclD+NM/CA
64T3s7xG2KCnucZtgoFrX8e+V33SCC07/hpOTjIw4kuC962kRhAOCrdUniXn
Ra5mQTekEfxYmQEX+BQxumxy/pZdI2D4WKnWUkXM1e/T6h1uAO5QqEuMmiIy
z7OFBGkNcEFol4eShiK+oiVHo0QDyKyU9X+jqYhRglsSjvE1gIXFs9DeNYpY
tlbd+2pfPeSn1WdtXKeI+8dnadPZ9RDiKDM9aKqItkZfUx8b1YNyeUb8rv2K
KCHKf/GQ2Sdo0JpMa3dWRJOrruMs/U9wJn77y2Ouiii/fapPd9UnqPPqbww/
pIjn7UYOVAl+ggAJTRHCQxGDJFqZ+lV1QLjknNcOVESXdDdhI7M6cJosOCgR
o4hfaLybNNfVQuzqMo2mEkU0spBR0xv8CO5jAqwaDSXk9k64ltuVgVveKD3q
hhKqMeV9BqeL4PgVu1mLOCXE4dzKlooiOGVX0Lr4lhK68L8Qz7leBJHjp67H
xivh8FycrKFiEeQYTc0k3FdC88E3LzK2v4apDwucJ1lKaNe/fVb1ViHENi2O
qfiohIpKT40aFPIhKfWEZ3iNEnaKHCne+jMPUgMbtmyvU0Lb2wbBBS/y4JVM
7HRdgxImVOn6nTHNg3Ynac9mthIm2admp7i9ANXuZVu43UootnV0JcU8G3QK
ztHSesnnPyneLt36HDaEfZ06+kMJF23eu0vI4zlYqd5/0f9LCe2fyZjWhGdB
gDedNjKihK3R71Q+VT6DCyb/TeWPkfVonow6af8MwsS5LYHjShjGdjgt2fsU
EnNToycnlVC3JcNUV+ApPL4s4PF2WglfqOl9KryVAVm7j26+MKuEMvuWGq5V
yoACxaqVm+aV0KxS6HNa/hMoGVOZWlhQQk9VroDk5ifwf4wVKG8=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13c81P8fAHDb2SMZd2eeUkJpUvJ6ZZSEFpWMJLOkEpHRQKlsRdKgojSo
jArlg5TNcVdkHN+QjDKz4/f5/XP3eD4+d+/P+/1anztV51P7XHm4uLho5Mv/
3+9fcBbQdYk0fK93/qSFz5RBOUvF4qCKJ3QmzklnFuYaLn4pDlNROQ/PS7S5
dxeyDMUT3r4WbgmFJWuODvro/jS8XxKtzK9yHXKPh7PlCscNtYZdYhbdYyEo
qu7Gs6YFww7xBwvzzQnwPraoa52uAKg/Edo4O5cIWXaa4hnrxcFrq9/JKeU7
kFlzPbuxYAnksrvSJ4zvwXTSimiZKXmYPWHRPuqeCtoD9F9yTUqQxt1+fcr0
ISjoPpPyylADk7r4ZZPNj8AysCgtc81y+JW8o3TCMx36HiycIYQ1Icrln/34
XAaUhMUuy16nA6w5j1sjys/AfUO4E1/BOjhXobRm+M1zoEbIBL0z3gjUm+ya
38Yv4c0iP5v5Vw+cNZF30P0VXLAXD1vNNASeucCGieDXMCL8/oHePAK7y0Zx
wvQNaNm5LlLSjSDgpUjBWHMOTHLPrczT2Q7mCT8FxtJyQTBvpDxKygzoAaXW
o555kM26cEWSYg4lxv4jw3P5EN8nc0tmjRUItv3Q+K1cAH4WyXx/8/dDS8lH
v6FfBTBa8vvx3F9reP4k+dPgm0IYbthk0wQHwMrH6siA8QeoWL2+cGjkECQJ
FSb1uROgnDHc9LHSEfL8zX3OypdAhU/++6RVTnBvYJPCeHAJDCT8J5475QTe
TGn3MdNSiGU/sLn9wBmk71XyjDaXQRyLt2ZxuRvMib99dtrgE/wu1na1XOoO
PZcf7xlJ+wQ5dLpxEMUD3rpfeDDsWQ4yjJBTfv884fC69Zv/zH0GhdlwtyZV
b3hYnXpmULkKrvgdGKx7dhYmkvM1O6Oq4DyHTd1k4wvb3Wu6m2aqwPRcyzl/
Xj8Y4p2yKWRVg1qiZkGQxznQ22q1+XpELehrt8mEW58H5qt5Ho3hBpinBLVS
8y6CNAg5iukwwUbwRazd9kuwZfmtzREuTGiO+twqmXcJYiaejQc2MkFnH/vF
q5uXYX38V1fnF43wyXPl9vxjYXCxWstc9wgLIuGgd+L2CMh88275i0QWAP/p
FJ2qCGhKNuJdVsuCrnN/gldaXgN190Mf5PXZEMoy6DWyvQ7VvOE6XEu+gpZn
T+TM5UiQ3dom3fDlG4T3GyXHCMdB9qvrbV46rZBdt78jTTkRBqQHosyPtkKf
adnq76cTQeOcueGKW62QudP/WUZZIqQZiDzsnmmFPcZmxrPuSZBQFeV2+HMb
KEzw7okquA3numNHd9h3wLM+qdvqASmQKlITJmXaBUs9DeJr16SB4dYg+0uO
XXBqQ1CYn3MatHuv2jDs3wW7qyzGXW6lgXxT5M/a512wV3yiVnYmDeKTLXZe
k/wPDu6+01f2+SGELasXX2z7DyKbjdRUvB6DOzTeGfLpBoftNt1cQ0+A69Fk
YVtkNyTHbuldsuwpJPPR26vTuyGKdfi6m+NTqKxyU3r2rRu4Ymy0qhufwgrr
+Ueum3vAZnIVd0RRJvzy0HjJ4e6F43teX32X8hyOJ4QUM+N+QlWy+qrRq9ng
3buyOy+7H+hPxARpEbnQ5fidUlrVD4Fu969KZOfC/pZrOnU9/XBt+4HHjK+5
oFfTd76XOgDKOVnGzxl5wPsmQ1I2YgDupjUI6JTlQXKwqqH/kUH4p9keOsn3
FkqXKNzRl/wNIXOr6cVp70FYNVyjU28Ebq0U++uvWQwxkjWaD53GwSnMkmFZ
WA7ObdYEb+0ktBmIC1fsq4Ezn8OdT2nMwiP5E3P0RSa8OS26X37nP3DrvWTr
IMGGh0EnBtYc5MKqHYq7zFc3Q2jq/N6JIW78d3/Pr9yq77Bnzfszq8a5sfbi
0q/LWN9BqfRsvPMMN3bf6NgZ3/4dCn8MMJn8PHiUzpVjPfwdxpZ9352lxINP
MoVqomRawfllvqXbHh7MeKKe+sGhFbYVeO9syeXBGuv2kOGBVhA31/SUKORB
f2+bA1fHW6G9tffa9hIeZI8XjC6db4WAefvKvFoezF+4Zass1gavYdeO+F4e
fLAj0axVpw1UvmiYmsvxImPgyLXB023AxerCD4G8+O2a7eX9w21kXRc/DLzM
ix/dhE/dn2oDIa77PPrXeDHu9wEuzmIbSGvblucn8mLgFvExI8l2WBbRuOPV
a14cNDXfe3dNO5hvKbN69JMXoyc5opdOtcPNx4/tr+3jww2Wr1UHe9tBvvDy
x+22fKg+sD1ifqgd7jGPKPE78WGp/6Zi3ol2ePKP1nX5JB9+HgqMGOfugPcH
bx0LusaHM3bQflCxA9pFrhz3LuZD1iOvnTr7OmC5r1uAtSY/XnxZ5tCf2wHa
mzv3p67hx5tPHHbtKOiA9VyHVg9s5EdNgarCu8UdYBS18+dFY34s9nkjtqKq
AxzTtaxf2PPjNfpukfqODkhij63mieVHjbNSubv4OXA/5YSIZSI/ullaEhLC
HEh36vl5+y4/1vFsFq4W50DO0Nf72pn8+HtQ1kJVngP1fAUitqX8KBeWJnlY
kwP8Gy72vRrnx8obj9ePWnBAdG6qbHaGH/POm9rI7eWAdOnpB6ZcArheoPbc
OhsOqFg627SJCuCSrsYsSwcOGLiafhJYLoAjelxXhU5ywDdRJNXhkADecZov
u3uDA0F24YGZjgJocUzWRCWGA6Gq/2zGXQRQrr0kOiWeA3FZf0SvnxFA0+++
J08nc+Dl58bAvBsCSFm3n+dhBgd6/t4+IPKRvF/L1jzpYg482rbubMcnAZS5
JxO2upQDR6LrY19VC2DphREZLOdAqzp/1f4WAYw/muBjUM2Bxv0+W+6NC+AV
lw1ZD79yICZV7JD3rADyZeWtsm/hgMVgpi9yC+KXug+7hds4UBnamdUjLojW
LzBwWxcHit9YqGhrCiLV7ssUdYADwf/6DBbXCCIq8W3zGeKA/s4w28ZNgti0
wlLm4x8O5HUVJPiZCuL8fOsu7XEOPJfQ4C92EsRduqnp/nMc8LArU41zF8R7
nu+7j//jwLKnDobO3oJ4asz55t5FDqQZ3vIXCBZEH9GdejM8nXD7JPeA1W1B
nKZrm74R6gTrgnsCqg8Ese7jiXwQ6QRpfj3GeLogznVWXSgV7YSYe972t3ME
8TC1QipVohMsfgmd9ywQxNN/Br/OSnaC0PqMxC0lgviW2PJrp3QnhNe01XfW
CaK3QdlQqUwnGMn5D75hC+LLUyXfB5Z2wqKzNCW8TRDP5QYIC8p1QuCs2bYV
/YLYvplbW0GhE/S29zjMDgtilnibggS1E/7GXwysnRREfrlQnCZ9euXb3NN8
FDwwkaGbTu8EHb+9TCMRCmbd9Z5yU+yEwZKhIRlpCuYo3/tNV+qETNFrQn3y
FJTR6pf6QtrtEGN5gTIFbT/KOzsrd4J6erFR5HIKXlGbbBsl/WPY9oiDNgUz
FqxDfFU6IW3L36DV6yl4wVzKZIC0Q0RcMvcWCiockNDZr9oJVNaqfNY2CppX
b9F/RbpFqaIxw4yCO55HHlsgnXTc+Y//bgrSbeafoxoZ77f/hM0PUHBNxE2x
c6Slee5o0B0oWGl35PoD0g2W603+HKPgfqtz9ELSUXcanEqOU1DAYKq8krR5
7/GQhDMUXOkqdLma9PYQxkuTAAqeurGQRpA2WtreOnmBPG/YjFkmacOsW0LP
rlCQJ32ffzjpzaaWenZRFDwhdVzTmvTGDn53sZsUHCCeOsmRXutXnEjcoSDh
FyRfT+5fR8y//EwaBb/W2O8JIK2ZsXqc8ZSCMzo1ArKkl2/9pfoti4JjXZab
n5LxUfuatudaHgWvzpztX0Va6aTtxc1FFLzjzpZOJ+NL5ZfOHiqloOaYWL4E
adn71e0PKinoql9R703mR3pDmMjeBgref5ftWErmU8R1wiO/nYI/b/S3IZlv
yr+Xt927yfOplH45SesEvkTXLwoDFDzi3aAWQ9bHfPk3xoUpCiYZD698Jt8J
0/ax+9YsUNCFu7zpMVlvExM7Lv/gE8LSPptf8bKdMKRewNkuLYR8u2NszMh6
/fXhjNiMvBDWyW96IbmkE3qsNQ1eKAuh94OHnrVSndAefveOhLYQPjGRU1Qi
+6G2J8S6ZYcQxuwitmuS/VQZvDHshpUQJnOfr44W7IRymeE3BjZCqPYl4HUP
fyd8MHGSeOgshMT4ozQvsh9fphtVe4YI4bOPlVy9sxzINJibpoUL4WGHR1e6
p8n5y87VqL8hhNLz6PF1kgP3+JZdWZsshFO7GaY3xzgQ7UL2ao4Q2tjd3O/f
z4Eb84R3VgH5/fO+HyT7OHD1VsD9IyVCOKKSeOl+DwculPfPfqoTQlOtfoX4
Tg54q9fmR/0Swh8DvdFdbA5Y9cStUlISRsIuIUTlIwdqV/Ww7dWF0fNsmZBG
IQd2nd104a6mMH4SvnZb7R0HzHg4TPlNwqjf8N/76dccMFJZdW7JHmH0mA6l
qaZzYIP95xJKqDBmz9UXOF8j59lj+eM7rgnjd79TkQXhHFg7eGLJ1RhhlJlM
cuW/zAGdQGk33rvC+P//VcHnObAi+YjIQq4wvqHnHf7pyQE6e8ZmvFcYrdxD
nLLMOJBCs1zUHRLGkbOvltiYcEDhWFrm6TFhjAw53D4KHJAd2z73e4Hc352V
OcKbOCApeSvtl5wIblRwiC5Q5wCvhc5gx04RlKLo84otdMDAJ+dLlVkiGGZ1
QudWZgcox7ccj8kTQY9sZX7XRx1g7WhlY10kgvHyKnor73VA8bS+ZlelCJpL
cH2IjO2ABG0p9lS3CH7r+C+owK8DttwmNDSoouhwgW++ADog6ji94cpVURwZ
sss4Wt0OpZsSCnZFi2LTLtvpR2XtMMlHSZe6JYo3hvsWmgvbwSl1POD+Q1H8
rFW0TvFFO6xnV6vlfxDFt+18d2Qi26Fj6/lzPWOi2P3YZ1+hWTvoSH1TND4i
hicvXlGeK2yDn9E/QxNdxdDRip/rUE4b3Bee6us7IYa/KhTinz9rA1E++Zyo
ADHcJV7ctCa5DQYmbbd/ixfD5nHXDWW+bZDR3uHtWS6GRq/eJs2tagN6Zi8R
u1IcA7kZAz8SWkEY/h5tHxdHfXaklbvxdwjYtoLydlYc9WKOLT+66Tv8NLbL
juWWwH1GlxT2rPoOZWals0YSEng0Z8lxsSXfIXBf9M1nmhJ4O4LXWeBHCwy6
Lvt87qgEtmmFrp4KaYHaKJsVUg0SuMDV9IU7uxl2/D48pWYjiUuL9MK3jnyF
ljIX7sNaUujs5fFgVrEJ8q+VO6r8lULt0KCbR6xrwY3fr6u+Xhrp29uMh1Z/
gmM+QfmiKUvwo2vZs9DPebDafVW9xVEZLAgddi21jYIGaS0RP/2lmKWLevqi
WURRduhdLV5Z9K0qXypkWkwEcWvuqe2QRf4m37WPKr8QP01EWpb/J4uXMr3X
hvR8IfZcGzpyuUcWPQMeL5hyVRDqEq9ObRyURY2m6dK0TRVELX19bNq0LH7+
4u58PqOCUNIzrPddIofMCxfTnodUEmXe+ywUd8phZnjRspfK1YRwe6CZd54c
StxyPrdLo47Y6P9MLPadHEZXcx5mGNQRR6Vbml4VyqFNrsOy33vriPdmGxxG
S8jvrwyUMAmuI9zyh8/41smh5vWFU5LMOqI0xuVu4E85vH1/4DLNt54I2Gb1
56q8PJ6pbl78mNVApLcH5z6lySOsKxLOKWkgGvxfBFQqyeOLlY22CawGYnk2
hVd4mTz+lmany800ECzqJ7loXXmsfKcqlKLKJHQmNm27aS6PI+YKFd88mUTv
E9VbqcHyyNwKWe/GmMRQ+H8zvJfk0SKhtiZ1jkmMOT884hEmj8UaGl+C+BoJ
LmXVVbo35NHEIGSrhGwjQb2tUlZ2Wx5DbAbKHus1EnsilEd6c+RR1XHs8cWg
RuKDu6KFVr888uoIrv411Uh8Mu14EzckjyeSv+mZLDYS1Yz7cn+H5XH1N+6n
NwWaiOZOevfHSXncOnHjsejSJmLsID1wN58Chu9fKHfTbSJWmNEyfZQV0Jd/
K1eBexNxa4UCX4GNAtZ5VOeUVjcR9o7Ln3YfUkArlsUfNWYToX5rnbm4vQJK
T/d0BXxtIvIWLeOOOStg66hiD09XE8H+FkoXP6WAJ5iXdGMnmoglV4bWH7um
gDsvlPtE0FhEa+FMc3SkAib8rN+/ToVFPBoRCHofo4CEc2sjS51FrLVXLRVL
VMCbx81Sx7RZxL51ByzfP1RAsfcatk+BRST8R7iKFSlgfHey5pATizgsV0fR
K1bA4AlPw/9cWISaZesL51IF/Pbeoa3ag0XkvJ8YfVehgELycS+DTrOIptiV
F5zZCnjW5U3c/ossQsrwZtK73wrYvGYyuS2FRbScTdP/MaKAL7f5M+UfsIi0
Z1ntohMKuPZZUJj5QxaxZmmlmvOsAi6wLttGPmURe4bms0UFqdiyRDg/NJdF
xKW4VRxVoeKhlMbCHVUswv9c6NlgBhXPDph+JWpYhOO+B8q3l1NR4Ytms1Y9
i9AS/uZfq0XFq/cPxfU2sYiq86YrNulTsfiVMKuxjUW8tjnK3mtArp+dxhjt
YBHJuiGXvICKLl+dD/N3sQi3/ryWh6ZULPLfFCjawyJ4bNWvi+6jYpDnTGji
IIvoX48bNGyouPNsKp/9bxbBlLT/b9shKr4dTPWSG2YRqZU39f0dqXh8+4YR
rzEWcTX9VW/8USr66dBEBSdYhPelmviXLlSMjvsnnvSXRRjo8Q78d5yKbifv
VCdMswiGjHLS/Ekqpuk2hXHNsgjhkc1GcmeoaMkrsOzYHBnPpz4pFv5UrB6/
pyK4wCL85H6YvwujonXcBYFqHjZhP/5vsvEqFdfWOgh18rIJkwaFx0PXyfWu
mE/94mMT0hF751TjqHhut3FSmwCbmHE++dTgJhUv6dmalQuyiS7D6/sPJlHx
u1Vc30MKm8ieLHkRdY+KvbL5w1uE2URiU/vBp6lULHzbajtNOjh7mrfsERUX
j8TnPhNhEy43ZF63Z1DRyivs325RNrHLbY39VCYVUyed9AZJrzWyoEi/pOJU
S6dLkBiboCp55Gm9omLgy6IwLnE2wT0b5rQjh4ruVfmJgaR/fU0Vdc6notP2
xLv9pBveFL0Pfk/FnsnlSZYSbOJtdLPL7SIqPjmx9eoT0vc9xyVziqn4YfS1
1wTpcFOJj7WlVFRKOGK+SZJNnFBd5dlXTsUYSW2VU6T3/du+lKeSiu2DPMN3
SW/+7lxKr6Fiox3z3UfSqvkXTm6qp6LrvhtBbNKU+BSFfY1kvZ1ftaWL9IjX
289ebCoars2b+r+bzZrORDRTkT9JM+cb6WL1P4qPWsn8+KacKCWdwSVc/aGD
isTepcseko5qX3auuYuK9zxyOv1In32/TW2sm9zfk5h7QPrwLYd60T4qJmXV
2i+Q56HnCtNODFDxYYUo4wXpzsZ37lW/qSggfX7enPSjEZc8jVFyvbS7Ax1k
vFwkpLmvTlBxxQmB4WOkl+sQlj1TZP3v3C/SQca/38IrxWiOrKe/jG07SXvf
+LJukZuGlPGFxVkyn2uenb3kwE/DbBHfKCQ9XqFSV0Sh4d0LRvrnyfwH8Ae5
BUjQ0MlVbu4TWS+b1VfkfpOm4UvviiXfyHr6Z/R1cb0sDY1nGNb/r7fQS6vv
jNLJ692R+wmyHk1S23t3q9DQ8vxF2QdkvQoWX1+bzaDhh+lhymmynqPmumuO
a9JwuYB3+O9FFmFFjZev0qbhn82PpO6Q9S+lb+iqoUvD8sdp3zb9YxFJ55IX
ujfRcI4rVXI32T+HEk13GW2hIXcb740Ksr9oeWO30wxp2PFm3njdFDmPRi10
HUxpOHy+KrRnnEU88+J2+baPhmZidiezh1iEV2T26/UHaNgsnK9VOsAidJ7b
/UuwpeErt+dQ8Yuch335SbudaHgvNOR4FjkvPjgfr6o8SUOBXAn6D3LeXLgs
J6txhoaFsrYlsd9ZxLa0cucrvjSUElxbt6aZRXzpUJrfFkSeX+XBKktyXjEP
sXSKrtGQs8XOfLiCnM/+l4IUomgYfqHvst5nFmGTpF3pH0tD2XNden5l5Pxn
RRxdn0RDyaNyulUfWESPlcGtrMc01L6kl9b2mkVMm2TMpBbT8LDhjGFWEosI
LkoNKy+loUidl5LXTRbBtTZFrL+cvN88mqnEsQhB5VjVtTU03OBtcdXjOouQ
nQnYWd5M3j96bC4giEWsy7K482uEhm4mo0fuObCIt4wdDLEJcr2iF0ZvbFnE
5pRtWbpT5Hn2WqcW2bAIo4iNpYH/aKiSsZT12pKc70dV+kWF6Uh5sfSC4lZy
Hi6d0NNl0PHpiqFSHiqLGIv8U2aznI681/dWn15KzjeefovAlXR0Nnx3mS1J
7n+4w+nTajrOHrwqEiLIIiKrKq7ZGNDRRO/sn33k8zEz5G7LeRs6Km9dqri0
tono7jUKKIug48rYyVgx3ybCKLX+kWYkHX9n/MsvPNlEpB06XJcQQ0ef7w4W
9uTz2rHmjNqxRDoKezl2Bh9uIlpfp9XyPqZj8m679euxiWgKWlAxLabjx2tc
Ry8JNRFlUoVVFRN0vLRkjcvbm42Eao3pxOppOhrnVjvMRzYSl8IblZLn6HiA
HX5hU3gjYTj166wHjyK+vj5mGe3bSBS2yykJSSpiX7BD0zvrRiLnqZ+P+SpF
FNwzPS62pJF4tFWXVndUEdePnJgfjGASZVbCYXMuiuiX8vVd8EUm8eNI98BK
D0X8UV6fy+fPJBihiYVXvRVxbSNP+Kwrk0j/MmOLQYp4YNpP/YIxk8jYXZac
e0sRh49/aWGTv78yj+6XTalQRJ7LuV5crHoi64qflLu2Eg6rZlKGbWqJCJtj
u3j/KuHEmgInc9YXYkP7w2cRdcp42uDFJx56CZG88m5W3S4V/MMTZ/6+Ooe4
WBKdvKtABXMcr3bwtMQQljSbjGp1VazdG77ZdkMGbPOusJO6rorv4imV1q7v
IJXurF77VxV1v/ge1lgohc3rVuk4T6niGnj1Z6lMGbB3TmyanlbFaVuPz1Mr
y4Dif3WX+rwqFj/9JpxoUwanG5/7BPOo4a3uiefrX5YBXh0v0ZJQQ3rtCoGF
A5/gx3C4Q/QKNRxW85H1fFQO6p+eJlnZqeHFtf1DBuIVUK81nd5ur4Z389pi
d6hUQECSWe5xRzVUfFJoZ7y2Amo8+xuuHlVDM+G/O8UPVICP5Cohwl0N72hY
h4/cqwDCITtota8aPhqkZ3M0KuHwdJ6TZDS5vteRtGVrq4DPmf/Ugxg1vPdo
2XkToyrIrrEJ0YpTw3M/pjz376sC7tTJO2Y31fA/LhnfbT5VkGmqx7p0Rw2r
U69aObypgr8JRaajGWq46tsNx2itaojTLtNsKlbDssqKyRTZGsjUsxMKLVFD
L3fXkM5lNUAYT/Tplqmhw9LoDZIbauCP7fKM+M/k9SNG8hv318CuqzeU99aq
ob0QUZgQUwMCnftkmN/VsLcPt17jroWguO5/dRNqmJL+11G7pRYS7ga3h0yq
YfppnRu/emrh+ZOlRdrTajiU9Xk4ZrQWWj7sCIieU0OX9e1W94XrYGP/izEL
Hgbef+X6kNhSByPbfPtqJBhocrdnSCalDtzG+RqrNBn4XOlYUfP2enB8blJv
r8XAa7EKUkZ76uHA0fCaYW0GJpUee3HHth62N/B+WarLwIBtAfclveph+Que
oqObGNj114eiGFcPvc5cGTPGDFT49jX9Jbse2hXwUZQpA7Wch8/2t9cDm3kx
VXkHA7UTinct6a2HcsPFO6bmDAzmFqfo/K2HdOpCTPweBkreaz54UaYBXJrm
AlY6kJ9v1bkXs7sB7K9vOffBkYENrPrAlAMNYI1BZ3c7MZClfkH3pkMDmGTP
nvQ7xsAPx0/Qd51oAPUbM86lngw8P56axr7SAN3bpixszzHw87IIM4t3DdA6
vdF8yJ+B/W87L6l/bICmV+d2XDzPQA+bwRP9ZQ1Qpji5LSOYgW4Ce/fp1zfA
o5mJjaOhDDw2ul1rtLsBnN+MqVyPZeD3T/W1nfxM8ArdP28ez0Dp9OmzfhQm
+O3Paxa9yUDeA7J8i8JMuPbXLyYuiYH8kaVtvyWYkK0/M3f7PrnfOda+zQpM
eC98uNk2lYGvdtmtOkVjQmlbYQ7tIQNzw3p+3lZkAjsk2DM1nYG77V7wfVZl
wkzp4rcnLxgo9ba4NnolE3huOuV4ZDEwtqEm++gqJoi6lEZrvmLgmX2Kp1dq
M0FJIMwkO4fcz5EDsbfWMGFFc7fy6TwGrrN8P7RpLRN0M03mdN8ycIf3/hUN
65hgYi6Qk19A5k8sUv/7RiZY0dyj/YsYqOHyS9xCjwkHhyo89D8y8OlLrrIc
fSYcj7mu/LGEgXl3TErtDJgQ1yQaXV7BwMi9esvo25iQ8vikx9UqBpotWPZr
GzHhsW+9sVkNA7/aV0auM2bCW9m42Zp6BtZP/fSimjKhpG/kazSTgUFyyi/n
SFe93/tmdxMDBZ92VzO3M6H98BIP1lcGsvVTMg+YMeHnKl/jxGYG+ux28xDc
yYThebbSwe8MPN3tI/SS9HTdhln5NgZWcIyiTMzJeKUmfW1tZyBt5Ogok7TI
6anX9zgMdAl30d+7iwky2w5FOXYxcOBLn8tn0krSBe4qPxi4/Um8r7YFEzS6
FYx/dDMw5ouk53XSa/ICldJ7GZgaSzf+TnrzlbYZ1z6yH1T9eBUtmWB8wOCr
Rj95/r3dz61JW2jcf90/wEB4p7f5EukD0/8iXwwx0Obu7pxU0keqHN1P/iHz
wysik0vaI4UwWj3CwM6MA06FpH1OqCiNjpL5HFmenE862ODyTM44A3W4zn9I
J31F7Afb9y8Drz/fVx9BOoZj9HrjFAMfHC+rdySd/Opx5PQ0A3uDO4tXkn50
ic+9cJaBL95Vpf4i9/9ir6tR8DyZ71fPfO6SzlP7omi4wEDKndd6RqSLx5fP
LC4ysNJRfrydjM//AOVW9Fg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{{0, 10}, {-0.31353019895394485`, 0.48649847604027}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
So8UNBgbKYT/AXRnwWs=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{{0, 10}, {-0.291161274917494, 0.4343944236404684}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{{0, 10}, {-0.2743815636982917, 0.399651908564373}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.464946066299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}], ",", "Center"}], 
  "]"}]], "Input",
 CellID->121192641],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "3", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6", ",", "4", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "10", ",", "10", ",", "5", ",", "1"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "6", ",", "15", ",", "20", ",", "15", ",", "6", ",", "1"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "7", ",", "21", ",", "35", ",", "35", ",", "21", ",", "7", 
       ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "8", ",", "28", ",", "56", ",", "70", ",", "56", ",", "28", 
       ",", "8", ",", "1"}], "}"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.4649460663302*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"\"\<text\>\"", ",", " ", "s"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "10", ",", " ", "20"}], "}"}]}], "]"}]], "Input",
 CellID->769247627],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->10], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->11], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->12], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->13], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->14], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->15], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->16], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->17], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->18], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->19], ",", 
   StyleBox["\<\"text\"\>",
    StripOnInput->False,
    FontSize->20]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460663458*^9}]
}, Open  ]],

Cell[TextData[{
 "Table can also loop over any arbitrary list of successive values: ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Table"], "[", 
   RowBox[{
    StyleBox["expr", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["i", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["i", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["i", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "}"}]}], "]"}]], 
  "InlineFormula"],
 " "
}], "Text",
 CellChangeTimes->{{3.463397154258*^9, 3.4633972040514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"2", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["2", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.463397262255*^9, 3.4633972938761997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460663613997`*^9}]
}, Open  ]],

Cell["\<\
You can also build up lists of lists (i.e matrices/arrays) by using nested \
tables:\
\>", "Text",
 CellChangeTimes->{{3.4633974099402*^9, 3.4633974423726*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4633974434802*^9, 3.4633974979709997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "4"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "4"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "3"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "4"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.464946066377*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "4"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4649460664082003`*^9}]
}, Open  ]],

Cell[TextData[{
 "Nested tables can be entered directly as:\n(notice the ordering of the \
running indices. German ",
 StyleBox["Merkregel",
  FontSlant->"Italic"],
 ": \"",
 StyleBox["Z",
  FontWeight->"Bold"],
 "eilen ",
 StyleBox["z",
  FontWeight->"Bold"],
 "uerst, ",
 StyleBox["S",
  FontWeight->"Bold"],
 "palten ",
 StyleBox["s",
  FontWeight->"Bold"],
 "p\[ADoubleDot]ter\")"
}], "Text",
 CellChangeTimes->{{3.4633975097178*^9, 3.4633975252866*^9}, {
  3.463397562087*^9, 3.4633976578866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4633975362846003`*^9, 3.4633975517598*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "4"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4649460664238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "##", "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4633978167414*^9, 3.4633978310778*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "4"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "3"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "4"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4649460664393997`*^9}]
}, Open  ]],

Cell[TextData[{
 "There many ways of generating lists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Some of them are optimized for speed:"
}], "Text",
 CellChangeTimes->{{3.463398048807*^9, 3.4633980845934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       SuperscriptBox["10", "8"]}], "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.4633980959658003`*^9, 3.4633981755726*^9}, {
   3.463398261201*^9, 3.4633982842734003`*^9}, 3.463398362757*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.2916`7.968952047148131", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.4633981345601997`*^9, 3.463398191079*^9}, {
   3.4633982617626*^9, 3.4633982850378*^9}, 3.4633983736926003`*^9, 
   3.4649460697622004`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Range", "[", 
    SuperscriptBox["10", "8"], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.4633981922958*^9, 3.4633982031378*^9}, {
   3.463398264867*^9, 3.4633982812469997`*^9}, 3.4633983671717997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.468`7.121790846570092", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.463398217755*^9, {3.4633982729946003`*^9, 3.4633982866289997`*^9}, 
   3.4633983750966*^9, 3.4649460703082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     SuperscriptBox["10", "8"]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.4633982954742002`*^9, 3.463398324381*^9}, 
   3.4633983840666*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.2448`7.962732926813189", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.463398326409*^9, 3.4633983889494*^9, 3.4649460735842*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Tuples",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Tuples"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["n", "TI"]}], "]"}]], "InlineFormula"],
 " ",
 "generates a list of all possible ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula"],
 "\[Hyphen]tuples of elements from ",
 Cell[BoxData[
  StyleBox["list", "TI"]], "InlineFormula"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4638048108714*^9, 3.4638048176084003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.464946073631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460736466*^9}]
}, Open  ]],

Cell["2D lattice of points:", "Text",
 CellChangeTimes->{3.4638048505584*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "[", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "9"}], "]"}], ",", "2"}], "]"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  PointBox[{{0, 0}, {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {
   0, 8}, {0, 9}, {1, 0}, {1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 
   7}, {1, 8}, {1, 9}, {2, 0}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 
   6}, {2, 7}, {2, 8}, {2, 9}, {3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 
   5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 
   4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9}, {5, 0}, {5, 1}, {5, 2}, {5, 
   3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {6, 0}, {6, 1}, {6, 
   2}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {6, 9}, {7, 0}, {7, 
   1}, {7, 2}, {7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {7, 9}, {8, 
   0}, {8, 1}, {8, 2}, {8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}, {8, 
   9}, {9, 0}, {9, 1}, {9, 2}, {9, 3}, {9, 4}, {9, 5}, {9, 6}, {9, 7}, {9, 
   8}, {9, 9}}]]], "Output",
 CellChangeTimes->{3.4649460736622*^9}]
}, Open  ]],

Cell["3D lattice of points:", "Text",
 CellChangeTimes->{3.4638048575074*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PointSize", "[", "0", "]"}], ",", 
    RowBox[{"Point", "[", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "9"}], "]"}], ",", "3"}], "]"}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[
  {PointSize[0], Point3DBox[CompressedData["
1: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
mwpef/E6hXdnvOrx6sB7I97ZH7c9N1M=
    "]]}]], "Output",
 CellChangeTimes->{3.4649460736778*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excercises", "Subsubsection",
 CellChangeTimes->{{3.4639163530690002`*^9, 3.463916356949*^9}}],

Cell["Enter the 4x4 identity matrix.", "Text",
 CellChangeTimes->{{3.4639174248022003`*^9, 3.4639174684421997`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Type in and calculate {a,b,c}.{x,y,z} using both the operator form and the \
function form (Dot)\
\>", "Text",
 CellChangeTimes->{{3.4639173885102*^9, 3.4639174175271997`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[StyleBox["Create a list of 100 random integers between 1 and \
10.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639163700109997`*^9, 3.463916407092*^9}, {
  3.463916447057*^9, 3.4639164551940002`*^9}, {3.4639171274723997`*^9, 
  3.4639171495374002`*^9}}],

Cell[TextData[StyleBox["Create a list of 100 random reals between 1 and 5.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639171600654*^9, 3.4639171736174*^9}}],

Cell[TextData[StyleBox["Create a list of the first 50 powers to the base 2.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639163700109997`*^9, 3.463916407092*^9}, {
  3.463916447057*^9, 3.4639164551940002`*^9}}],

Cell[TextData[StyleBox["Create a list of the first 20 Fibonacci numbers.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639163700109997`*^9, 3.463916387501*^9}}],

Cell[TextData[StyleBox["Plot the first 50 Primes using ListPlot.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639163700109997`*^9, 3.463916387501*^9}, {
  3.4639165354692*^9, 3.4639165748022003`*^9}}],

Cell[TextData[StyleBox["Produce a list of numbers between 0.15 and 1.25 with \
a spacing of 0.1.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{3.4639166965252*^9}],

Cell[TextData[StyleBox["Produce a list of the first 10 Legendre polynomials.  \
Use the formatting function ColumnForm to improve the appearance of your \
output.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.4639154053806*^9},
 FontColor->RGBColor[0, 0, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elements of Lists", "Subsection",
 CellChangeTimes->{{3.4633984773546*^9, 3.4633984805369997`*^9}}],

Cell[TextData[{
 "To access elements of a list use the command ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Part",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Part"], "[", 
   RowBox[{
    StyleBox["expr", "TI"], ",", 
    StyleBox["i", "TI"]}], "]"}]], "InlineFormula"]
}], "Text",
 CellChangeTimes->{{3.4633984872293997`*^9, 3.463398525153*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h",
      ",", "i", ",", "j"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.4633985333585997`*^9, 3.4633985423129997`*^9}}],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{3.4649460736934*^9}]
}, Open  ]],

Cell["The shortcut notation is expr[[i]]", "Text",
 CellChangeTimes->{{3.463398554793*^9, 3.4633985552142*^9}, {
  3.4633985926542*^9, 3.463398607365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i", ",", "j"}], "}"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4633986151338*^9, 3.4633986164598*^9}}],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{3.464946073709*^9}]
}, Open  ]],

Cell["The index i can also be negative, counting from the end", "Text",
 CellChangeTimes->{{3.4633989312054*^9, 3.4633989438414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i", ",", "j"}], "}"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i", ",", "j"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4633989557598*^9, 3.4633989588798*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.4649460737246*^9}],

Cell[BoxData["j"], "Output",
 CellChangeTimes->{3.4649460737402*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Part",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Part"], "[", 
   StyleBox["list", "TI"], ",", "{", 
   StyleBox["i", "TI"], ",", 
   StyleBox["j", "TI"], ",", 
   StyleBox["\[Ellipsis]", "TR"], "}", "]", Cell[
   " \[ThinSpace]or \[ThinSpace]", "TableText"], 
   StyleBox["list", "TI"], "[", "[", "{", 
   StyleBox["i", "TI"], ",", 
   StyleBox["j", "TI"], ",", 
   StyleBox["\[Ellipsis]", "TR"], "}", "]", "]"}]]],
 " extracts a list of elements "
}], "Text",
 CellChangeTimes->{{3.4633986550698*^9, 3.4633986675966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "i", ",", "j"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.463398676005*^9, 3.4633986917454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", "f"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460737402*^9}]
}, Open  ]],

Cell[TextData[{
 "You can even extract a ",
 Cell[TextData[Cell[BoxData[
  FormBox[
   ButtonBox["Span",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Span"], TraditionalForm]]]], "InlineFunctionSans",
  Background->Dynamic[
    If[CurrentValue[{TaggingRules, "ModificationHighlight"}] === True, 
     RGBColor[0.92, 1, 0.59], None]]],
 " of elements ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 " through ",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 " using i;;j : ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Part",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Part"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    RowBox[{
     StyleBox["i", "TI"], ";;", 
     StyleBox["j", "TI"]}]}], "]"}]]]
}], "Text",
 CellChangeTimes->{{3.4633987006842003`*^9, 3.463398764067*^9}, {
  3.4633988395397997`*^9, 3.4633988798346*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h",
      ",", "i", ",", "j"}], "}"}], "[", 
   RowBox[{"[", 
    RowBox[{"4", ";;", "6"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "note", " ", "that", " ", "no", " ", "curly", " ", "list", " ", "brackets",
     " ", "are", " ", "used", " ", "her"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.4633987738014*^9, 3.4633987926774*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", "f"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460737558002`*^9}]
}, Open  ]],

Cell[TextData[{
 "Multidimensional lists are accessed with ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Part",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Part"], "[", 
   RowBox[{
    StyleBox["expr", "TI"], ",", 
    StyleBox["i", "TI"], ",", 
    StyleBox["j", "TI"], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "]"}]], "InlineFormula"],
 " or expr[[i, j, \[Ellipsis]]] (shortcut for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["expr", "TI"], "[", 
     RowBox[{"[", 
      StyleBox["i", "TI"], "]"}], "]"}], "[", 
    RowBox[{"[", 
     StyleBox["j", "TI"], "]"}], "]"}], 
   StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula"],
 ". ). You can also use ",
 Cell[BoxData[
  ButtonBox["All",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/All"]], "InlineFormula"],
 " to specifiy all parts of a dimension."
}], "Text",
 CellChangeTimes->{{3.463399123413*^9, 3.4633992062958*^9}, {
  3.4633993687854*^9, 3.463399413027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4633990809186*^9, 3.4633990840074*^9}, {
  3.4633992160769997`*^9, 3.4633992301949997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"extracts", " ", "a", " ", "row"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4633990809186*^9, 3.4633990840074*^9}, {
  3.4633992160769997`*^9, 3.4633992301949997`*^9}, {3.4633992699438*^9, 
  3.4633992827514*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "1"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "3"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "4"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460737714*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"extracts", " ", "the", " ", "first", " ", "column"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.4633992991470003`*^9, 3.4633993105038*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "1"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460737869997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"extracts", " ", "single", " ", "elements"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.4633992412398*^9, 3.4633992451554003`*^9}, {
  3.4633992855594*^9, 3.4633992945917997`*^9}}],

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{3.4649460738026*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "2"}], ",", 
     RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"extract", " ", "a", " ", "submatrix"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4633993314234*^9, 3.4633993554630003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "3"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460738182*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "l", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4633993591446*^9, 3.4633993611726*^9}}],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Part",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Part"], "ca"}]], "InlineFormula"],
 "n also be used to assign new values to parts of a list"
}], "Text",
 CellChangeTimes->{{3.4633994351478*^9, 3.4633994697642*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.463399431435*^9, 3.4633994329482*^9}, {
  3.4633994753646*^9, 3.4633994929458*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460738338003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "=", "1000"}], 
  ";"}], "\[IndentingNewLine]", "l"}], "Input",
 CellChangeTimes->{{3.4633994861286*^9, 3.4633995074694*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "1000", ",", "6", ",", "7", ",", 
   "8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460738494*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "l", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4633995214938*^9, 3.4633995239586*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Take",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Take"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["n", "TI"]}], "]"}]], "InlineFormula"],
 "gives the first n elements of list. If n is negative it gives the last n \
elements of a list."
}], "Text",
 CellChangeTimes->{{3.4633995670926*^9, 3.463399597341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", 
   RowBox[{"-", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4633996893498*^9, 3.4633997083506002`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460738806*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Take",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Take"]], "InlineFormula"],
 " works with any head, not just ",
 Cell[BoxData[
  ButtonBox["List",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/List"]], "InlineFormula"],
 ":"
}], "Text",
 CellChangeTimes->{3.463399678929*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e", "+", "f"}], ",", 
   "3"}], "]"}]], "Input",
 CellID->570548475],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c"}]], "Output",
 CellChangeTimes->{3.4649460738962*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Drop",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Drop"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    StyleBox["n", "TI"]}], "]"}]], "InlineFormula"],
 "is the opposite and gives list with the first n elements dropped."
}], "Text",
 CellChangeTimes->{{3.4633998054354*^9, 3.463399823547*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
   ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", ",", "d", ",", "e", ",", "f"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460739118*^9}]
}, Open  ]],

Cell["\<\
There are also some special commands for common list extraction tasks\
\>", "Text",
 CellChangeTimes->{{3.4633998466194*^9, 3.4633998732798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.463399906617*^9, 3.4633999081614*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.4649460739274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4633999096278*^9, 3.4633999114842*^9}}],

Cell[BoxData["f"], "Output",
 CellChangeTimes->{3.464946073943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Most", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.463399881969*^9, 3.4633998837318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460739586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4633999036842003`*^9, 3.4633999041210003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460739742002`*^9}]
}, Open  ]],

Cell[TextData[{
 "Check the following documentation page for some more commands:\n\n",
 ButtonBox["Parts of Matrices",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/PartsOfMatrices"]
}], "Text",
 CellChangeTimes->{{3.4633999835718*^9, 3.4634000245842*^9}, {
  3.463400153175*^9, 3.4634001531906*^9}, {3.463400292873*^9, 
  3.4634002929042*^9}, {3.4634003591876*^9, 3.4634003592188*^9}, {
  3.4634004887748003`*^9, 3.463400520552*^9}}],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Excercises",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/PartsOfMatrices"]], "Subsubsection",
 CellChangeTimes->{{3.4634003981408*^9, 3.4634003984684*^9}, {
  3.4634004488792*^9, 3.463400460392*^9}, {3.4639156293283997`*^9, 
  3.4639156307914*^9}}],

Cell["\<\
Given the list {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \
\"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \
\"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"}, extract 
a) every second element.
b) every fourth element
c) the elements number 2,12,13,18
d) the first 20 elements
e) elements from \"J\" to \"P\"\
\>", "Text",
 CellChangeTimes->{{3.4649409365299997`*^9, 3.4649410191164*^9}, 
   3.4649423399962*^9}],

Cell["", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Searching and Testing Lists", "Subsection",
 CellChangeTimes->{{3.4638035176034*^9, 3.4638035263864*^9}}],

Cell[CellGroupData[{

Cell["Identify Lists", "Subsubsection",
 CellChangeTimes->{{3.4638037534533997`*^9, 3.4638037564224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ListQ"}]], "Input",
 CellChangeTimes->{{3.4638035957754*^9, 3.4638035968164*^9}}],

Cell[BoxData[
 StyleBox["\<\"\!\(\*RowBox[{\\\"ListQ\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\"]\\\"}]\) gives True if \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\) is a list, and False otherwise.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.4649460742394*^9},
 CellTags->"Info3464953274-6529072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListQ", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
    "8"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638035524694*^9, 3.4638035869294*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460743018*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638036161254*^9, 3.4638036291493998`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.464946074333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", 
    RowBox[{"{", "e", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<f\>\"", ",", "\"\<g\>\"", ",", "\"\<h\>\""}], "}"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638036532363997`*^9, 3.4638036695684*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460743642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListQ", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638036308943996`*^9, 3.4638036394954*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4649460743954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "VectorQ"}]], "Input",
 CellChangeTimes->{{3.4638036798784*^9, 3.4638036848104*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", StyleBox[\\\"expr\\\
\", \\\"TI\\\"], \\\"]\\\"}]\) gives True if \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\) is a list or a one\[Hyphen]dimensional SparseArray object, none \
of whose elements are themselves lists, and gives False otherwise. \
\\n\!\(\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
gives True only if \!\(\*StyleBox[\\\"test\\\", \\\"TI\\\"]\) yields True \
when applied to each of the elements in \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/VectorQ"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.4649460745982*^9},
 CellTags->"Info3464953274-8450452"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MatrixQ"}]], "Input",
 CellChangeTimes->{{3.4638036894764*^9, 3.4638036932743998`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", StyleBox[\\\"expr\\\
\", \\\"TI\\\"], \\\"]\\\"}]\) gives True if \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\) is a list of lists or a two-dimensional SparseArray object that \
can represent a matrix, and gives False otherwise. \
\\n\!\(\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
gives True only if \!\(\*StyleBox[\\\"test\\\", \\\"TI\\\"]\) yields True \
when applied to each of the matrix elements in \!\(\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MatrixQ"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.4649460749258003`*^9},
 CellTags->"Info3464953274-3666917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VectorQ", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
    "8"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixQ", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
    "8"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4638035524694*^9, 3.4638035869294*^9}, {
  3.4638037054323997`*^9, 3.4638037238234*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460749726*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4649460749726*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VectorQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4638036161254*^9, 3.4638036291493998`*^9}, {
  3.4638037113634*^9, 3.4638037310794*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4649460750038*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460750038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VectorQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", 
    RowBox[{"{", "e", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<f\>\"", ",", "\"\<g\>\"", ",", "\"\<h\>\""}], "}"}]}], 
   "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", 
    RowBox[{"{", "e", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<f\>\"", ",", "\"\<g\>\"", ",", "\"\<h\>\""}], "}"}]}], 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4638036532363997`*^9, 3.4638036695684*^9}, {
  3.4638037145573997`*^9, 3.4638037394904003`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.464946075035*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.464946075035*^9}]
}, Open  ]],

Cell["\<\
In a full array all parts at a particular level must be lists of the same \
length.\
\>", "Text",
 CellChangeTimes->{3.4638041072734003`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ArrayQ"}]], "Input",
 CellChangeTimes->{{3.4638041011994*^9, 3.4638041034404*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\) gives True if \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) is a full array or a SparseArray \
object, and gives False otherwise. \\n\!\(\*RowBox[{\\\"ArrayQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) requires \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) to be a full array with a depth \
that matches the pattern \!\(\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\). \
\\n\!\(\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) requires also that \
\!\(\*StyleBox[\\\"test\\\", \\\"TI\\\"]\) yield True when applied to each of \
the array elements in \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\). \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArrayQ"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.464946075191*^9},
 CellTags->"Info3464953275-1777061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayQ", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460752534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayQ", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"{", "3", "}"}], ",", "4"}], "}"}], "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.464946075269*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describe Lists", "Subsubsection",
 CellChangeTimes->{{3.4638037850024*^9, 3.4638037894684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
    "8"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638037928434*^9, 3.4638038043464003`*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.4649460753157997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638038701823997`*^9, 3.4638038876034*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.464946075347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4638038812894*^9, 3.4638039105504*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460753782*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ArrayDepth"}]], "Input",
 CellChangeTimes->{{3.4638040424234*^9, 3.4638040467124*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ArrayDepth\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\) gives the depth to which \!\
\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) is a full array, with all the parts \
at a particular level being lists of the same length, or is a SparseArray \
object. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArrayDepth"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.4649460755030003`*^9},
 CellTags->"Info3464953275-8084313"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["ArrayDepth",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ArrayDepth"], "[", 
   StyleBox["expr", "TI"], "]"}]], "InlineFormula"],
 " ",
 "gives the depth to which ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula"],
 " is a full array, with all the parts at a particular level being lists of \
the same length, or is a ",
 Cell[BoxData[
  ButtonBox["SparseArray",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SparseArray"]], "InlineFormula"],
 " object. "
}], "Text",
 CellChangeTimes->{{3.4639158132264*^9, 3.4639158333368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4649460755810003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
    RowBox[{"{", "c", "}"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4649460756122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"It", " ", "is", " ", "also", " ", "possible", " ", "to", " ", 
  "checkt", " ", "whether", " ", "particular", " ", 
  RowBox[{"elements", "/", "expressions"}], " ", "are", " ", "member", " ", 
  "of", " ", "the", " ", "list", " ", "using", " ", 
  RowBox[{
   RowBox[{
    ButtonBox["MemberQ",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/MemberQ"], "[", 
    RowBox[{
     StyleBox["list", "TI"], ",", 
     StyleBox["form", "TI"]}], "]"}], ".", " ", "The"}], " ", "opposite", " ",
   "check", " ", "is", " ", "also", " ", 
  RowBox[{"possible", ":", " ", 
   RowBox[{
    ButtonBox["FreeQ",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FreeQ"], "[", 
    RowBox[{
     StyleBox["expr", "TI"], ",", 
     StyleBox["form", "TI"]}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.4638043491334*^9, 3.4638044049934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "3", ",", " ", "4", ",", " ", "1", ",", " ", "2"}],
     "}"}], ",", " ", "2"}], "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.464946075659*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   ButtonBox["MemberQ",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/MemberQ"], " ", "normally", " ", "only", " ", 
   "tests", " ", "level", " ", "1"}], ":"}]], "Text",
 CellChangeTimes->{3.4638045025094*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "3", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "1", ",", " ", "2", ",", " ", "2"}], "}"}]}], 
    "}"}], ",", " ", "0"}], "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4649460757214003`*^9}]
}, Open  ]],

Cell["Test down to level 2 :", "Text",
 CellChangeTimes->{3.4638045121794*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "3", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "1", ",", " ", "2", ",", " ", "2"}], "}"}]}], 
    "}"}], ",", " ", "0", ",", " ", "2"}], "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4649460757838*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FreeQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "4", ",", " ", "1", ",", " ", "0"}],
     "}"}], ",", " ", "0"}], "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.464946075815*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  ButtonBox["FreeQ",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FreeQ"], " ", "normally", " ", "tests", " ", "all",
   " ", "levels", " ", "in", " ", "an", " ", 
  RowBox[{"expression", ":"}]}]], "Text",
 CellChangeTimes->{3.4638045422344*^9}],

Cell["FreeQ[{{1, 1, 3, 0}, {2, 1, 2, 2}}, 0]", "Text"],

Cell["\<\
Example Applications :
  
  Test which integrals are free of logarithms :\
\>", "Text",
 CellChangeTimes->{{3.4638045810534*^9, 3.4638045978354*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FreeQ", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"x", "^", "n"}], ",", " ", "x"}], "]"}], ",", " ", "Log"}], 
    "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellID->65628085],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4649460758462*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Search List Elements", "Subsubsection",
 CellChangeTimes->{{3.4639159115828*^9, 3.4639159163838*^9}}],

Cell[TextData[{
 "Find the positions at which ",
 Cell[BoxData["b"], "InlineFormula"],
 " occurs:"
}], "Text",
 CellChangeTimes->{3.4639159260928*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b", ",", "c", ",", "b"}],
     "}"}], ",", "b"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "7", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460758929996`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "a"}], "}"}]}], "}"}], ",", "b"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460759242*^9}]
}, Open  ]],

Cell[TextData[{
 "Find the positions of the first 2 ",
 Cell[BoxData["b"], "InlineFormula"],
 "'s that appear on level 1:"
}], "Text",
 CellChangeTimes->{3.4639159641488*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "a", ",", "a", ",", "b", ",", "c", ",", "b", ",", "a",
      ",", "b"}], "}"}], ",", "b", ",", "1", ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460759709997`*^9}]
}, Open  ]],

Cell["Extract the second part from an expression :", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4649460760022*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excercises", "Subsubsection",
 CellChangeTimes->{{3.4639153324116*^9, 3.4639153644226*^9}}],

Cell[TextData[StyleBox["Obtain a (partial) list of query functions ending in \
Q.  Try a few.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text"],

Cell[TextData[{
 StyleBox["Given a long list of 1000 random integers between 1 and 20, find \
the positions of the firs",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t 10 1's.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.4639159966828003`*^9, 3.4639160550327997`*^9}}],

Cell[TextData[StyleBox["Given a long list of 1000 random integers between 1 \
and 20, find the positions of the first 10 even numbers.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639162495550003`*^9, 3.4639162597460003`*^9}}],

Cell[TextData[StyleBox["Given a long list of 1000 random integers between 1 \
and 20,extract first 20 uneven numbers.",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639162664890003`*^9, 3.463916280967*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding, Removing and Modifying List Elements", "Subsection",
 CellChangeTimes->{3.4649424096814003`*^9}],

Cell[TextData[{
 "Required Reading:\n\n",
 ButtonBox["Adding, Removing and Modifying List Elements",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/AddingRemovingAndModifyingListElements"]
}], "Text",
 CellChangeTimes->{{3.4649424261862*^9, 3.4649424539386*^9}}],

Cell[TextData[{
 "Important commands are: ",
 Cell[BoxData[
  ButtonBox["Prepend",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Prepend"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Append",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Append"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Insert",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Insert"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["AppendTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/AppendTo"]]],
 ", and ",
 Cell[BoxData[
  ButtonBox["PrependTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrependTo"]]]
}], "Text",
 CellChangeTimes->{{3.4649425019866*^9, 3.4649425698934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prepend", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4649425798157997`*^9, 3.4649425979407997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460760178003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4649426006708*^9, 3.464942608892*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460760334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Insert", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "2.5", ",", 
   "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.4649426196404*^9, 3.464942633618*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2.5`", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.464946076049*^9}]
}, Open  ]],

Cell["These commands do not change the original expression!", "Text",
 CellChangeTimes->{{3.4649426513864*^9, 3.4649426622752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Prepend", "[", 
  RowBox[{"list", ",", "x"}], "]"}], "\[IndentingNewLine]", "list"}], "Input",
 CellChangeTimes->{{3.4649426643188*^9, 3.4649426929604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4649460760646*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460760646*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["AppendTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/AppendTo"]]],
 ", and ",
 Cell[BoxData[
  ButtonBox["PrependTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrependTo"]]],
 " will do that"
}], "Text",
 CellChangeTimes->{{3.4649427146132*^9, 3.4649427208064003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrependTo", "[", 
  RowBox[{"list", ",", "x"}], "]"}], "\[IndentingNewLine]", "list"}], "Input",
 CellChangeTimes->{{3.4649427269456*^9, 3.4649427406424*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4649460760802*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4649460760802*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"list", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.4649428326043997`*^9, 3.4649428386415997`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Delete",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Delete"], "[", 
   StyleBox["list", "TI"], ",", 
   StyleBox["i", "TI"], "]"}]],
  GridBoxOptions->{
  GridBoxDividers->{
   "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {False, False, False, False, False, True, {False}, False}, 
    "RowsIndexed" -> {}}}],
 " deletes the element at position i."
}], "Text",
 CellChangeTimes->{{3.4649427515312*^9, 3.4649427616400003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Delete", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.464942768426*^9, 3.4649427796112003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "6", ",", "7", ",", "8", ",", "9"}],
   "}"}]], "Output",
 CellChangeTimes->{3.4649460760958*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["ReplacePart",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ReplacePart"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    RowBox[{
     StyleBox["i", "TI"], "->", 
     StyleBox["new", "TI"]}]}], "]"}]],
  GridBoxOptions->{
  GridBoxDividers->{
   "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {False, False, False, False, False, True, {False}, False}, 
    "RowsIndexed" -> {}}}],
 " ",
 "replace the element at position ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 " in ",
 Cell[BoxData[
  StyleBox["list", "TI"]], "InlineFormula"],
 " with ",
 Cell[BoxData[
  StyleBox["new", "TI"]], "InlineFormula"]
}], "Text",
 CellChangeTimes->{{3.4649427879884*^9, 3.4649428190792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"3", "->", "x"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "x", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460761113997`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearranging Lists", "Subsection",
 CellChangeTimes->{{3.4639133176064*^9, 3.4639133214074*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " offers many built in solutions for common rearranging tasks. Some typical \
examples are given below. If you want to learn more about them, study their \
respective Help pages."
}], "Text",
 CellChangeTimes->{{3.4639133529133997`*^9, 3.4639133997334003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{
   "3", ",", "5", ",", "7", ",", "32", ",", "5", ",", "6", ",", "8", ",", "9",
     ",", "3", ",", "2", ",", "4", ",", "7", ",", "9"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4639134027153997`*^9, 3.4639134134884*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "3", ",", "4", ",", "5", ",", "5", ",", "6", ",", "7", 
   ",", "7", ",", "8", ",", "9", ",", "9", ",", "32"}], "}"}]], "Output",
 CellChangeTimes->{3.464946076127*^9}]
}, Open  ]],

Cell[TextData[{
 "You can also use ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Union",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Union"], "[", 
   StyleBox["list", "TI"], "]"}]]],
 "to sort elements, but this removes any duplicates"
}], "Text",
 CellChangeTimes->{{3.4639145402964*^9, 3.4639145619364*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"{", 
   RowBox[{
   "3", ",", "5", ",", "7", ",", "32", ",", "5", ",", "6", ",", "8", ",", "9",
     ",", "3", ",", "2", ",", "4", ",", "7", ",", "9"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4639134027153997`*^9, 3.4639134134884*^9}, {
  3.4639145686094*^9, 3.4639145754364*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "32"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460761426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639134722976*^9, 3.4639134787416*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460761738*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateLeft", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "2"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", ",", "d", ",", "e", ",", "a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460761893997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RotateLeft", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"-", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RotateRight", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "2"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4639134557616*^9, 3.4639134611316*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", "a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460762206*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", "a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460762206*^9}]
}, Open  ]],

Cell[TextData[{
 "To combine multiple list into one you can use:\n",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Join",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Join"], "[", 
   SubscriptBox[
    StyleBox["list", "TI"], 
    StyleBox["1", "TR"]], ",", 
   SubscriptBox[
    StyleBox["list", "TI"], 
    StyleBox["2", "TR"]], ",", 
   StyleBox["\[Ellipsis]", "TR"], "]"}]]],
 " to ",
 Cell[BoxData[Cell["concatenate lists together", "TableText"]]],
 "\nand ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Riffle",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Riffle"], "[", 
   RowBox[{
    SubscriptBox[
     StyleBox["list", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["list", "TI"], 
     StyleBox["2", "TR"]]}], "]"}]]],
 "to ",
 "interleave elements of ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["list", "TI"], 
   StyleBox["1", "TR"]]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["list", "TI"], 
   StyleBox["2", "TR"]]], "InlineFormula"],
 " "
}], "Text",
 CellChangeTimes->{{3.4646078372974*^9, 3.4646078908366003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "f", ",", "g", ",", "h", ",", "i"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4646078339434*^9, 3.4646078354722*^9}, {
  3.4646078952826*^9, 3.4646079039094*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
   ",", "i"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460762362003`*^9}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Join",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Join"],
 " leaves the elements untouched."
}], "Text",
 CellChangeTimes->{{3.4646079437362003`*^9, 3.4646079649678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f", ",", "g", ",", "h", ",", "i"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4646079116938*^9, 3.4646079344386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "d", ",", "e", ",", "f", ",", "g", 
   ",", "h", ",", "i"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460762518*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4649460762674*^9}]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Riffle",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Riffle"],
 " cycles through the elements of the second list, if the Lengths of both \
lists differ. "
}], "Text",
 CellChangeTimes->{{3.4646080292553997`*^9, 3.464608070455*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.464608001815*^9, 3.4646080185226*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "x", ",", "d"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.464946076283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.464607989725*^9, 3.4646079903646*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "x", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460762986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearranging Nested Lists", "Subsubsection"],

Cell[TextData[{
 "You will often encounter nested lists. Handling such lists can be done for \
instance like this:\n",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Transpose",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Transpose"], "[", 
   StyleBox["list", "TI"], "]"}]]],
 "\t",
 Cell[BoxData[Cell["interchange the top two levels of lists", "TableText"]]]
}], "Text",
 CellChangeTimes->{{3.463913893834*^9, 3.4639139024960003`*^9}, {
  3.463913939449*^9, 3.463913983773*^9}, {3.4639144155494003`*^9, 
  3.4639144227654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4639144257084*^9, 3.4639144673714*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4649460763142*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "4"},
     {"2", "5"},
     {"3", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4649460763142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"d", ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"{", "a", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.463913987216*^9, 3.4639140305828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "c", ",", "b", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460763297997`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Flatten",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Flatten"], "[", 
   StyleBox["list", "TI"], ",", 
   StyleBox["n", "TI"], "]"}]]],
 " ",
 Cell[BoxData[Cell[TextData[{
   "flatten out the top ",
   Cell[BoxData[
    StyleBox["n", "TI"]], "InlineFormula"],
   " levels in ",
   Cell[BoxData[
    StyleBox["list", "TI"]], "InlineFormula"]
  }], "TableText"]]]
}], "Text",
 CellChangeTimes->{{3.4639140378758*^9, 3.4639140465158*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", "a", "}"}], "}"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639140486348*^9, 3.4639140577668*^9}}],

Cell[BoxData[
 RowBox[{"{", "a", "}"}]], "Output",
 CellChangeTimes->{3.4649460763454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", "a", "}"}], "}"}], "}"}], "}"}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", "a", "}"}], "}"}], "}"}], "}"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", "a", "}"}], "}"}], "}"}], "}"}], ",", "3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4639140486348*^9, 3.4639140731928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", "a", "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.464946076361*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "a", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460763766003`*^9}],

Cell[BoxData[
 RowBox[{"{", "a", "}"}]], "Output",
 CellChangeTimes->{3.4649460763766003`*^9}]
}, Open  ]],

Cell["\<\
But you have to be careful not to destroy meaningfull nesting.\
\>", "Text",
 CellChangeTimes->{{3.4639140898778*^9, 3.4639141054758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639141080708*^9, 3.4639141270858*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460763922*^9}]
}, Open  ]],

Cell["To keep the {x,y} pairs:", "Text",
 CellChangeTimes->{{3.4639141414118*^9, 3.4639141600488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "}"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4639141080708*^9, 3.4639141515238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460764077997`*^9}]
}, Open  ]],

Cell["You can partition lists", "Text",
 CellChangeTimes->{{3.4639141886928*^9, 3.4639141943828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639141956538*^9, 3.4639142111708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460764234*^9}]
}, Open  ]],

Cell[TextData[{
 "But ",
 Cell[BoxData[
  ButtonBox["Partition",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Partition"]]],
 " throws away elements that don't exactly fit into the partition scheme:"
}], "Text",
 CellChangeTimes->{{3.4639142347304*^9, 3.4639142811524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639141956538*^9, 3.4639142111708*^9}, {
  3.4639142840204*^9, 3.4639142871784*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.464946076439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"PadRight", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10"}], "}"}], ",", "12"}], "]"}], ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"PadRight", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10"}], "}"}], ",", "12", ",", "x"}], "]"}], ",", 
   "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4639143224234*^9, 3.4639143815204*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460764546003`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "x", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4649460764546003`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists as Sets", "Subsubsection",
 CellChangeTimes->{{3.4639137890824003`*^9, 3.4639137916534*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " usually keeps the elements of a list in exactly the order you originally \
entered them. If you want to treat a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " list like a mathematical ",
 StyleBox["set",
  FontSlant->"Italic"],
 ", however, you may want to ignore the order of elements in the list."
}], "Text",
 CellChangeTimes->{3.4639135307426*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4639135360025997`*^9, 3.4639135502626*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "a", ",", "b", ",", "c"}],
   "}"}]], "Output",
 CellChangeTimes->{3.4649460765014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4639135613566*^9, 3.4639135631916*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.4649460765326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4639135792136*^9, 3.4639135808126*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.4649460765638*^9}]
}, Open  ]],

Cell["\<\
Intersection does not care about the order of list arguments. The opposite \
process however, does:\
\>", "Text",
 CellChangeTimes->{{3.4639136175816*^9, 3.4639136523726*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4639135893896*^9, 3.4639136133836*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.4649460766106*^9}],

Cell[BoxData[
 RowBox[{"{", "5", "}"}]], "Output",
 CellChangeTimes->{3.4649460766106*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Complement",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Complement"], "[", 
   StyleBox["universal", "TI"], ",", 
   SubscriptBox[
    StyleBox["list", "TI"], 
    StyleBox["1", "TR"]], ",", 
   StyleBox["\[Ellipsis]", "TR"], "]"}]]],
 "\t",
 Cell[BoxData[Cell[TextData[{
   "give a list of the elements that are in ",
   Cell[BoxData[
    StyleBox["universal", "TI"]], "InlineFormula"],
   ", but not in any of the ",
   Cell[BoxData[
    SubscriptBox[
     StyleBox["list", "TI"], 
     StyleBox["i", "TI"]]], "InlineFormula"]
  }], "TableText"]]]
}], "Text",
 CellChangeTimes->{{3.4639136636004*^9, 3.4639136701424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", "4", ",", "5", 
    ",", "6", ",", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639136958554*^9, 3.4639137079614*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4639137084704*^9, 3.4649460766730003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", "4", ",", "5", 
    ",", "6", ",", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639137133754*^9, 3.4639137139244003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4639137142804003`*^9, 3.4649460767354*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4639137313424*^9, 3.4639137464124002`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4639137469384003`*^9, 3.4649460767822*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excercise", "Subsubsection",
 CellChangeTimes->{{3.4639166628311996`*^9, 3.4639166674421997`*^9}}],

Cell[TextData[{
 "Evaluate {a,b,c}.{x,y,z} using both the operator form and the function form \
(",
 ButtonBox["Dot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dot"],
 ")"
}], "Text",
 CellChangeTimes->{
  3.4639152581236*^9, {3.4649429485014*^9, 3.4649429485014*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Evaluate {{m11,m12,m13},{m21,m22,m23},{m31,m32,m33}}.{x,y,z} and interpret \
the result\
\>", "Text",
 CellChangeTimes->{3.4639152683115997`*^9},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[{
 "Compute the eigenvalues of the matrix",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"1", "2", "3"},
      {"4", "5", "6"},
      {"7", "8", "9"}
     }], ")"}],
   MatrixForm[#]& ]]],
 " using the built-in function ",
 ButtonBox["Eigenvalues",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Eigenvalues"],
 ".  "
}], "Text",
 CellChangeTimes->{
  3.4639152911036*^9, {3.4649429333694*^9, 3.4649429333694*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[{
 "Create {x,y} lists:\nGiven two random x- and y- vector of dimension 10. \
Create the list of 10 {x,y} pairs.\nDo the same for dimension of 1000 and \
visualize the list using ",
 Cell[BoxData[
  ButtonBox["ListPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListPlot"]]],
 ".\nCreate a similar vidualization of 3-dimensional {x,y,z} pairs."
}], "Text",
 CellChangeTimes->{{3.4639148914032*^9, 3.4639149032841997`*^9}, {
   3.463915533054*^9, 3.463915545793*^9}, 3.4649429090646*^9},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Which numbers smaller than 1000 are Primes and Fibonacci numbers?\
\>", "Text",
 CellChangeTimes->{{3.4639148914032*^9, 3.4639149032841997`*^9}, {
  3.463915533054*^9, 3.463915545793*^9}, {3.4639168857967997`*^9, 
  3.4639169119988003`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[StyleBox["Given a list of 1000 {x,y,z} pairs, produce a list of \
{x,z} pairs, and give the y-vector.",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.4639169558178*^9, 3.4639170054484*^9}},
 FontWeight->"Bold"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyzList", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"10", ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4639169495067997`*^9, 3.4639169508458*^9}, {
  3.4639170874393997`*^9, 3.4639170941664*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{824, 645},
WindowMargins->{{222, Automatic}, {Automatic, 9}},
ShowSelection->True,
Magnification->1.2000000476837158`,
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3464953274-6529072"->{
  Cell[158743, 3839, 328, 6, 58, "Print",
   CellTags->"Info3464953274-6529072"]},
 "Info3464953274-8450452"->{
  Cell[160737, 3915, 916, 17, 112, "Print",
   CellTags->"Info3464953274-8450452"]},
 "Info3464953274-3666917"->{
  Cell[161809, 3941, 911, 17, 112, "Print",
   CellTags->"Info3464953274-3666917"]},
 "Info3464953275-1777061"->{
  Cell[165388, 4058, 1217, 22, 112, "Print",
   CellTags->"Info3464953275-1777061"]},
 "Info3464953275-8084313"->{
  Cell[168850, 4174, 606, 13, 86, "Print",
   CellTags->"Info3464953275-8084313"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3464953274-6529072", 209733, 5675},
 {"Info3464953274-8450452", 209845, 5678},
 {"Info3464953274-3666917", 209959, 5681},
 {"Info3464953275-1777061", 210073, 5684},
 {"Info3464953275-8084313", 210188, 5687}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 187, 5, 152, "Title"],
Cell[757, 29, 433, 10, 148, "Subtitle"],
Cell[CellGroupData[{
Cell[1215, 43, 201, 6, 90, "Section"],
Cell[CellGroupData[{
Cell[1441, 53, 90, 1, 43, "Subsection"],
Cell[1534, 56, 634, 18, 72, "Text"],
Cell[2171, 76, 232, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[2428, 86, 304, 6, 87, "Input"],
Cell[2735, 94, 97, 2, 47, "Output"],
Cell[2835, 98, 97, 2, 47, "Output"],
Cell[2935, 102, 92, 2, 47, "Output"]
}, Open  ]],
Cell[3042, 107, 667, 14, 133, "Text"],
Cell[3712, 123, 258, 7, 38, "Text"],
Cell[CellGroupData[{
Cell[3995, 134, 360, 11, 55, "Input"],
Cell[4358, 147, 246, 8, 76, "Output"]
}, Open  ]],
Cell[4619, 158, 262, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[4906, 168, 141, 2, 55, "Input"],
Cell[5050, 172, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5158, 178, 136, 2, 55, "Input"],
Cell[5297, 182, 194, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5528, 192, 338, 7, 55, "Input"],
Cell[5869, 201, 2798, 48, 56, "Output"]
}, Open  ]],
Cell[8682, 252, 254, 5, 38, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8973, 262, 210, 6, 51, "Subsection",
 Evaluatable->False],
Cell[9186, 270, 938, 21, 180, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10149, 295, 188, 5, 55, "Input"],
Cell[10340, 302, 175, 5, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10552, 312, 326, 10, 80, "Input"],
Cell[10881, 324, 111, 3, 74, "Output"],
Cell[10995, 329, 111, 3, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11143, 337, 400, 10, 80, "Input"],
Cell[11546, 349, 67, 1, 56, "Output"],
Cell[11616, 352, 67, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11720, 358, 99, 1, 36, "Subsubsection"],
Cell[11822, 361, 199, 4, 38, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12070, 371, 99, 1, 51, "Subsection"],
Cell[12172, 374, 540, 10, 133, "Text"],
Cell[CellGroupData[{
Cell[12737, 388, 364, 10, 61, "Input"],
Cell[13104, 400, 39573, 655, 344, "Output"]
}, Open  ]],
Cell[52692, 1058, 299, 7, 62, "Text"],
Cell[CellGroupData[{
Cell[53016, 1069, 249, 6, 55, "Input"],
Cell[53268, 1077, 116, 3, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53421, 1085, 187, 4, 55, "Input"],
Cell[53611, 1091, 97, 2, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53757, 1099, 206, 3, 51, "Subsection"],
Cell[53966, 1104, 240, 7, 109, "Text"],
Cell[54209, 1113, 248, 7, 62, "Text"],
Cell[54460, 1122, 176, 4, 55, "Input"],
Cell[54639, 1128, 502, 16, 91, "Input"],
Cell[55144, 1146, 253, 7, 62, "Text"],
Cell[55400, 1155, 258, 5, 62, "Text"],
Cell[CellGroupData[{
Cell[55683, 1164, 255, 5, 60, "Input"],
Cell[55941, 1171, 89, 1, 56, "Output"]
}, Open  ]],
Cell[56045, 1175, 246, 7, 38, "Text"],
Cell[CellGroupData[{
Cell[56316, 1186, 395, 8, 60, "Input"],
Cell[56714, 1196, 118, 2, 31, "Print"],
Cell[56835, 1200, 89, 1, 56, "Output"]
}, Open  ]],
Cell[56939, 1204, 107, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[57071, 1209, 341, 7, 60, "Input"],
Cell[57415, 1218, 88, 1, 31, "Print"],
Cell[57506, 1221, 85, 1, 56, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57652, 1229, 135, 2, 54, "Section"],
Cell[57790, 1233, 347, 10, 68, "Text"],
Cell[58140, 1245, 303, 5, 72, "Text"],
Cell[CellGroupData[{
Cell[58468, 1254, 91, 1, 43, "Subsection"],
Cell[58562, 1257, 596, 10, 91, "Text"],
Cell[CellGroupData[{
Cell[59183, 1271, 1456, 36, 127, "Input"],
Cell[60642, 1309, 133, 3, 47, "Output"],
Cell[60778, 1314, 71, 1, 47, "Output"],
Cell[60852, 1317, 266, 9, 47, "Output"],
Cell[61121, 1328, 133, 3, 47, "Output"],
Cell[61257, 1333, 68, 1, 56, "Output"]
}, Open  ]],
Cell[61340, 1337, 232, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[61597, 1347, 82, 2, 55, "Input"],
Cell[61682, 1351, 127, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61846, 1359, 169, 4, 57, "Input"],
Cell[62018, 1365, 123, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62178, 1373, 331, 8, 104, "Input"],
Cell[62512, 1383, 125, 3, 56, "Output"],
Cell[62640, 1388, 162, 4, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62839, 1397, 82, 2, 55, "Input"],
Cell[62924, 1401, 123, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63084, 1409, 139, 3, 55, "Input"],
Cell[63226, 1414, 307, 11, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63582, 1431, 106, 1, 51, "Subsection"],
Cell[63691, 1434, 624, 17, 86, "Text"],
Cell[64318, 1453, 160, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[64503, 1460, 549, 12, 80, "Input"],
Cell[65055, 1474, 190, 5, 56, "Output"],
Cell[65248, 1481, 281, 5, 56, "Output"]
}, Open  ]],
Cell[65544, 1489, 229, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[65798, 1496, 345, 6, 80, "Input"],
Cell[66146, 1504, 190, 5, 56, "Output"],
Cell[66339, 1511, 281, 5, 56, "Output"]
}, Open  ]],
Cell[66635, 1519, 1704, 57, 88, "Text"],
Cell[68342, 1578, 228, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[68595, 1585, 349, 9, 80, "Input"],
Cell[68947, 1596, 194, 5, 56, "Output"],
Cell[69144, 1603, 190, 5, 56, "Output"]
}, Open  ]],
Cell[69349, 1611, 820, 27, 64, "Text"],
Cell[CellGroupData[{
Cell[70194, 1642, 246, 6, 55, "Input"],
Cell[70443, 1650, 210, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70690, 1660, 228, 6, 61, "Input"],
Cell[70921, 1668, 222, 5, 56, "Output"]
}, Open  ]],
Cell[71158, 1676, 96, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[71279, 1681, 247, 8, 55, "Input"],
Cell[71529, 1691, 845, 28, 58, "Output"]
}, Open  ]],
Cell[72389, 1722, 206, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[72620, 1731, 375, 11, 55, "Input"],
Cell[72998, 1744, 48797, 823, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121832, 2572, 369, 12, 55, "Input",
 CellID->121192641],
Cell[122204, 2586, 1118, 39, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123359, 2630, 251, 7, 55, "Input",
 CellID->769247627],
Cell[123613, 2639, 951, 36, 66, "Output"]
}, Open  ]],
Cell[124579, 2678, 693, 24, 39, "Text"],
Cell[CellGroupData[{
Cell[125297, 2706, 413, 13, 61, "Input"],
Cell[125713, 2721, 215, 5, 56, "Output"]
}, Open  ]],
Cell[125943, 2729, 170, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[126138, 2737, 447, 12, 80, "Input"],
Cell[126588, 2751, 1025, 33, 56, "Output"],
Cell[127616, 2786, 1396, 43, 96, "Output"]
}, Open  ]],
Cell[129027, 2832, 502, 20, 62, "Text"],
Cell[CellGroupData[{
Cell[129554, 2856, 372, 11, 55, "Input"],
Cell[129929, 2869, 1392, 43, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131358, 2917, 280, 8, 55, "Input"],
Cell[131641, 2927, 1396, 43, 96, "Output"]
}, Open  ]],
Cell[133052, 2973, 224, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[133301, 2983, 359, 10, 61, "Input"],
Cell[133663, 2995, 262, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133962, 3005, 279, 7, 61, "Input"],
Cell[134244, 3014, 234, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134515, 3024, 280, 9, 61, "Input"],
Cell[134798, 3035, 178, 3, 56, "Output"]
}, Open  ]],
Cell[134991, 3041, 513, 18, 39, "Text"],
Cell[CellGroupData[{
Cell[135529, 3063, 131, 4, 55, "Input"],
Cell[135663, 3069, 644, 19, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136344, 3093, 131, 4, 55, "Input"],
Cell[136478, 3099, 329, 11, 56, "Output"]
}, Open  ]],
Cell[136822, 3113, 77, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[136924, 3118, 217, 7, 55, "Input"],
Cell[137144, 3127, 937, 14, 553, "Output"]
}, Open  ]],
Cell[138096, 3144, 77, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[138198, 3149, 314, 10, 55, "Input"],
Cell[138515, 3161, 2184, 38, 598, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140736, 3204, 100, 1, 36, "Subsubsection"],
Cell[140839, 3207, 168, 3, 38, "Text"],
Cell[141010, 3212, 238, 6, 38, "Text"],
Cell[141251, 3220, 310, 6, 38, "Text"],
Cell[141564, 3228, 200, 3, 38, "Text"],
Cell[141767, 3233, 252, 4, 38, "Text"],
Cell[142022, 3239, 201, 3, 38, "Text"],
Cell[142226, 3244, 242, 4, 38, "Text"],
Cell[142471, 3250, 200, 4, 38, "Text"],
Cell[142674, 3256, 266, 5, 62, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142989, 3267, 105, 1, 51, "Subsection"],
Cell[143097, 3270, 352, 11, 39, "Text"],
Cell[CellGroupData[{
Cell[143474, 3285, 290, 7, 55, "Input"],
Cell[143767, 3294, 68, 1, 56, "Output"]
}, Open  ]],
Cell[143850, 3298, 155, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[144030, 3304, 275, 7, 55, "Input"],
Cell[144308, 3313, 67, 1, 56, "Output"]
}, Open  ]],
Cell[144390, 3317, 133, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[144548, 3322, 510, 14, 80, "Input"],
Cell[145061, 3338, 68, 1, 56, "Output"],
Cell[145132, 3341, 68, 1, 56, "Output"]
}, Open  ]],
Cell[145215, 3345, 588, 17, 39, "Text"],
Cell[CellGroupData[{
Cell[145828, 3366, 333, 9, 55, "Input"],
Cell[146164, 3377, 123, 3, 56, "Output"]
}, Open  ]],
Cell[146302, 3383, 873, 29, 39, "Text"],
Cell[CellGroupData[{
Cell[147200, 3416, 532, 14, 80, "Input"],
Cell[147735, 3432, 127, 3, 56, "Output"]
}, Open  ]],
Cell[147877, 3438, 954, 31, 64, "Text"],
Cell[148834, 3471, 434, 12, 55, "Input"],
Cell[CellGroupData[{
Cell[149293, 3487, 339, 8, 55, "Input"],
Cell[149635, 3497, 349, 11, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150021, 3513, 290, 8, 55, "Input"],
Cell[150314, 3523, 289, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150640, 3537, 333, 9, 55, "Input"],
Cell[150976, 3548, 118, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151131, 3556, 325, 9, 55, "Input"],
Cell[151459, 3567, 443, 15, 56, "Output"]
}, Open  ]],
Cell[151917, 3585, 138, 3, 55, "Input"],
Cell[152058, 3590, 286, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[152369, 3603, 188, 4, 55, "Input"],
Cell[152560, 3609, 205, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152802, 3619, 219, 6, 80, "Input"],
Cell[153024, 3627, 204, 5, 56, "Output"]
}, Open  ]],
Cell[153243, 3635, 138, 3, 55, "Input"],
Cell[153384, 3640, 397, 12, 39, "Text"],
Cell[CellGroupData[{
Cell[153806, 3656, 199, 5, 55, "Input"],
Cell[154008, 3663, 124, 3, 56, "Output"]
}, Open  ]],
Cell[154147, 3669, 329, 12, 39, "Text"],
Cell[CellGroupData[{
Cell[154501, 3685, 168, 5, 55, "Input",
 CellID->570548475],
Cell[154672, 3692, 100, 2, 56, "Output"]
}, Open  ]],
Cell[154787, 3697, 368, 11, 39, "Text"],
Cell[CellGroupData[{
Cell[155180, 3712, 173, 5, 55, "Input"],
Cell[155356, 3719, 133, 3, 56, "Output"]
}, Open  ]],
Cell[155504, 3725, 155, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[155684, 3732, 209, 5, 55, "Input"],
Cell[155896, 3739, 68, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156001, 3745, 209, 5, 55, "Input"],
Cell[156213, 3752, 67, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156317, 3758, 208, 5, 55, "Input"],
Cell[156528, 3765, 143, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156708, 3773, 217, 5, 55, "Input"],
Cell[156928, 3780, 147, 3, 56, "Output"]
}, Open  ]],
Cell[157090, 3786, 437, 9, 86, "Text"],
Cell[CellGroupData[{
Cell[157552, 3799, 276, 5, 36, "Subsubsection"],
Cell[157831, 3806, 465, 11, 180, "Text"],
Cell[158299, 3819, 16, 0, 38, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158364, 3825, 111, 1, 51, "Subsection"],
Cell[CellGroupData[{
Cell[158500, 3830, 105, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[158630, 3835, 110, 2, 55, "Input"],
Cell[158743, 3839, 328, 6, 58, "Print",
 CellTags->"Info3464953274-6529072"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159108, 3850, 236, 6, 55, "Input"],
Cell[159347, 3858, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159455, 3864, 273, 8, 55, "Input"],
Cell[159731, 3874, 70, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159838, 3880, 407, 12, 55, "Input"],
Cell[160248, 3894, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160356, 3900, 154, 3, 55, "Input"],
Cell[160513, 3905, 72, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160622, 3911, 112, 2, 55, "Input"],
Cell[160737, 3915, 916, 17, 112, "Print",
 CellTags->"Info3464953274-8450452"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161690, 3937, 116, 2, 55, "Input"],
Cell[161809, 3941, 911, 17, 112, "Print",
 CellTags->"Info3464953274-3666917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162757, 3963, 466, 12, 80, "Input"],
Cell[163226, 3977, 71, 1, 56, "Output"],
Cell[163300, 3980, 72, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163409, 3986, 532, 16, 80, "Input"],
Cell[163944, 4004, 72, 1, 56, "Output"],
Cell[164019, 4007, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164127, 4013, 808, 24, 80, "Input"],
Cell[164938, 4039, 71, 1, 56, "Output"],
Cell[165012, 4042, 71, 1, 56, "Output"]
}, Open  ]],
Cell[165098, 4046, 151, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[165274, 4054, 111, 2, 55, "Input"],
Cell[165388, 4058, 1217, 22, 112, "Print",
 CellTags->"Info3464953275-1777061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166642, 4085, 126, 3, 55, "Input"],
Cell[166771, 4090, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166879, 4096, 151, 4, 55, "Input"],
Cell[167033, 4102, 71, 1, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167153, 4109, 101, 1, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[167279, 4114, 241, 6, 55, "Input"],
Cell[167523, 4122, 72, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167632, 4128, 420, 12, 55, "Input"],
Cell[168055, 4142, 67, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168159, 4148, 420, 12, 55, "Input"],
Cell[168582, 4162, 113, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168732, 4170, 115, 2, 55, "Input"],
Cell[168850, 4174, 606, 13, 86, "Print",
 CellTags->"Info3464953275-8084313"]
}, Open  ]],
Cell[169471, 4190, 606, 19, 64, "Text"],
Cell[CellGroupData[{
Cell[170102, 4213, 227, 7, 55, "Input"],
Cell[170332, 4222, 72, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170441, 4228, 196, 6, 55, "Input"],
Cell[170640, 4236, 68, 1, 56, "Output"]
}, Open  ]],
Cell[170723, 4240, 853, 22, 67, "Text"],
Cell[CellGroupData[{
Cell[171601, 4266, 192, 5, 55, "Input"],
Cell[171796, 4273, 70, 1, 56, "Output"]
}, Open  ]],
Cell[171881, 4277, 250, 7, 39, "Text"],
Cell[CellGroupData[{
Cell[172156, 4288, 329, 10, 55, "Input"],
Cell[172488, 4300, 76, 1, 56, "Output"]
}, Open  ]],
Cell[172579, 4304, 78, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[172682, 4309, 344, 10, 55, "Input"],
Cell[173029, 4321, 71, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173137, 4327, 190, 5, 55, "Input"],
Cell[173330, 4334, 71, 1, 56, "Output"]
}, Open  ]],
Cell[173416, 4338, 273, 7, 39, "Text"],
Cell[173692, 4347, 54, 0, 38, "Text"],
Cell[173749, 4349, 159, 5, 86, "Text"],
Cell[CellGroupData[{
Cell[173933, 4358, 364, 12, 55, "Input",
 CellID->65628085],
Cell[174300, 4372, 247, 6, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174596, 4384, 107, 1, 36, "Subsubsection"],
Cell[174706, 4387, 150, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[174881, 4396, 188, 5, 55, "Input"],
Cell[175072, 4403, 199, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175308, 4414, 335, 11, 55, "Input"],
Cell[175646, 4427, 270, 9, 56, "Output"]
}, Open  ]],
Cell[175931, 4439, 174, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[176130, 4448, 234, 6, 55, "Input"],
Cell[176367, 4456, 165, 5, 56, "Output"]
}, Open  ]],
Cell[176547, 4464, 60, 0, 38, "Text"],
Cell[CellGroupData[{
Cell[176632, 4468, 176, 5, 55, "Input"],
Cell[176811, 4475, 68, 1, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176928, 4482, 97, 1, 36, "Subsubsection"],
Cell[177028, 4485, 157, 3, 38, "Text"],
Cell[177188, 4490, 335, 9, 38, "Text"],
Cell[177526, 4501, 268, 4, 62, "Text"],
Cell[177797, 4507, 246, 4, 38, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178092, 4517, 110, 1, 51, "Subsection"],
Cell[178205, 4520, 267, 6, 86, "Text"],
Cell[178475, 4528, 651, 27, 39, "Text"],
Cell[CellGroupData[{
Cell[179151, 4559, 225, 6, 55, "Input"],
Cell[179379, 4567, 147, 3, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179563, 4575, 215, 6, 55, "Input"],
Cell[179781, 4583, 143, 3, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179961, 4591, 228, 6, 55, "Input"],
Cell[180192, 4599, 145, 3, 84, "Output"]
}, Open  ]],
Cell[180352, 4605, 131, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[180508, 4610, 334, 8, 104, "Input"],
Cell[180845, 4620, 156, 4, 84, "Output"],
Cell[181004, 4626, 143, 3, 84, "Output"]
}, Open  ]],
Cell[181162, 4632, 327, 12, 39, "Text"],
Cell[CellGroupData[{
Cell[181514, 4648, 336, 8, 104, "Input"],
Cell[181853, 4658, 156, 4, 84, "Output"],
Cell[182012, 4664, 156, 4, 84, "Output"]
}, Open  ]],
Cell[182183, 4671, 154, 3, 55, "Input"],
Cell[182340, 4676, 508, 15, 39, "Text"],
Cell[CellGroupData[{
Cell[182873, 4695, 277, 7, 55, "Input"],
Cell[183153, 4704, 179, 5, 84, "Output"]
}, Open  ]],
Cell[183347, 4712, 780, 27, 39, "Text"],
Cell[CellGroupData[{
Cell[184152, 4743, 181, 5, 55, "Input"],
Cell[184336, 4750, 137, 3, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184522, 4759, 101, 1, 38, "Subsection"],
Cell[184626, 4762, 327, 7, 62, "Text"],
Cell[CellGroupData[{
Cell[184978, 4773, 293, 7, 55, "Input"],
Cell[185274, 4782, 230, 5, 84, "Output"]
}, Open  ]],
Cell[185519, 4790, 314, 10, 39, "Text"],
Cell[CellGroupData[{
Cell[185858, 4804, 339, 8, 55, "Input"],
Cell[186200, 4814, 191, 5, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186428, 4824, 248, 6, 55, "Input"],
Cell[186679, 4832, 190, 5, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186906, 4842, 168, 5, 55, "Input"],
Cell[187077, 4849, 147, 3, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187261, 4857, 418, 11, 80, "Input"],
Cell[187682, 4870, 143, 3, 84, "Output"],
Cell[187828, 4875, 143, 3, 84, "Output"]
}, Open  ]],
Cell[187986, 4881, 1094, 42, 88, "Text"],
Cell[CellGroupData[{
Cell[189105, 4927, 338, 9, 55, "Input"],
Cell[189446, 4938, 194, 5, 84, "Output"]
}, Open  ]],
Cell[189655, 4946, 202, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[189882, 4956, 303, 8, 55, "Input"],
Cell[190188, 4966, 200, 5, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190425, 4976, 200, 6, 55, "Input"],
Cell[190628, 4984, 156, 4, 84, "Output"]
}, Open  ]],
Cell[190799, 4991, 262, 7, 38, "Text"],
Cell[CellGroupData[{
Cell[191086, 5002, 261, 7, 55, "Input"],
Cell[191350, 5011, 165, 4, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191552, 5020, 226, 6, 55, "Input"],
Cell[191781, 5028, 143, 3, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191961, 5036, 49, 0, 36, "Subsubsection"],
Cell[192013, 5038, 529, 14, 63, "Text"],
Cell[CellGroupData[{
Cell[192567, 5056, 569, 18, 80, "Input"],
Cell[193139, 5076, 635, 18, 84, "Output"],
Cell[193777, 5096, 642, 19, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194456, 5120, 303, 9, 55, "Input"],
Cell[194762, 5131, 137, 3, 84, "Output"]
}, Open  ]],
Cell[194914, 5137, 499, 18, 39, "Text"],
Cell[CellGroupData[{
Cell[195438, 5159, 220, 6, 55, "Input"],
Cell[195661, 5167, 90, 2, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195788, 5174, 630, 22, 104, "Input"],
Cell[196421, 5198, 136, 4, 84, "Output"],
Cell[196560, 5204, 117, 3, 84, "Output"],
Cell[196680, 5209, 94, 2, 84, "Output"]
}, Open  ]],
Cell[196789, 5214, 148, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[196962, 5221, 300, 9, 55, "Input"],
Cell[197265, 5232, 133, 3, 84, "Output"]
}, Open  ]],
Cell[197413, 5238, 102, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[197540, 5243, 333, 11, 55, "Input"],
Cell[197876, 5256, 215, 7, 84, "Output"]
}, Open  ]],
Cell[198106, 5266, 101, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[198232, 5271, 277, 7, 55, "Input"],
Cell[198512, 5280, 300, 9, 84, "Output"]
}, Open  ]],
Cell[198827, 5292, 277, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[199129, 5304, 333, 8, 55, "Input"],
Cell[199465, 5314, 299, 9, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199801, 5328, 674, 19, 80, "Input"],
Cell[200478, 5349, 374, 11, 84, "Output"],
Cell[200855, 5362, 374, 11, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201278, 5379, 104, 1, 26, "Subsubsection"],
Cell[201385, 5382, 427, 12, 123, "Text"],
Cell[CellGroupData[{
Cell[201837, 5398, 354, 9, 79, "Input"],
Cell[202194, 5409, 179, 5, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202410, 5419, 357, 9, 79, "Input"],
Cell[202770, 5430, 85, 2, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202892, 5437, 288, 7, 79, "Input"],
Cell[203183, 5446, 123, 3, 84, "Output"]
}, Open  ]],
Cell[203321, 5452, 185, 4, 54, "Text"],
Cell[CellGroupData[{
Cell[203531, 5460, 516, 14, 115, "Input"],
Cell[204050, 5476, 90, 2, 84, "Output"],
Cell[204143, 5480, 90, 2, 84, "Output"]
}, Open  ]],
Cell[204248, 5485, 687, 23, 86, "Text"],
Cell[CellGroupData[{
Cell[204960, 5512, 267, 6, 79, "Input"],
Cell[205230, 5520, 190, 4, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205457, 5529, 260, 6, 79, "Input"],
Cell[205720, 5537, 190, 4, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205947, 5546, 183, 4, 79, "Input"],
Cell[206133, 5552, 494, 15, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206676, 5573, 104, 1, 26, "Subsubsection"],
Cell[206783, 5576, 325, 11, 38, "Text"],
Cell[207111, 5589, 207, 6, 38, "Text"],
Cell[207321, 5597, 493, 19, 79, "Text"],
Cell[207817, 5618, 560, 13, 110, "Text"],
Cell[208380, 5633, 303, 7, 38, "Text"],
Cell[208686, 5642, 241, 4, 38, "Text"],
Cell[208930, 5648, 308, 8, 55, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
