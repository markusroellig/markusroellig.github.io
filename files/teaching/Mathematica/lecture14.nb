(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    227179,       6632]
NotebookOptionsPosition[    210392,       6169]
NotebookOutlinePosition[    210965,       6189]
CellTagsIndexPosition[    210922,       6186]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a Tool for Astronomy and Physics"
}], "Title",
 CellChangeTimes->{{3.4631492689871325`*^9, 3.4631492808119326`*^9}}],

Cell["\<\
Lecture 14
Wintersemester 2009/10

Markus R\[ODoubleDot]llig\
\>", "Subtitle",
 CellChangeTimes->{{3.4631492844155326`*^9, 3.463149301715933*^9}, {
   3.463149446339533*^9, 3.4631494500679326`*^9}, {3.463150895378133*^9, 
   3.4631508957369328`*^9}, {3.4631509331145325`*^9, 
   3.4631509348461323`*^9}, {3.4633918330178003`*^9, 3.4633918441094*^9}, {
   3.4633924180713997`*^9, 3.4633924208326*^9}, 3.4633925658190002`*^9, 
   3.464937683525*^9, 3.4654667940002003`*^9, 3.4661610144728003`*^9, 
   3.466824617671341*^9, 3.46772120193779*^9, {3.469855652163376*^9, 
   3.4698556523033752`*^9}, {3.472295674747834*^9, 3.4722956749038343`*^9}, {
   3.4728923814640903`*^9, 3.4728923817136908`*^9}, 3.4734833577832594`*^9}],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{{3.4734833913857183`*^9, 3.47348339211892*^9}}],

Cell[TextData[{
 "Required Reading:\n\n",
 ButtonBox["Curve Fitting",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/CurveFitting"],
 "\n",
 ButtonBox["Manipulating Numerical Data",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ManipulatingNumericalData"],
 "\n",
 ButtonBox["Statistical Model Analysis\n",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/StatisticalModelAnalysis"],
 ButtonBox["Statistical Model Analysis",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/StatisticalModelAnalysis"],
 "\n",
 ButtonBox["Curve Fitting & Approximate Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/CurveFittingAndApproximateFunctions"]
}], "Text",
 CellChangeTimes->{{3.473941328446535*^9, 3.473941346214966*^9}, {
  3.4739569302612095`*^9, 3.473956939512026*^9}, {3.473959118394659*^9, 
  3.473959147593512*^9}, {3.4739592131916275`*^9, 3.4739592224892435`*^9}}],

Cell[CellGroupData[{

Cell["Fit", "Subsection",
 CellChangeTimes->{{3.473956363839815*^9, 3.473956364651016*^9}}],

Cell[TextData[{
 "A common task is to find a formula that bets fits a given set of data. One \
way to do this in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is to use ",
 Cell[BoxData[
  ButtonBox["Fit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Fit"]], "InlineFormula"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4739413551225815`*^9, 3.4739413976950564`*^9}, 
   3.4740481581850667`*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Fit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Fit"], "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", 
    StyleBox["funs", "TI"], ",", 
    StyleBox["vars", "TI"]}], "]"}]], "InlineFormula"],
 " finds a least\[Hyphen]squares fit to a list of data as a linear \
combination of the functions ",
 Cell[BoxData[
  StyleBox["funs", "TI"]], "InlineFormula"],
 " of variables ",
 Cell[BoxData[
  StyleBox["vars", "TI"]], "InlineFormula"],
 ". As data we take the distance of the planets in the solar system in \
astronomical units (AU). "
}], "Text",
 CellChangeTimes->{{3.4739414076790743`*^9, 3.4739414115010805`*^9}, {
  3.4739415159744644`*^9, 3.473941558718539*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"AstronomicalData", "[", 
    RowBox[{"\"\<Planet\>\"", ",", "\"\<SemimajorAxis\>\""}], "]"}], "/", 
   RowBox[{"AstronomicalData", "[", 
    RowBox[{"\"\<Earth\>\"", ",", "\"\<SemimajorAxis\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.473941561448544*^9, 3.473941573538565*^9}, {
  3.473941961152446*^9, 3.473941978109676*^9}}],

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{"AstronomicalData", "[", "\"\<Planet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.4739419814012814`*^9, 3.4739419951137056`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "@", "#2"}], ",", "#1"}], "}"}], "&"}], ",", 
        "planets"}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4739419665500555`*^9, 3.4739420437233915`*^9}, {
  3.473942083285061*^9, 3.4739421308495445`*^9}}],

Cell[TextData[{
 "Now we use ",
 ButtonBox["Fit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Fit"],
 " to find the best fitting linear function:"
}], "Text",
 CellChangeTimes->{{3.473942847496233*^9, 3.4739428715202756`*^9}}],

Cell[BoxData[
 RowBox[{"line", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], "Input"],

Cell["\<\
Plotting both, data and fit reveals the bad quality of the fit. That is \
simply because the data can not be represented by a line. \
\>", "Text",
 CellChangeTimes->{{3.473942877588686*^9, 3.4739429164327545`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "@", "#2"}], ",", "#1"}], "}"}], "&"}], ",", 
          "planets"}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"line", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.473942203545672*^9, 3.473942212780888*^9}, {
  3.4739428378086166`*^9, 3.473942838214217*^9}}],

Cell["We could try higher order functions", "Text",
 CellChangeTimes->{{3.4739429226727653`*^9, 3.4739429376643915`*^9}}],

Cell[BoxData[
 RowBox[{"parabola", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", " ", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"poly3rd", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}], ",", 
      RowBox[{"x", "^", "3"}]}], "}"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.473942942921601*^9, 3.473942958927229*^9}}],

Cell["\<\
Each additional order terms improves the overall fit of the data\
\>", "Text",
 CellChangeTimes->{{3.473942973716055*^9, 3.473942990158484*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "@", "#2"}], ",", "#1"}], "}"}], "&"}], ",", 
          "planets"}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"line", ",", " ", "parabola", ",", "poly3rd"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.473942203545672*^9, 3.473942212780888*^9}, {
  3.473942964044038*^9, 3.4739429642468386`*^9}}],

Cell[TextData[{
 "The Titius\[Dash]Bode law (sometimes termed just Bode's law) is a \
hypothesis that the bodies in some orbital systems, including the Sun's, \
orbit at semi-major axes in an exponential function of planetary sequence. \
The hypothesis correctly predicted the orbits of Ceres and Uranus, but failed \
as a predictor of Neptune's orbit. The law relates the semi-major axis, a, of \
each planet outward from the Sun in units such that the Earth's semi-major \
axis is equal to 10, with\n",
 StyleBox["a=n+", "Input"],
 "4\nwhere n=0,3,6,12,24,48,..."
}], "Text",
 CellChangeTimes->{{3.4740037839582224`*^9, 3.474003850383139*^9}}],

Cell[TextData[{
 "The resulting values can be divided by 10 to convert them into astronomical \
units (AU), which would result in the expression\na=0.4+0.3 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "m"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with m=-\[Infinity],0,1,2,....\nFor the outer planets, each planet is \
predicted to be roughly twice as far away from the Sun as the previous object."
}], "Text",
 CellChangeTimes->{{3.4740038697583733`*^9, 3.4740039364328904`*^9}}],

Cell[BoxData[{
 RowBox[{"bode", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"0.4", "+", 
     RowBox[{"0.3", " ", 
      SuperscriptBox["2", "m"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"-", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "8"}], "]"}]}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "bode"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "@", "#2"}], ",", "#1"}], "}"}], "&"}], ",", 
        "planets"}], "]"}], ",", "Automatic"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4740038848904*^9, 3.474003894125616*^9}, {
  3.4740039407228975`*^9, 3.474004113103201*^9}, {3.4740045406091537`*^9, 
  3.474004566786*^9}}],

Cell["\<\
This seems to fit only to till Mars. However, if we would shift all \
predictions starting from Jupiter to the next outer orbit we would have a \
match!: Actually, we missed a \"planet\". Ceres was considered a planet from \
1801 until the 1860s, so Bode included Ceres in his sequence: \
\>", "Text",
 CellChangeTimes->{{3.4740041858305283`*^9, 3.4740042650318675`*^9}, {
  3.474004295607921*^9, 3.474004337571995*^9}}],

Cell[BoxData[{
 RowBox[{"ceres", "=", 
  RowBox[{
   RowBox[{"AstronomicalData", "[", 
    RowBox[{"\"\<Ceres\>\"", ",", "\"\<SemimajorAxis\>\""}], "]"}], "/", 
   RowBox[{"AstronomicalData", "[", 
    RowBox[{"\"\<Earth\>\"", ",", "\"\<SemimajorAxis\>\""}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"Insert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AstronomicalData", "[", 
      RowBox[{"\"\<Planet\>\"", ",", "\"\<SemimajorAxis\>\""}], "]"}], "/", 
     RowBox[{"AstronomicalData", "[", 
      RowBox[{"\"\<Earth\>\"", ",", "\"\<SemimajorAxis\>\""}], "]"}]}], ",", 
    "ceres", ",", "5"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.474004338773197*^9, 3.4740044215313425`*^9}, 
   3.474004455448604*^9}],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "bode"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "@", "#2"}], ",", "#1"}], "}"}], "&"}], ",", 
        RowBox[{"Insert", "[", 
         RowBox[{"planets", ",", "\"\<Ceres\>\"", ",", "5"}], "]"}]}], "]"}], 
      ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4740044675698256`*^9, 3.4740045283631325`*^9}}],

Cell["\<\
Which is a very good fit, given the fact that Bode developed his sequence in \
the very early 19th century, long before Neptune and Pluto were discovered!\
\>", "Text",
 CellChangeTimes->{{3.474004589234439*^9, 3.474004667080598*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"data", ",", "line", ",", "parabola", ",", "poly3rd"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.47394302207614*^9, 3.473943035086563*^9}}],

Cell["\<\
As another example we simulate real data by adding some random noise to the \
'real' values. In this case we simulate the fall of an object from 5m height:\
\>", "Text",
 CellChangeTimes->{{3.4739433527947226`*^9, 3.4739434344140663`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"messwerte", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "9.81"}], " ", 
         RowBox[{
          RowBox[{"t", "^", "2"}], "/", "2"}]}], " ", "+", " ", "5", " ", "+", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "0.2"}], "}"}], "]"}]}]}], "}"}], ",", 
     "\n", "      ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0.1", ",", " ", "0.9", ",", " ", "0.01"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4739434566853065`*^9, 3.4739435041405907`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "messwerte", "]"}]], "Input",
 CellChangeTimes->{{3.473943511379003*^9, 3.4739435149514093`*^9}}],

Cell[TextData[{
 "Using",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{" ", "Fit"}],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Fit"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can find the best fitting parameters of the general formula a+b ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". b is half the gravitational acceleration and a is the starting height."
}], "Text",
 CellChangeTimes->{{3.4739435290382338`*^9, 3.473943617084789*^9}, {
  3.4739560663160925`*^9, 3.4739560822749205`*^9}}],

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{"messwerte", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SuperscriptBox["t", "2"]}], "}"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4739434386260734`*^9, 3.47394344792369*^9}, 
   3.473943502970588*^9, {3.473943621265596*^9, 3.4739436323416157`*^9}}],

Cell["\<\
To find the result 'by hand' we could perform the sum of squares of the \
deviations in terms of the unknown position, and then compute the derivatives \
with respect to these two variables to get a homogeneous linear system of two \
equations with two unknowns \
\>", "Text",
 CellChangeTimes->{{3.4739440285199113`*^9, 3.4739441015748396`*^9}, {
  3.4740481716790905`*^9, 3.474048174206295*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fehlersumme", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"messwerte", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["g", "2"], " ", 
            SuperscriptBox["t", "2"]}], "+", "h"}], ")"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"messwerte", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}]}], ")"}], "2"], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "messwerte", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"fehlersumme", ",", "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"fehlersumme", "=", 
  RowBox[{"Simplify", "@", "fehlersumme"}]}]}], "Input",
 CellChangeTimes->{{3.473944108750852*^9, 3.4739443024563923`*^9}}],

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fehlersumme", ",", " ", "g"}], "]"}], " ", "==", " ", "0"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fehlersumme", ",", " ", "h"}], "]"}], " ", "==", " ", "0"}]}],
     "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"g", ",", " ", "h"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "/", "2"}], " ", 
     RowBox[{"t", "^", "2"}]}], "+", "h"}], ")"}], "/.", "%"}]}], "Input",
 CellChangeTimes->{{3.4739443248736315`*^9, 3.4739443261996346`*^9}, {
  3.4739443880693426`*^9, 3.473944388256543*^9}}],

Cell[TextData[{
 "Another way to solve the problem is to use the ",
 ButtonBox["PseudoInverse",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PseudoInverse"],
 ". We need to set up the corresponding matrix:"
}], "Text",
 CellChangeTimes->{{3.4739444440734415`*^9, 3.473944487784718*^9}, {
   3.4739450192932515`*^9, 3.473945033785677*^9}, 3.474048178246702*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "^", "2"}], "/", "2"}]}], "}"}], 
     "&"}], " ", "/@", " ", "messwerte"}], "]"}], ".", "\n", 
  "                              ", 
  RowBox[{"(", 
   RowBox[{"Last", " ", "/@", " ", "messwerte"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.473945005768028*^9, 3.473945009995635*^9}}],

Cell["\<\
As already mentioned, Fit performs a least square minimization.\
\>", "Text",
 CellChangeTimes->{{3.473943639346028*^9, 3.47394366329207*^9}, 
   3.47404818844912*^9}],

Cell["\<\
Fit is not limited to simple polynomia, i.e. functions of powers of x, but \
can swallow any linear combination of any functions:\
\>", "Text",
 CellChangeTimes->{{3.473943038003768*^9, 3.473943080841443*^9}, 
   3.4740482085731554`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Pi"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Pi", "/", "2"}], ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"Pi", ",", " ", 
       RowBox[{"-", "4"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.4739430998346777`*^9}],

Cell["\<\
Fit the data to a linear combination of sine functions using machine \
arithmetic:\
\>", "Text",
 CellChangeTimes->{3.4739431066674895`*^9}],

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "/", "2"}], "]"}], ",", " ", 
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "}"}], ",", " ", "x"}], 
  "]"}]], "Input"],

Cell["Show the data with the curve :", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell["\<\
You can also do multidimensional fits. Here is data in two dimensions:\
\>", "Text",
 CellChangeTimes->{{3.473956191865113*^9, 3.47395620740274*^9}, 
   3.4740482140487647`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input"],

Cell["At first, we will find the plane that fits the data best", "Text",
 CellChangeTimes->{{3.4739562149375534`*^9, 3.473956227074375*^9}}],

Cell[BoxData[{
 RowBox[{"plane", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "x", ",", " ", "y"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{"plane", ",", "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".5", "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"Point", ",", " ", "data"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.473956231099182*^9, 3.473956243048803*^9}}],

Cell["Now lets find the quadratic that fits the data best", "Text",
 CellChangeTimes->{{3.473956251706818*^9, 3.4739562637656393`*^9}}],

Cell[BoxData[{
 RowBox[{"quad", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "x", ",", " ", "y", ",", " ", 
      RowBox[{"x", "^", "2"}], ",", " ", 
      RowBox[{"x", " ", "y"}], ",", " ", 
      RowBox[{"y", "^", "2"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{"quad", ",", "  ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".5", "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"Point", ",", " ", "data"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.47395628108167*^9, 3.47395628123767*^9}}],

Cell[CellGroupData[{

Cell["Exercises", "Subsubsection",
 CellChangeTimes->{{3.4739563732778316`*^9, 3.4739563747598343`*^9}, 
   3.474048217246771*^9}],

Cell["\<\
Find a linear and quadratic fit to the sequence of the first 20 primes\
\>", "Text",
 CellChangeTimes->{{3.4739564056322885`*^9, 3.4739564257095237`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["Take the following data and find a best fitting polynomial", "Text",
 CellChangeTimes->{{3.473956838111848*^9, 3.4739568532906747`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.`"}], ",", "58.91477567353922`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.8`"}], ",", "49.122379749189804`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.6`"}], ",", "33.84316875171661`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.4`"}], ",", "18.397447574957127`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2`"}], ",", "14.124347067895702`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.`"}], ",", "7.721489914441162`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.7999999999999998`"}], ",", "4.469593722608596`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5999999999999999`"}], ",", "5.107793228179681`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3999999999999999`"}], ",", "3.7515285155233666`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.19999999999999996`"}], ",", "2.592741509664536`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.20000000000000018`", ",", "2.4348819638889423`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.40000000000000036`", ",", "1.0110618886513378`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.6000000000000001`", ",", "2.3678600966373464`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.8000000000000003`", ",", "2.3988988374323936`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.`", ",", "0.6046113731685077`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.2000000000000002`", ",", 
      RowBox[{"-", "2.401358338685386`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.4000000000000004`", ",", 
      RowBox[{"-", "2.185297354538078`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.6`", ",", 
      RowBox[{"-", "2.815605658667949`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8000000000000003`", ",", 
      RowBox[{"-", "5.477201403872526`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.`", ",", 
      RowBox[{"-", "3.8006843749317554`"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4739568578458824`*^9, 3.473956858688284*^9}, {
  3.473956889014737*^9, 3.4739568949895477`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["LinearModelFit", "Subsection",
 CellChangeTimes->{{3.4739569988545303`*^9, 3.473957001381735*^9}}],

Cell[TextData[{
 "A related but much more powerful variant for linear fits is the function ",
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.473957066543049*^9, 3.4739570973375034`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["LinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/LinearModelFit"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
    StyleBox["x", "TI"]}], "]"}]], "InlineFormula"],
 "constructs a linear model of the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox[
    StyleBox["\[Beta]", "TR"], 
    StyleBox["0", "TR"]], "+", 
   RowBox[{
    SubscriptBox[
     StyleBox["\[Beta]", "TR"], 
     StyleBox["1", "TR"]], " ", 
    SubscriptBox[
     StyleBox["f", "TI"], 
     StyleBox["1", "TR"]]}], "+", 
   RowBox[{
    SubscriptBox[
     StyleBox["\[Beta]", "TR"], 
     StyleBox["2", "TR"]], " ", 
    SubscriptBox[
     StyleBox["f", "TI"], 
     StyleBox["2", "TR"]]}], "+", "\[CenterEllipsis]"}]], "InlineFormula"],
 " that fits the ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["y", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 " for successive ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " values ",
 Cell[BoxData["1"], "InlineFormula"],
 ", ",
 Cell[BoxData["2"], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["\[Ellipsis]", "TR"]], "InlineFormula"],
 ".\n",
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 " returns a symbolic ",
 Cell[BoxData[
  ButtonBox["FittedModel",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FittedModel"]], "InlineFormula"],
 " object to represent the linear model it constructs. The properties and \
diagnostics of the model can be obtained from ",
 Cell[BoxData[
  RowBox[{
   StyleBox["model", "TI"], "[", "\"\<\!\(\*
StyleBox[\"property\", \"TI\"]\)\>\"", "]"}]], "InlineFormula"],
 ". Fit a linear function to the following data:"
}], "Text",
 CellChangeTimes->{{3.473957014766558*^9, 3.4739570261701784`*^9}, {
  3.473957108226322*^9, 3.473957114949934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}]}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"lm", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"data", ",", "x", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"FullForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.473957126197554*^9, 3.473957136462372*^9}}],

Cell[TextData[{
 "To get the functional form use ",
 ButtonBox["Normal",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Normal"]
}], "Text",
 CellChangeTimes->{{3.4739571635440197`*^9, 3.4739571823708553`*^9}}],

Cell[BoxData[
 RowBox[{"Normal", "[", "lm", "]"}]], "Input"],

Cell["\<\
lm acts as a fully functional expression. You can calculate the model at any \
point:\
\>", "Text",
 CellChangeTimes->{{3.4739571907324705`*^9, 3.473957212182508*^9}, 
   3.4740482273555884`*^9}],

Cell[BoxData[
 RowBox[{"lm", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.4739572130249095`*^9, 3.4739572199201217`*^9}}],

Cell["You can plot the model function", "Text",
 CellChangeTimes->{{3.473957225972932*^9, 3.4739572305593405`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"lm", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell["And you can extract a lot information about the fitting:", "Text",
 CellChangeTimes->{{3.4739572386713543`*^9, 3.47395724757897*^9}, 
   3.4740482345160007`*^9}],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<FitResiduals\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"lm", "[", "\"\<FitResiduals\>\"", "]"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input"],

Cell["Obtain an analysis of variance table for the model:", "Text",
 CellChangeTimes->{3.4739574248420815`*^9}],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<ANOVATable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.473957433032096*^9, 3.473957433765297*^9}}],

Cell["Here are all possible properties:", "Text",
 CellChangeTimes->{{3.4739574376029043`*^9, 3.473957444919317*^9}}],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<Properties\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Exercises", "Subsubsection",
 CellChangeTimes->{{3.473957472125765*^9, 3.4739574734673667`*^9}, 
   3.4740482365128045`*^9}],

Cell["\<\
Use LinearNodelFit to find a linear model for the first 100 primes.\
\>", "Text",
 CellChangeTimes->{{3.473957475635771*^9, 3.4739574954634056`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["Visualize the data together with the plot.", "Text",
 CellChangeTimes->{{3.4739574978034096`*^9, 3.4739575079746275`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Visualize the residuals. Any systematic trends in the residuals hints towards \
violations in the assumptions of independent normal errors. Is a linear model \
a reasonable assumptions for the prime distribution?\
\>", "Text",
 CellChangeTimes->{{3.4739575109230328`*^9, 3.473957569610336*^9}, 
   3.4740482418948135`*^9},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindFit", "Subsection",
 CellChangeTimes->{{3.4739575893443704`*^9, 3.4739575912319736`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["FindFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FindFit"], "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", 
    StyleBox["expr", "TI"], ",", 
    StyleBox["pars", "TI"], ",", 
    StyleBox["vars", "TI"]}], "]"}]], "InlineFormula"],
 " ",
 "finds numerical values of the parameters ",
 Cell[BoxData[
  StyleBox["pars", "TI"]], "InlineFormula"],
 " that make ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula"],
 " give a best fit to ",
 Cell[BoxData[
  StyleBox["data", "TI"]], "InlineFormula"],
 " as a function of ",
 Cell[BoxData[
  StyleBox["vars", "TI"]], "InlineFormula"],
 ". The data can have the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["1", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"], ",", 
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["1", "TR"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"], ",", 
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["2", "TR"]]}], "}"}], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula"],
 ", where the number of coordinates ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["y", "TI"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["\[Ellipsis]", "TR"]], "InlineFormula"],
 " is equal to the number of variables in the list ",
 Cell[BoxData[
  StyleBox["vars", "TI"]], "InlineFormula"],
 ". The data can also be of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["f", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["f", "TI"], 
     StyleBox["2", "TR"]], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula"],
 ", with a single coordinate assumed to take values ",
 Cell[BoxData["1"], "InlineFormula"],
 ", ",
 Cell[BoxData["2"], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["\[Ellipsis]", "TR"]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.4739576284380393`*^9, 3.4739576344908495`*^9}}],

Cell["Again we take a look at a list of primes:", "Text",
 CellChangeTimes->{{3.47395764586327*^9, 3.473957655254486*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Prime", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.47395806592321*^9, 3.4739580692616167`*^9}}],

Cell[TextData[{
 "And try to find the best-fit parameters ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]], "InlineMath"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4739576626800995`*^9, 3.473957682492134*^9}}],

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"%", ",", 
   RowBox[{"a", " ", "x", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"b", "+", 
      RowBox[{"c", " ", "x"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell["\<\
The result is given as replacement rules. This makes it easy to insert the \
found parameters and evaluate the fitted function\
\>", "Text",
 CellChangeTimes->{{3.4739579600146246`*^9, 3.473958004271902*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"b", "+", 
       RowBox[{"c", " ", "x"}]}], "]"}]}], "/.", "%"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "%%"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.473958010574313*^9, 3.473958049231181*^9}, 
   3.473958080041235*^9}],

Cell[TextData[{
 "You can also do constrained fitting. ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["FindFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FindFit"], "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["expr", "TI"], ",", 
      StyleBox["cons", "TI"]}], "}"}], ",", 
    StyleBox["pars", "TI"], ",", 
    StyleBox["vars", "TI"]}], "]"}]], "InlineFormula"],
 " finds a best fit subject to the parameter constraints ",
 Cell[BoxData[
  StyleBox["cons", "TI"]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.473958259644351*^9, 3.4739582818431897`*^9}, 
   3.47404824521762*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"a", "  ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.1", " ", "t"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", ".25"}], "}"}]}], "]"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{".1", ",", "41"}], "]"}]}]}], ";"}]], "Input"],

Cell["\<\
Fit to the model with positive amplitude and frequency between 1 and 2:\
\>", "Text",
 CellChangeTimes->{3.4739583073960347`*^9}],

Cell[BoxData[
 RowBox[{"fit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"model", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", ">", "0"}], ",", 
        RowBox[{"1", "<", "\[Omega]", "<", "2"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "\[Omega]"}], "}"}], ",", "t"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "/.", "fit"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input"],

Cell["\<\
In this case, the residuals are not distributed normally, indicating that the \
frequency constraint is too strict. \
\>", "Text",
 CellChangeTimes->{{3.47395832179486*^9, 3.473958363977334*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"residuals", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "y"}], "}"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"y", "-", "model"}], "/.", "fit"}]}], "}"}], "]"}]}], 
      "]"}], ",", "data", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"residuals", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4739583738209515`*^9, 3.473958373992552*^9}}],

Cell["\<\
Like all functions that start with Find, FindFit also depends on a reasonable \
starting point for the parameters it is trying to fit. Consider the following \
model and data\
\>", "Text",
 CellChangeTimes->{{3.473958405925808*^9, 3.473958446579479*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "b"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "c"}], ")"}], "^", "2"}]}], "]"}]}], "+", 
    RowBox[{"d", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "x"}], "+", "\[Phi]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"model", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", "\[Rule]", "2"}], ",", 
           RowBox[{"b", "\[Rule]", "1"}], ",", 
           RowBox[{"c", "\[Rule]", "0"}], ",", 
           RowBox[{"d", "\[Rule]", "2"}], ",", 
           RowBox[{"\[Omega]", "\[Rule]", "0.67"}], ",", 
           RowBox[{"\[Phi]", "\[Rule]", "0.1"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", ".1"}], "}"}]}], "]"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{".25", ",", "101"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4739584543794928`*^9, 3.473958454535493*^9}}],

Cell["Per default all parameters start with 1:", "Text",
 CellChangeTimes->{{3.4739584589815006`*^9, 3.473958468450718*^9}}],

Cell[BoxData[
 RowBox[{"f1", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"data", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "\[Omega]", ",", "\[Phi]"}], 
     "}"}], ",", "x"}], "]"}]}]], "Input"],

Cell["Searching with a better starting value for the parameter c:", "Text",
 CellChangeTimes->{{3.473958477826334*^9, 3.4739584977007685`*^9}, 
   3.4740482501472282`*^9}],

Cell[BoxData[
 RowBox[{"f2", " ", "=", " ", 
  RowBox[{"FindFit", "[", 
   RowBox[{"data", ",", " ", "model", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b", ",", " ", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "0"}], "}"}], ",", " ", "d", ",", " ", 
      "\[Omega]", ",", " ", "\[Phi]"}], "}"}], ",", " ", "x"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"model", "/.", 
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Green"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input"],

Cell["\<\
Like any other fitting function we can also fit multivariate data.\
\>", "Text",
 CellChangeTimes->{{3.473958534064433*^9, 3.4739585480888577`*^9}, 
   3.4740482552952375`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"1.2", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "34"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#1", "-", ".56"}], ")"}], ".", 
              RowBox[{"(", 
               RowBox[{"#1", "-", ".56"}], ")"}]}], ")"}]}], "]"}]}], "+", 
         "#2"}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", "100"}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.473958558197675*^9, 3.4739585583536754`*^9}}],

Cell[BoxData[
 RowBox[{"fit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"data", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"{", 
       RowBox[{"x0", ",", ".5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y0", ",", ".6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"model", "/.", "fit"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "]"}]}]}], 
    "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Exercises", "Subsubsection",
 CellChangeTimes->{{3.4739581100088882`*^9, 3.47395811131929*^9}, 
   3.4740482574168415`*^9}],

Cell["\<\
Fit the following data to a model of exponential decay (a Exp[-k t] ) and \
show the data together with the fit.\
\>", "Text",
 CellChangeTimes->{{3.4739581216153083`*^9, 3.4739581622377796`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.0", ",", "12."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.9", ",", "10."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.6", ",", "8.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.4", ",", "6.9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.0", ",", "5.9"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4739581057812805`*^9, 3.473958106701682*^9}, 
   3.473958150334959*^9}],

Cell["Calculate and plot the residuals.", "Text",
 CellChangeTimes->{{3.4739581735789995`*^9, 3.473958188555026*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Use a linear fit on the logarithm of the data for a model of exponential \
decay.\
\>", "Text",
 CellChangeTimes->{{3.4739582019398494`*^9, 3.473958204513854*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["Fit a model to the following data", "Text",
 CellChangeTimes->{{3.473958702248328*^9, 3.473958711374344*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<ExampleData/lubricant.tsv\>\"", ",", "\"\<TSV\>\"", ",", 
     RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "7"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["\[Theta]", "1"], 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "+", 
      SubscriptBox["x", "1"]}]], "+", 
    RowBox[{
     SubscriptBox["\[Theta]", "3"], 
     SubscriptBox["x", "2"]}], "+", 
    RowBox[{
     SubscriptBox["\[Theta]", "4"], 
     SuperscriptBox[
      SubscriptBox["x", "2"], "2"]}], "+", 
    RowBox[{
     SubscriptBox["\[Theta]", "5"], 
     SuperscriptBox[
      SubscriptBox["x", "2"], "3"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "6"], "+", 
       RowBox[{
        SubscriptBox["\[Theta]", "7"], 
        SuperscriptBox[
         SubscriptBox["x", "2"], "2"]}]}], ")"}], 
     SubscriptBox["x", "2"], " ", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"-", 
        SubscriptBox["x", "1"]}], 
       RowBox[{
        SubscriptBox["\[Theta]", "8"], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", "9"], 
         SuperscriptBox[
          SubscriptBox["x", "2"], "2"]}]}]], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.473958719845159*^9, 3.473958720032359*^9}}],

Cell[TextData[{
 StyleBox["Try to fit the following data to the function ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", 
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", 
      SuperscriptBox["x", "2"]}], "+", "c"}], ")"}], TraditionalForm]], 
  "InlineFormula",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.4740047831604013`*^9, 3.474004789572013*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"1.2", " ", "x"}], " ", "+", " ", 
          RowBox[{"0.00023", " ", 
           RowBox[{"x", "^", "2"}]}], " ", "+", " ", "0.345"}], "]"}]}], 
       "}"}], " ", "//", " ", "N"}], ",", " ", "\n", "             ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"2", "Pi"}], ",", " ", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "60"}]}]}], "}"}]}], "]"}]}], ";"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["NonlinearModelFit", "Subsection",
 CellChangeTimes->{{3.4739587928376875`*^9, 3.4739587953648915`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindFit"]], "InlineFormula"],
 " gives the parameter estimates:"
}], "Text",
 CellChangeTimes->{3.4739588076265135`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", "i"}], "}"}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Exp", "[", 
    RowBox[{"a", " ", "+", 
     RowBox[{"b", " ", "x"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["NonlinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NonlinearModelFit"]], "InlineFormula"],
 " allows for extraction of additional information about the fitting:"
}], "Text",
 CellChangeTimes->{3.4739588209021363`*^9}],

Cell[BoxData[
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Exp", "[", 
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "x"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}]], "Input"],

Cell["Extract the parameter estimates:", "Text",
 CellChangeTimes->{3.4739588623826094`*^9}],

Cell[BoxData[
 RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"nlm", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<BestFit\>\"", ",", "\"\<FitResiduals\>\"", ",", 
    "\"\<ParameterTable\>\""}], "}"}], "]"}]], "Input"],

Cell["Extract additional results and diagnostics:", "Text",
 CellChangeTimes->{3.473958871571026*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
    StyleBox["form", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Beta]", "TR"], 
       StyleBox["1", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
    StyleBox["x", "TI"]}], "]"}]], "InlineFormula"],
 " ",
 "constructs a nonlinear model with structure ",
 Cell[BoxData[
  StyleBox["form", "TI"]], "InlineFormula"],
 " that fits the ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["y", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 " for successive ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " values ",
 Cell[BoxData["1"], "InlineFormula"],
 ", ",
 Cell[BoxData["2"], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["\[Ellipsis]", "TR"]], "InlineFormula"],
 " using the parameters ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox[
    StyleBox["\[Beta]", "TR"], 
    StyleBox["1", "TR"]], ",", "\[Ellipsis]"}]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4739588311825542`*^9, 3.4739588349265614`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"], "[", 
   RowBox[{
    StyleBox["data", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["form", "TI"], ",", 
      StyleBox["cons", "TI"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Beta]", "TR"], 
       StyleBox["1", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["1", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula"],
 "constructs a nonlinear model subject to the parameter constraints ",
 Cell[BoxData[
  StyleBox["cons", "TI"]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.473958842133774*^9, 3.4739588470165825`*^9}}],

Cell[CellGroupData[{

Cell["Exercises 1", "Subsubsection",
 CellChangeTimes->{{3.473958933315934*^9, 3.4739589369507403`*^9}, {
   3.4739592427692795`*^9, 3.473959244578882*^9}, 3.474048259600845*^9}],

Cell["Take the following data:", "Text",
 CellChangeTimes->{{3.4739589396963453`*^9, 3.4739589443919535`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"25.", ",", "0.001"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25.5", ",", "0.002"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26.", ",", "0.011"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26.5", ",", "0.045"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27.", ",", "0.112"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27.5", ",", "0.215"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.", ",", "0.259"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.5", ",", "0.206"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29.", ",", "0.112"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29.5", ",", "0.044"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30.", ",", "0.011"}], "}"}]}], "}"}]}], ";"}]], "Input"],

Cell["\<\
Plot the data and determine which model function could be used to fit the data\
\>", "Text",
 CellChangeTimes->{{3.4739589547659717`*^9, 3.4739589758728085`*^9}}],

Cell["Find a best fitting model", "Text",
 CellChangeTimes->{{3.4739589793984146`*^9, 3.4739589830020213`*^9}}],

Cell["Visualize the result and assess the quality of your fit.", "Text",
 CellChangeTimes->{{3.4739589962464447`*^9, 3.4739590126264734`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises 2", "Subsubsection",
 CellChangeTimes->{{3.473959065307766*^9, 3.4739590673357697`*^9}, 
   3.474048260739647*^9}],

Cell["Find a fit for the following data", "Text",
 CellChangeTimes->{{3.4739590706897755`*^9, 3.4739590766177855`*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2.6974467862489533`", ",", "0.97229404548603`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.618912450260353`", ",", "0.34408835321208553`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.958537198367395`", ",", "0.767091752560637`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.022357111131001`", ",", "0.46070405106676504`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.13019854701156`", ",", "0.9473461758009301`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.482735762962925`", ",", "1.211159784744381`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.332242013763953`", ",", "0.43991944610730394`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10.906651148623197`", ",", "0.6750847777587251`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12.072757256755946`", ",", "1.1779790966132409`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.479992498977854`", ",", "0.9611157405440809`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.326165225521667`", ",", "0.720895822674964`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.889772736449281`", ",", "1.1866350858382821`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8.638087401152873`", ",", "0.6059355128802886`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.230407994424755`", ",", "0.8111384694425021`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.001943177063623`", ",", "0.86141389816221`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8.653076221372515`", ",", "0.6706464342941485`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.268350256440161`", ",", "0.7705350677043583`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.269184707255565`", ",", "0.3652880938009757`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.0430928100337624`", ",", "0.6495434423575803`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.861498808610996`", ",", "0.5511572773253413`"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.473959079737791*^9, 3.4739590805801926`*^9}}],

Cell["Visualize the result and assess the quality of your fit.", "Text",
 CellChangeTimes->{{3.4739589962464447`*^9, 3.4739590126264734`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Application: Automatic fitting to many datasets", "Subsection",
 CellChangeTimes->{{3.473961743093007*^9, 3.473961766805049*^9}}],

Cell["\<\
In the following application we have a set of data files, each containing a \
single Gaussian peak. We will fit a Gaussian to each file.\
\>", "Text",
 CellChangeTimes->{{3.473961753794626*^9, 3.4739617980987043`*^9}, {
  3.4739619307145367`*^9, 3.4739619399341536`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"a1", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b1", 
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], "]"}]}]}], 
  " ", ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Markus \
R\[ODoubleDot]llig\\\\Documents\\\\Projekte\\\\Teaching\\\\Vorlesung\\\\\
Mathematica\\\\WS2009-10\\\\data\>\"", "]"}]], "Input"],

Cell["Let us first try our routine on a smaller sample:", "Text",
 CellChangeTimes->{{3.4739626166429443`*^9, 3.473962631197769*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fits", " ", "=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Import", "[", 
           RowBox[{"\"\<data\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"model", " ", "=", " ", 
          RowBox[{"a1", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b1", 
                RowBox[{"(", 
                 RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
            "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", " ", "model", ",", " ", 
           RowBox[{"{", 
            RowBox[{"a1", ",", "b1", ",", " ", "x1"}], "}"}], ",", "x"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", " ", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"\"\<data\>\"", "<>", 
         RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<.dat\>\""}], "]"}], 
       ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"model", " ", "/.", " ", 
         RowBox[{"fits", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.473961963973795*^9, 3.4739620676935797`*^9}, {
  3.473962100828038*^9, 3.473962129719289*^9}, {3.4739624213150005`*^9, 
  3.4739624939799285`*^9}, {3.473962638451782*^9, 3.4739626527414074`*^9}}],

Cell["Looks good.", "Text",
 CellChangeTimes->{{3.473962656485414*^9, 3.4739626591686187`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"fits", " ", "=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<data\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"model", " ", "=", " ", 
         RowBox[{"a1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b1", 
               RowBox[{"(", 
                RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
           "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
        RowBox[{"FindFit", "[", 
         RowBox[{"data", ",", " ", "model", ",", " ", 
          RowBox[{"{", 
           RowBox[{"a1", ",", "b1", ",", " ", "x1"}], "}"}], ",", "x"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.473961963973795*^9, 3.4739620676935797`*^9}, {
   3.473962100828038*^9, 3.473962129719289*^9}, {3.4739624213150005`*^9, 
   3.4739624939799285`*^9}, 3.4739626813050575`*^9}],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Show", "[", " ", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"\"\<data\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
           "]"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"model", " ", "/.", " ", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}], ",", "3"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4739622091546283`*^9, 3.473962219996647*^9}, {
  3.4739623639849*^9, 3.473962390816947*^9}, {3.4739625066159506`*^9, 
  3.4739625416224117`*^9}, {3.473962682287859*^9, 3.473962684362663*^9}}],

Cell["\<\
The last fit looks bad. Maybe we should provide a reasonable starting point?\
\>", "Text",
 CellChangeTimes->{{3.473962696390284*^9, 3.473962774437221*^9}}],

Cell[BoxData[{
 RowBox[{"fits", " ", "=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"\"\<data\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"model", " ", "=", " ", 
        RowBox[{"a1", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b1", 
              RowBox[{"(", 
               RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
          "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
       RowBox[{"FindFit", "[", 
        RowBox[{"data", ",", " ", "model", ",", " ", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "b1", ",", 
           RowBox[{"{", " ", 
            RowBox[{"x1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "9", ",", "9"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", " ", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<data\>\"", "<>", 
       RowBox[{"ToString", "[", "9", "]"}], "<>", "\"\<.dat\>\""}], "]"}], 
     ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"model", " ", "/.", " ", 
       RowBox[{"fits", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.473962786371242*^9, 3.4739628509553556`*^9}}],

Cell["\<\
This looks better. But we had to look at the data and provide the fit by \
hand. How could we do it automatically? We could for example search the \
maximum data point and hope that this is the peak? \
\>", "Text",
 CellChangeTimes->{{3.4739628556665635`*^9, 3.473962926927489*^9}}],

Cell[BoxData[
 RowBox[{"peakguess", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
    "&"}], "@", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data\>\"", "<>", 
     RowBox[{"ToString", "[", "9", "]"}], "<>", "\"\<.dat\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.473962831346121*^9, {3.473962936724306*^9, 3.4739630467824993`*^9}, {
   3.47396309267778*^9, 3.4739631362174563`*^9}}],

Cell["Using the guess:", "Text",
 CellChangeTimes->{{3.4739631544382887`*^9, 3.4739631591182966`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fits", " ", "=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model", ",", 
        "peakguess"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Import", "[", 
           RowBox[{"\"\<data\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"peakguess", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
                "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
             "]"}], "&"}], "@", "data"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"model", " ", "=", " ", 
          RowBox[{"a1", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b1", 
                RowBox[{"(", 
                 RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
            "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", " ", "model", ",", " ", 
           RowBox[{"{", 
            RowBox[{"a1", ",", "b1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "peakguess"}], "}"}]}], "}"}], ",", "x"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsGrid", "@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", " ", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Import", "[", 
             RowBox[{"\"\<data\>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
             "]"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"model", " ", "/.", " ", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}], ",", "3"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.473961963973795*^9, 3.4739620676935797`*^9}, {
   3.473962100828038*^9, 3.473962129719289*^9}, {3.4739624213150005`*^9, 
   3.4739624939799285`*^9}, 3.4739626813050575`*^9, {3.4739631731739216`*^9, 
   3.473963202096372*^9}}],

Cell["\<\
With m,ore than just a few fits it is also difficult to actually spot an \
faulty fit. We need a quantitative quality number to assess the fit quality \
and to immediately notice if something goes wrong. Let us calculate the \
residuals for all data fits, the RMS.\
\>", "Text",
 CellChangeTimes->{{3.473963249224055*^9, 3.4739633914963045`*^9}, 
   3.474048264733254*^9}],

Cell[BoxData[{
 RowBox[{"rms", "=", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"Total", "[", 
       SuperscriptBox[
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "2"], "]"}], "/", 
      RowBox[{"Length", "[", "#", "]"}]}]], "&"}], "/@", 
   "residuals"}]}], "\[IndentingNewLine]", 
 RowBox[{"resMax", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "&"}], "/@", 
   "residuals"}]}]}], "Input",
 CellChangeTimes->{{3.473963742356521*^9, 3.473963743417323*^9}, {
  3.4739643318347564`*^9, 3.47396433954117*^9}, {3.4739648369168434`*^9, 
  3.473964837681245*^9}, {3.4739650305599833`*^9, 3.473965054755626*^9}, {
  3.4739650909008894`*^9, 3.4739651277637544`*^9}, {3.4739651980254836`*^9, 
  3.4739652257935324`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numberoffiles", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", " ", "=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model", ",", 
       "peakguess"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<data\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"peakguess", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
            "]"}], "&"}], "@", "data"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"model", " ", "=", " ", 
         RowBox[{"a1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b1", 
               RowBox[{"(", 
                RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
           "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
        RowBox[{"FindFit", "[", 
         RowBox[{"data", ",", " ", "model", ",", " ", 
          RowBox[{"{", 
           RowBox[{"a1", ",", "b1", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "peakguess"}], "}"}]}], "}"}], ",", "x"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residuals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"\"\<data\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.dat\>\""}], "]"}]}],
       ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"a1", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b1", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "x1"}], 
                   ")"}]}], ")"}], "^", "2"}]}], "]"}]}]}], "/.", 
           RowBox[{"fits", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "data"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rms", "=", 
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"Total", "[", 
        SuperscriptBox[
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "2"], "]"}], "/", 
       RowBox[{"Length", "[", "#", "]"}]}]], "&"}], "/@", "residuals"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resMax", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "&"}], "/@", 
    "residuals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Show", "[", " ", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"\"\<data\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
           "]"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"model", " ", "/.", " ", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}], ",", 
    "3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"residuals", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}], ",", 
    "3"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4739634173299503`*^9, 3.473963483271266*^9}, {
   3.4739635859662466`*^9, 3.473963732076103*^9}, {3.473964466915394*^9, 
   3.473964468600197*^9}, 3.473964536319916*^9, {3.473964573525981*^9, 
   3.473964578283989*^9}, {3.473964614616453*^9, 3.4739647384026704`*^9}, {
   3.4739647828003483`*^9, 3.473964827603627*^9}, {3.4739648635928907`*^9, 
   3.4739650235399714`*^9}, {3.4739652582727895`*^9, 3.473965351046152*^9}}],

Cell["Now we can add a meaningful table.", "Text",
 CellChangeTimes->{{3.473965380978606*^9, 3.4739653948314304`*^9}, 
   3.4740482728140683`*^9}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", "numberoffiles", "]"}], ",", 
      RowBox[{"a1", "/.", "fits"}], ",", 
      RowBox[{
       RowBox[{"1", "/", 
        SqrtBox["b1"]}], "/.", "fits"}], ",", 
      RowBox[{"x1", "/.", "fits"}], ",", "rms", ",", "resMax"}], "}"}], "]"}],
    ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<#\>\"", ",", "\"\<Amplitude\>\"", ",", "\"\<\[Sigma]\>\"", ",", 
        "\"\<Position\>\"", ",", "\"\<RMS\>\"", ",", "\"\<max Residuum\>\""}],
        "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4739654021478434`*^9, 3.4739655183368473`*^9}, {
  3.473965555090512*^9, 3.47396565684949*^9}}],

Cell["\<\
Or with some additional styling and highlighting in case a problem occurs:\
\>", "Text",
 CellChangeTimes->{{3.473965698595164*^9, 3.47396571374279*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"table", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"i", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a1", "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "<", "0"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"a1", "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"a1", "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "b1"}], "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "<", "0"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", "b1"}], "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "b1"}], "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"x1", "/.", 
          RowBox[{"fits", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"rms", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"resMax", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ">", 
          RowBox[{"(", 
           RowBox[{"a1", "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"resMax", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"resMax", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"table", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<#\>\"", ",", "\"\<Amplitude\>\"", ",", "\"\<\[Sigma]\>\"", ",", 
        "\"\<Position\>\"", ",", "\"\<RMS\>\"", ",", "\"\<max Residuum\>\""}],
        "}"}]}], "}"}]}], ",", 
   RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4739657243820095`*^9, 3.473965965207633*^9}, {
  3.4739660083729095`*^9, 3.4739661219099083`*^9}, {3.473966155325167*^9, 
  3.473966326613468*^9}}],

Cell["\<\
OK, here the full run on all data files. I deactivated the peak guessing to \
demonstrate the case sensitive highlighting.\
\>", "Text",
 CellChangeTimes->{{3.473966368327941*^9, 3.4739663792635603`*^9}, {
  3.4739665086657877`*^9, 3.473966536667837*^9}, {3.4740482756376734`*^9, 
  3.4740482786484785`*^9}}],

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"numberoffiles", "=", "100"}], ";", "\[IndentingNewLine]", 
    RowBox[{"fits", " ", "=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a1", ",", "b1", ",", "x1", ",", "x", ",", "data", ",", "model", ",", 
         "peakguess"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"Import", "[", 
            RowBox[{"\"\<data\>\"", "<>", 
             RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"peakguess", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
                 "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
              "]"}], "&"}], "@", "data"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"peakguess", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"model", " ", "=", " ", 
           RowBox[{"a1", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b1", 
                 RowBox[{"(", 
                  RowBox[{"x", "-", "x1"}], ")"}]}], ")"}], "^", "2"}]}], 
             "]"}]}]}], " ", ";", "\[IndentingNewLine]", " ", 
          RowBox[{"FindFit", "[", 
           RowBox[{"data", ",", " ", "model", ",", " ", 
            RowBox[{"{", 
             RowBox[{"a1", ",", "b1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "peakguess"}], "}"}]}], "}"}], ",", "x"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"residuals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"\"\<data\>\"", "<>", 
           RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.dat\>\""}], 
          "]"}]}], ";", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
              RowBox[{"a1", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b1", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "x1"}], 
                    ")"}]}], ")"}], "^", "2"}]}], "]"}]}]}], "/.", 
             RowBox[{"fits", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "data"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"rms", "=", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"Total", "[", 
          SuperscriptBox[
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "2"], "]"}], "/", 
         RowBox[{"Length", "[", "#", "]"}]}]], "&"}], "/@", "residuals"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"resMax", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "&"}], "/@", 
      "residuals"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"table", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"i", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a1", "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "<", "0"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"a1", "/.", 
                RowBox[{"fits", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"a1", "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "b1"}], "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "<", "0"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "b1"}], "/.", 
                RowBox[{"fits", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", "b1"}], "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"x1", "/.", 
            RowBox[{"fits", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"rms", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"resMax", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ">", 
            RowBox[{"(", 
             RowBox[{"a1", "/.", 
              RowBox[{"fits", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"resMax", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"resMax", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberoffiles"}], "}"}]}], "]"}]}], 
    ";"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"table", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<#\>\"", ",", "\"\<Amplitude\>\"", ",", "\"\<\[Sigma]\>\"", ",", 
        "\"\<Position\>\"", ",", "\"\<RMS\>\"", ",", "\"\<max Residuum\>\""}],
        "}"}]}], "}"}]}], ",", 
   RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4739663827735667`*^9, 3.473966412054818*^9}, {
  3.4739664500876846`*^9, 3.4739664528332896`*^9}, {3.473966484392145*^9, 
  3.4739664907881565`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Data formatting/ Irregular Gridding", "Subsection",
 CellChangeTimes->{{3.4739592598201094`*^9, 3.473959264890118*^9}, {
  3.474020796856614*^9, 3.474020801489822*^9}}],

Cell[TextData[{
 "Experimental (or other) data that you would like to handle with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " often comes in very different formatting. To fit a function to data you \
need to provide the data in one of a few forms."
}], "Text",
 CellChangeTimes->{{3.473959268509324*^9, 3.4739593314242353`*^9}, 
   3.4740482951065073`*^9}],

Cell[TextData[{
 "The data can also be of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", "1"], ",", 
     SubscriptBox["f", "2"], ",", "\[Ellipsis]"}], "}"}], TraditionalForm]], 
  "InlineMath"],
 ", with a single coordinate assumed to take values ",
 Cell[BoxData["1"], "InlineFormula"],
 ", ",
 Cell[BoxData["2"], "InlineFormula"],
 ", \[Ellipsis]. "
}], "Text",
 CellChangeTimes->{3.4739593938087444`*^9}],

Cell["Example: ", "Text",
 CellChangeTimes->{{3.473959398753953*^9, 3.4739594000331554`*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
    "49", ",", "64"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.473959405555565*^9, 3.4739594290492067`*^9}}],

Cell[TextData[{
 "The data can have the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"], ",", "\[Ellipsis]", " ", ",", 
       SubscriptBox["f", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"], ",", "\[Ellipsis]", " ", ",", 
       SubscriptBox["f", "2"]}], "}"}], ",", "\[Ellipsis]"}], "}"}], 
   TraditionalForm]], "InlineMath"],
 ", where the number of coordinates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ",", "y", ",", "\[Ellipsis]"}], TraditionalForm]], 
  "InlineMath"],
 " is equal to the number of variables in the list ",
 Cell[BoxData[
  StyleBox["vars", "TI"]], "InlineFormula"],
 ". "
}], "Text",
 CellChangeTimes->{3.4739594440564327`*^9}],

Cell["Example:", "Text",
 CellChangeTimes->{{3.47395944794084*^9, 3.4739594493292418`*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "36"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "49"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "64"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.473959455584853*^9, 3.473959474320486*^9}}],

Cell[TextData[{
 "By default, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expects the data to be fitted to lie on a regular grid, i.e. all grid \
lines are equidistant. You can however give explicit coordinates to also fit \
data on a regular but non-equidistant grid. So far, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is not able to fit n-dim data on an irregular fit. For example:"
}], "Text",
 CellChangeTimes->{{3.474020817854251*^9, 3.4740208849187684`*^9}, {
  3.4740209663305135`*^9, 3.474020989964555*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"regData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", 
         RowBox[{"j", "*", "i"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"irrData", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"regData", ",", "7"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.474020991118957*^9, 3.4740210972771435`*^9}, {
  3.474021385426858*^9, 3.4740213984372807`*^9}}],

Cell["\<\
The underlying grid in the second set is irregular, i.e. contains 'holes'.\
\>", "Text",
 CellChangeTimes->{{3.4740212714738507`*^9, 3.474021289444682*^9}, 
   3.474048301736519*^9}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"Point", "@", 
       RowBox[{"regData", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"Point", "@", 
       RowBox[{"irrData", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.474021152969241*^9, 3.47402126046903*^9}, {
  3.4740214024464874`*^9, 3.474021416517712*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can not interpolate on such holey grids. "
}], "Text",
 CellChangeTimes->{{3.474021293235489*^9, 3.474021331700363*^9}}],

Cell[BoxData[
 RowBox[{"regInt", "=", 
  RowBox[{"Interpolation", "[", "regData", "]"}]}]], "Input",
 CellChangeTimes->{{3.474021338267975*^9, 3.474021359468412*^9}}],

Cell[BoxData[
 RowBox[{"irrInt", "=", 
  RowBox[{"Interpolation", "[", "irrData", "]"}]}]], "Input",
 CellChangeTimes->{{3.474021338267975*^9, 3.474021359468412*^9}}],

Cell["\<\
There are several strategies to overcome this limitation.One possibility is \
of course to fill the hole, either by completing the data with additional \
measurements or by doing a 'guess' or interpolation by hand:\
\>", "Text",
 CellChangeTimes->{{3.474021450369772*^9, 3.4740215305851126`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 172}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 172},
  PlotRange->{{0, 180}, {0, 172}}]], "Text"],

Cell["\<\
We could do a bi-linear interpolation. Assuming, that we would like to know \
the function value at position P and know the values at the four positions Q\
\>", "Text",
 CellChangeTimes->{{3.4740216205432763`*^9, 3.474021666313757*^9}, 
   3.474048309021732*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kp0UcrYu0wj3VKjmy86/AfnbVb8=
    "], {{0, 209}, {377, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{377, 209},
  PlotRange->{{0, 377}, {0, 209}}]], "Text"],

Cell[TextData[{
 "From Fred Schwab's post on ",
 ButtonBox["comp.soft-sys.math.mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://groups.google.com/group/comp.soft-sys.math.mathematica/browse_\
thread/thread/faad08b6b715ee76/ec7534f229a8f3f5?lnk=gst&q=interpolation++\
ListPlot3D#ec7534f229a8f3f5"], None},
  ButtonNote->
   "http://groups.google.com/group/comp.soft-sys.math.mathematica/browse_\
thread/thread/faad08b6b715ee76/ec7534f229a8f3f5?lnk=gst&q=interpolation++\
ListPlot3D#ec7534f229a8f3f5"],
 "."
}], "Text",
 CellChangeTimes->{{3.474023284563819*^9, 3.474023323875888*^9}}],

Cell["\<\
\"Here's a quick and dirty approach that I sometimes use, which is 
based on a brute-force implementation of Shepard's interpolation 
formula [1]. The suitability, with particular emphasis on graphics 
applications, of this and various other scattered-data interpolation 
methods is discussed in Reference [2]. I chose Shepard's method 
mainly on the basis of its simplicity and because it doesn't tend to 
go \"wild\" in sparsely sampled regions. In the code below, I've 
selected a weighting exponent alpha=4; see Reference [1] for 
illustrations of the effect of varying this parameter. \"
References: 
[1] W. J. Gordon and J. A. Wixom, ``Shepard's method of `metric interpolation' 
to bivariate and multivariate interpolation'', Mathematics of 
Computation, 32 (1978) 253-264. 
[2] R. Franke, ``Scattered data interpolation: tests of some methods'', 
Mathematics of Computation, 38 (1982) 181-200. 
[3] R. J. Renka, ``Multivariate interpolation of large sets of scattered 
data'', ACM Transactions on Mathematical Software, 14 (1988) 139-148. 
[4] ___________, ``Algorithm 660: QSHEP2D: Quadratic Shepard method for 
bivariate interpolation of scattered data'', ibid., 149-150. 
[5] ___________, ``Algorithm 661: QSHEP3D: Quadratic Shepard method for 
trivariate interpolation of scattered data'', ibid., 151-152. 
\
\>", "Text",
 CellChangeTimes->{{3.4740233353263083`*^9, 3.474023346979529*^9}, {
  3.4740234180220537`*^9, 3.4740234207052584`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shepard", "[", 
   RowBox[{"x_", ",", "y_", ",", "list_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", 
      RowBox[{"alpha", "=", "4"}], ",", "w", ",", 
      RowBox[{"eps", "=", 
       RowBox[{"10.", "^", 
        RowBox[{"-", "16"}]}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"y", "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
            "eps"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "alpha"}], "/", "2"}], ")"}]}], "&"}], ",", "list"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "3"}], "]"}], "]"}], " ", 
         RowBox[{"w", "[", 
          RowBox[{"[", "l", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "m"}], "}"}]}], "]"}], "/", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "l", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "m"}], "}"}]}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4740233628135567`*^9, 3.4740233672283645`*^9}}],

Cell[BoxData[
 RowBox[{"shepard", "[", 
  RowBox[{"2", ",", "2", ",", "irrData"}], "]"}]], "Input",
 CellChangeTimes->{{3.474023372594774*^9, 3.4740233866503983`*^9}, {
  3.474023426711269*^9, 3.4740234324364786`*^9}}],

Cell[TextData[{
 "Another way of doing it is to install a supplemental package that provides \
the desired functionality: ",
 ButtonBox["http://www.imtek.uni-freiburg.de/simulation/mathematica/IMSweb/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.imtek.uni-freiburg.de/simulation/mathematica/IMSweb/"], 
    None},
  ButtonNote->
   "http://www.imtek.uni-freiburg.de/simulation/mathematica/IMSweb/"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4740224088481803`*^9, 3.4740224613422723`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "\"\<Imtek`Interpolation`\>\""}]], "Input",
 CellChangeTimes->{{3.474022463105076*^9, 3.4740224637446766`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{"imsSpline", "[", 
    RowBox[{"x", ",", "xi", ",", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"irrInt", "=", 
   RowBox[{"imsUnstructuredInterpolation", "[", 
    RowBox[{
     RowBox[{"irrData", "//", "N"}], ",", "sp"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4740224823555093`*^9, 3.474022487144718*^9}, 
   3.4740227930745296`*^9, {3.4740228294225936`*^9, 3.4740228353194036`*^9}}],

Cell[BoxData[{
 RowBox[{"irrInt", "[", 
  RowBox[{"2", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"regInt", "[", 
  RowBox[{"2", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4740228532282352`*^9, 3.4740228705286655`*^9}}],

Cell[TextData[{
 "You can also use some hidden functionality of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Some plot functions do an interpolation inside to fill gaps in provided \
data sets. ListPlot3D has no problems plotting the holey data set, hence \
internally it filled the hole up :"
}], "Text",
 CellChangeTimes->{{3.4740231236819296`*^9, 3.474023158703991*^9}, {
  3.4740236258184614`*^9, 3.4740236519017067`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "irrData", "]"}]], "Input"],

Cell["\<\
Looking at the FullForm shows the existence of a data point at {x,y}={2,2}. \
We can extract either only the missing point, or the whole re-sampled data \
set:\
\>", "Text",
 CellChangeTimes->{{3.4740236557705135`*^9, 3.47402372197703*^9}, 
   3.474048333732175*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot3D", "[", "irrData", "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.4740229045835257`*^9, 3.474022909903135*^9}, {
  3.4740230349177732`*^9, 3.474023057927814*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListPlot3D", "[", "irrData", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.474023737561457*^9, 3.4740237400418615`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resampledDataSet", "=", 
   RowBox[{"lp", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"irrIntresampled", "=", 
  RowBox[{"Interpolation", "[", "resampledDataSet", "]"}]}]}], "Input",
 CellChangeTimes->{{3.4740237415862646`*^9, 3.4740237875595455`*^9}}],

Cell[BoxData[
 RowBox[{"irrIntresampled", "[", 
  RowBox[{"2", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4740237924267535`*^9, 3.474023798744765*^9}}],

Cell[BoxData[
 RowBox[{"missingDataPoint", "=", 
  RowBox[{"First", "@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"lp", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x_", "/;", 
        RowBox[{"x", "\[Equal]", "2"}]}], ",", 
       RowBox[{"y_", "/;", 
        RowBox[{"y", "\[Equal]", "2"}]}], ",", "z_"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4740238423936415`*^9, 3.4740239441526203`*^9}, {
  3.4740240251791625`*^9, 3.47402404652*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Application: Fitting chemical reaction rates", "Subsection",
 CellChangeTimes->{{3.47402439940822*^9, 3.4740244227798605`*^9}}],

Cell["\<\
In this example we will show how to influence the outcome of the fitting. \
Consider experimental data on the reaction rate coefficient of the chemical \
reaction\
\>", "Text",
 CellChangeTimes->{{3.4740249667372165`*^9, 3.474025001852878*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CN", " ", "+", " ", 
   RowBox[{
    FormBox[
     RowBox[{
      RowBox[{
       SubscriptBox["CH", "3"], 
       RowBox[{
        SubscriptBox["CH", "3"], " ", "\[LongRightArrow]", " ", 
        SubscriptBox["C", "2"]}], 
       SubscriptBox["H", "5"]}], "+", " ", "HCN"}],
     TraditionalForm], "     ", "for", " ", "T"}]}], "\[Element]", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"185", " ", "K"}], ",", " ", 
    RowBox[{"1140", "K"}]}], "]"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.474025029043726*^9, 3.474025097106645*^9}}],

Cell["The data is given below", "Text",
 CellChangeTimes->{{3.4740251132058735`*^9, 3.4740251176362815`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"labDat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"185", ",", "1.2560224946068678`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"210", ",", "1.0943335007930955`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"235", ",", "9.99053351847897`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"260", ",", "9.413112556523018`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"285", ",", "9.066507823633049`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"310", ",", "8.87133900831551`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"335", ",", "8.780789483760246`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"360", ",", "8.765629552806604`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"385", ",", "8.806742304950834`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"410", ",", "8.89113299746979`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"435", ",", "9.009676034670511`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"460", ",", "9.15578186611793`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"485", ",", "9.324576033680581`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"510", ",", "9.512375890408821`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"535", ",", "9.716346899735934`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"560", ",", "9.934270857525923`*^-11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"585", ",", "1.0164385900103656`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"610", ",", "1.0405273743017904`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"635", ",", "1.0655778710418098`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"660", ",", "1.0914948605036743`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"685", ",", "1.1181990863252889`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"710", ",", "1.1456239588709485`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"735", ",", "1.173713044796287`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"760", ",", "1.20241813284768`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"785", ",", "1.231697727493045`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"810", ",", "1.261515864007963`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"835", ",", "1.2918411677684164`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"860", ",", "1.322646100973543`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"885", ",", "1.353906354598881`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"910", ",", "1.3856003538864118`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"935", ",", "1.4177088533352344`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"960", ",", "1.4502146027972234`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"985", ",", "1.4831020704781125`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1010", ",", "1.5163572117949769`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1035", ",", "1.5499672754273617`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1060", ",", "1.5839206397215427`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1085", ",", "1.6182066740098337`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1110", ",", "1.6528156204940495`*^-10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1135", ",", "1.687738493190987`*^-10"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4740249558639975`*^9, 3.4740249622600083`*^9}, {
  3.4740251101950684`*^9, 3.474025110460269*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"labDat", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4740277363660808`*^9, 3.4740277572389174`*^9}, {
  3.474028008756173*^9, 3.4740280089901733`*^9}}],

Cell["\<\
Plotting the data shows a decline towards lower T values with an incline for \
T<200K! Usually these reaction rate coefficients are parametrized using the \
following form: \
\>", "Text",
 CellChangeTimes->{{3.4740251293051023`*^9, 3.474025194310416*^9}, {
  3.4740276566655407`*^9, 3.4740276571023417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rate", 
   RowBox[{"(", "t", ")"}]}], "=", 
  RowBox[{"\[Alpha]", " ", 
   FormBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["T", 
        RowBox[{"300", " ", "K"}]], ")"}], "\[Beta]"], 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", "\[Gamma]"}], "/", "T"}], ")"}]}],
    TraditionalForm]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.4740252039980335`*^9, 3.474025221953665*^9}, {
  3.4740276148106675`*^9, 3.474027628569892*^9}}],

Cell["\<\
Directly using NonlinearModelFit to fit the data to the model form we get:\
\>", "Text",
 CellChangeTimes->{{3.4740276869451942`*^9, 3.474027699955617*^9}}],

Cell[BoxData[{
 RowBox[{"fit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"labDat", ",", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["T", "300."], ")"}], "\[Beta]"]}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Gamma]", "/", "T"}]]], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], ",", "T"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", "\"\<ParameterTable\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.474025126731097*^9, 3.474025127433099*^9}, {
   3.47402770173402*^9, 3.47402771313764*^9}, 3.4740280125001793`*^9, {
   3.4740280633250685`*^9, 3.474028064573071*^9}}],

Cell["\<\
Plotting model and data and adding error bars etc. we get the following:\
\>", "Text",
 CellChangeTimes->{{3.474027774445748*^9, 3.4740278115406265`*^9}, 
   3.4740483372109814`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "assuming", " ", "50", "%", " ", "errors", " ", "to", " ", "the", " ", 
    "data"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"err", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"labDat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"ErrorBar", "[", 
          RowBox[{
           RowBox[{"0.5", " ", 
            RowBox[{"labDat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"0.5", " ", 
            RowBox[{"labDat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "labDat"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Needs", "[", "\"\<ErrorBarLogPlots`\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4740277707797413`*^9, 3.4740277724801445`*^9}, {
  3.4740278178430376`*^9, 3.4740278365942707`*^9}, {3.4740494737362037`*^9, 
  3.4740494944686403`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{"fit", "[", "T", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ErrorListLogPlot", "[", "err", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.474025123143091*^9, 3.474025125358295*^9}, {
  3.4740278415550795`*^9, 3.4740278513674965`*^9}}],

Cell[TextData[{
 "This seems to reproduce the lab data nicely. Now imagine additional \
measurements at low temperature were taken into account and we knew that the \
reaction rate at 50K was ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"7", "\[Cross]", 
     SuperscriptBox["10", 
      RowBox[{"-", "11"}]]}], 
    SuperscriptBox["cm", "3"], 
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.4740278667335234`*^9, 3.4740279719713087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newDat", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"50.", ",", 
        RowBox[{"7.", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]]}]}], "}"}], "}"}], ",", "labDat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"err2", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"labDat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"ErrorBar", "[", 
          RowBox[{
           RowBox[{"0.5", " ", 
            RowBox[{"labDat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"0.5", " ", 
            RowBox[{"labDat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "labDat"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.", ",", 
         RowBox[{"7", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]]}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{
         RowBox[{"0.5", " ", "7", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]]}], ",", 
         RowBox[{"0.5", " ", "7", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]]}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4740279805513234`*^9, 3.4740280529198503`*^9}, {
   3.4740280923255196`*^9, 3.4740281714800587`*^9}, 3.474049505232659*^9}],

Cell[BoxData[{
 RowBox[{"fit2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"newDat", ",", 
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["T", "300."], ")"}], "\[Beta]"]}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Gamma]", "/", "T"}]]], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], ",", "T"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit2", "[", "\"\<ParameterTable\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.474028036118621*^9, 3.474028070922282*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fit", "[", "T", "]"}], ",", 
        RowBox[{"fit2", "[", "T", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ErrorListLogPlot", "[", "err2", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4740281781412706`*^9, 3.4740282031169147`*^9}}],

Cell["\<\
We could however, presume that the reaction rates for even lower temperatures \
will be even smaller. The steep incline in the curve is produced by the \
negative \[Gamma] value. We could restrict our fit to positive \[Gamma]'s.\
\>", "Text",
 CellChangeTimes->{{3.4740282175781393`*^9, 3.4740282799626493`*^9}, 
   3.474048341454189*^9}],

Cell[BoxData[{
 RowBox[{"fit3", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"newDat", ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["T", "300."], ")"}], "\[Beta]"]}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Gamma]", "/", "T"}]]], ",", 
      RowBox[{"\[Gamma]", ">", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"10", "^", 
         RowBox[{"-", "11"}]}]}], "}"}], ",", "\[Beta]", ",", "\[Gamma]"}], 
     "}"}], ",", "T", ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit3", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fit", "[", "T", "]"}], ",", 
        RowBox[{"fit2", "[", "T", "]"}], ",", 
        RowBox[{"fit3", "[", "T", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ErrorListLogPlot", "[", "err2", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4740282864990606`*^9, 3.474028313331108*^9}, {
  3.4740283528459773`*^9, 3.474028410129278*^9}, {3.4740284745261908`*^9, 
  3.474028501904239*^9}, {3.474028553228329*^9, 3.4740285691715574`*^9}, {
  3.474028668481332*^9, 3.474028702099391*^9}}],

Cell["\<\
This obviously fails. We need to find a reasonable initial condition for our \
three parameter:\
\>", "Text",
 CellChangeTimes->{{3.4740287126606092`*^9, 3.4740287319266434`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"t_", "?", "NumericQ"}], ",", 
     RowBox[{"a_", "?", "NumericQ"}], ",", 
     RowBox[{"b_", "?", "NumericQ"}], ",", 
     RowBox[{"g_", "?", "NumericQ"}]}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "a"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["t", "300."], ")"}], "b"]}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"g", "/", "t"}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogPlot", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"T", ",", "a", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "11"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"ErrorListLogPlot", "[", "err2", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "11"}], "}"}], ",", "9", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0.5"}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", 
       RowBox[{"-", "54"}]}], "}"}], ",", 
     RowBox[{"-", "100"}], ",", "1000"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4740287337050467`*^9, 3.4740288881141176`*^9}, {
  3.4740322655748754`*^9, 3.474032347412619*^9}, {3.4740324300459642`*^9, 
  3.4740324362703753`*^9}, {3.4740324889828677`*^9, 3.4740324894352684`*^9}, {
  3.4740325500881753`*^9, 3.47403258691984*^9}, {3.4740495159030776`*^9, 
  3.4740495181806817`*^9}}],

Cell[TextData[{
 "After playing around with the sliders we presume the following initial \
conditions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", "->", 
     SuperscriptBox["10", 
      RowBox[{"-", "9.9"}]]}], ",", " ", 
    RowBox[{"\[Beta]", "->"}]}], TraditionalForm]]],
 "0.12, \[Gamma]->15"
}], "Text",
 CellChangeTimes->{{3.4740326562775617`*^9, 3.474032715183265*^9}, 
   3.4740483572726164`*^9}],

Cell[BoxData[{
 RowBox[{"fit3", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"newDat", ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["T", "300."], ")"}], "\[Beta]"]}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Gamma]", "/", "T"}]]], ",", 
      RowBox[{"\[Gamma]", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9.985"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "0.12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "15"}], "}"}]}], "}"}], ",", "T", ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit3", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fit", "[", "T", "]"}], ",", 
        RowBox[{"fit2", "[", "T", "]"}], ",", 
        RowBox[{"fit3", "[", "T", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ErrorListLogPlot", "[", "err2", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4740282864990606`*^9, 3.474028313331108*^9}, {
  3.4740283528459773`*^9, 3.474028410129278*^9}, {3.4740284745261908`*^9, 
  3.474028501904239*^9}, {3.474028553228329*^9, 3.4740285691715574`*^9}, {
  3.474028668481332*^9, 3.474028702099391*^9}, {3.4740327238724804`*^9, 
  3.4740327570537386`*^9}, {3.4740327888465943`*^9, 3.4740328327450714`*^9}, {
  3.4740329271564374`*^9, 3.4740329277180386`*^9}}],

Cell[TextData[{
 "Our final parameter estimates would be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"9.1", "\[Cross]", 
      SuperscriptBox["10", 
       RowBox[{"-", "11"}]]}]}], ",", 
    RowBox[{"\[Beta]", "=", "0.367"}], ",", 
    RowBox[{"\[Gamma]", "=", "0.33"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.4740329603532953`*^9, 3.4740330178393965`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Application: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Chi]", "2"], "-", "fit"}], TraditionalForm]], "None",
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.474033122921181*^9, 3.4740331327179985`*^9}}],

Cell[TextData[{
 "Another way of determining a best fit model is to minimize a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Chi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", i.e the squared difference between theoretical and experimental data \
point. Let's reuse the chemical reaction rate data and define a chi-square \
figure"
}], "Text",
 CellChangeTimes->{{3.474033135666404*^9, 3.474033192294503*^9}, {
  3.4740333417583656`*^9, 3.4740333724436197`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "chi2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chi2", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{"Total", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"newDat", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"newDat", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "\[Alpha]", ",", 
           "\[Beta]", ",", "\[Gamma]"}], "]"}]}], 
        RowBox[{"0.5", " ", 
         RowBox[{"newDat", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}]], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "newDat", "]"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.4740333735980215`*^9, 3.47403349236103*^9}, {
  3.4740335505179324`*^9, 3.4740335914836044`*^9}, {3.4740336577993207`*^9, 
  3.474033674116949*^9}, {3.474033986413898*^9, 3.4740339956959143`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NMinimize", "::", "\"\<precw\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"chi2", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ",", 
       RowBox[{"13", ">", "\[Alpha]", ">", "9"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[LessEqual]", "\[Beta]", "\[LessEqual]", "2"}], 
       ",", 
       RowBox[{"0", "\[LessEqual]", "\[Gamma]", "\[LessEqual]", "100"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "11", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Gamma]", ",", "0", ",", "10"}], "}"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SimulatedAnnealing\>\"", ",", 
         RowBox[{"\"\<PerturbationScale\>\"", "\[Rule]", "3"}], ",", 
         RowBox[{"\"\<BoltzmannExponent\>\"", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "df", ",", "f0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"-", "df"}], "/", 
             RowBox[{"(", 
              RowBox[{"Exp", "[", 
               RowBox[{"i", "/", "10"}], "]"}], ")"}]}]}], "]"}]}]}], "}"}]}],
       "*)"}], 
     RowBox[{"(*", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<DifferentialEvolution\>\"", ",", " ", 
         RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "1"}]}], "}"}]}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<RandomSearch\>\"", ",", 
         RowBox[{"\"\<SearchPoints\>\"", "\[Rule]", "100"}]}], "}"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", "\"\<SimulatedAnnealing\>\"", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", 
          RowBox[{"inpoints", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"2", ";;", "6"}]}], "]"}], "]"}]}]}], "*)"}], "}"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.4740336474565024`*^9, {3.474033678360157*^9, 3.474033681355362*^9}, {
   3.4740337232570353`*^9, 3.474033820960007*^9}, {3.4740338678224897`*^9, 
   3.4740338764961047`*^9}}],

Cell[BoxData["min"], "Input",
 CellChangeTimes->{{3.4740338823149147`*^9, 3.4740338825177155`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"T", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], 
        "]"}], "/.", 
       RowBox[{"min", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "10", ",", "1300"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ErrorListLogPlot", "[", "err2", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.474033925308591*^9, 3.4740339472422295`*^9}, 
   3.474034009813939*^9}],

Cell["\<\
Again we were able to find a solution to our minimization problem.\
\>", "Text",
 CellChangeTimes->{{3.4740340835240684`*^9, 3.4740341045841055`*^9}}],

Cell[TextData[{
 "See the documentation for ",
 ButtonBox["Constrained Optimization",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ConstrainedOptimizationOverview"],
 " for more info."
}], "Text",
 CellChangeTimes->{{3.474034058127224*^9, 3.474034079171661*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.473960628419392*^9, 3.4739606339418015`*^9}, 
   3.4740199777071714`*^9}],

Cell[CellGroupData[{

Cell["1", "Subsubsection",
 CellChangeTimes->{3.4739610809789915`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fit", " ", "the", " ", "curve", "  ", "y"}], "=", 
   RowBox[{"c", " ", 
    SuperscriptBox["x", "a"], "  ", "to", " ", "the", " ", "data", " ", 
    "points", "  ", 
    RowBox[{"(", 
     RowBox[{"1.0", 
      StyleBox[",",
       FontFamily->"Times New Roman",
       FontSize->12,
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontVariations->{"StrikeThrough"->False,
       "Underline"->False},
       FontColor->GrayLevel[0]], " ", "1.1"}], ")"}]}]}], 
  StyleBox[",",
   FontFamily->"Times New Roman",
   FontSize->12,
   FontWeight->"Plain",
   FontSlant->"Plain",
   FontVariations->{"StrikeThrough"->False,
   "Underline"->False},
   FontColor->GrayLevel[0]], " ", 
  RowBox[{"(", 
   RowBox[{"2.0", 
    StyleBox[",",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Plain",
     FontSlant->"Plain",
     FontVariations->{"StrikeThrough"->False,
     "Underline"->False},
     FontColor->GrayLevel[0]], " ", "2.8"}], ")"}], 
  StyleBox[",",
   FontFamily->"Times New Roman",
   FontSize->12,
   FontWeight->"Plain",
   FontSlant->"Plain",
   FontVariations->{"StrikeThrough"->False,
   "Underline"->False},
   FontColor->GrayLevel[0]], 
  RowBox[{"(", 
   RowBox[{"3.0", 
    StyleBox[",",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Plain",
     FontSlant->"Plain",
     FontVariations->{"StrikeThrough"->False,
     "Underline"->False},
     FontColor->GrayLevel[0]], " ", "5.2"}], ")"}], 
  StyleBox[",",
   FontFamily->"Times New Roman",
   FontSize->12,
   FontWeight->"Plain",
   FontSlant->"Plain",
   FontVariations->{"StrikeThrough"->False,
   "Underline"->False},
   FontColor->GrayLevel[0]], 
  RowBox[{"(", 
   RowBox[{"4.0", 
    StyleBox[",",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Plain",
     FontSlant->"Plain",
     FontVariations->{"StrikeThrough"->False,
     "Underline"->False},
     FontColor->GrayLevel[0]], " ", "8.0"}], ")"}], 
  StyleBox[",",
   FontFamily->"Times New Roman",
   FontSize->12,
   FontWeight->"Plain",
   FontSlant->"Plain",
   FontVariations->{"StrikeThrough"->False,
   "Underline"->False},
   FontColor->GrayLevel[0]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"5.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "11.1"}], ")"}], ".", "  "}]}]], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["2", "Subsubsection",
 CellChangeTimes->{3.4739610864702015`*^9}],

Cell[TextData[{
 "Die folgenden Daten \[UDoubleDot]ber die Bev\[ODoubleDot]lkerung der USA \
stammen vom US Census Bureau (",
 StyleBox["www.census.gov",
  FontFamily->"Courier New"],
 "):"
}], "Text",
 CellChangeTimes->{3.473960947395957*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"daten", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1790", ",", "3929214"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1800", ",", "5308483"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1810", ",", "7239881"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1820", ",", "9638453"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1830", ",", "12860702"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1840", ",", "17063353"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1850", ",", "23191876"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1860", ",", "31443321"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1870", ",", "38558371"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1880", ",", "50189209"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1890", ",", "62979766"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1900", ",", "76212168"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1910", ",", "92228496"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1920", ",", "106021537"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1930", ",", "123202624"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1940", ",", "132164569"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1950", ",", "151325798"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1960", ",", "179323175"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1970", ",", "203302031"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1980", ",", "226542199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1990", ",", "248709873"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"daten", "//", "TableForm"}]}], "Input"],

Cell["\<\
Im Jahre 1940 versuchte Pearl, der Wiederentdecker der logistischen \
Differentialgleichung, das Bev\[ODoubleDot]lkerungswachstum in den USA durch \
die logistische Funktion, also die L\[ODoubleDot]sung der logistischen \
Differentialgleichung zu beschreiben. Ihm standen die folgenden Daten zur \
Verf\[UDoubleDot]gung:\
\>", "Text",
 CellChangeTimes->{3.473960974352804*^9}],

Cell["Diese Daten sind durch eine Funktion", "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", "t", ")"}], "=", 
    FractionBox[
     RowBox[{"K", " ", "C", " ", 
      SuperscriptBox["e", 
       RowBox[{"a", "(", 
        RowBox[{"t", "-", "1790"}], ")"}]]}], 
     RowBox[{"1", "+", 
      RowBox[{"C", " ", 
       SuperscriptBox["e", 
        RowBox[{"a", "(", 
         RowBox[{"t", "-", "1790"}], ")"}]]}]}]]}], TraditionalForm]]],
 " mit Konstanten ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", "K", ",", 
    RowBox[{"C", ">", "0"}]}], TraditionalForm]]],
 " ,"
}], "Text",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
also einer L\[ODoubleDot]sung einer logistischen Differentialgleichung\
\>", "Text"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["x", "."], "=", 
   RowBox[{"a", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["x", "K"]}], ")"}]}]}], TraditionalForm]]]], "Text",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
m\[ODoubleDot]glichst gut zu approximieren.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["3", "Subsubsection",
 CellChangeTimes->{3.4739611087470407`*^9}],

Cell[TextData[{
 "Find both the \"exponential fit\" and \"power fit\" for the data points  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "2.0"}], ")"}], 
   StyleBox[",",
    FontFamily->"Times New Roman",
    FontSize->12,
    FontWeight->"Plain",
    FontSlant->"Plain",
    FontVariations->{"StrikeThrough"->False,
    "Underline"->False},
    FontColor->GrayLevel[0]], 
   RowBox[{"(", 
    RowBox[{"2.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "4.0"}], ")"}], 
   StyleBox[",",
    FontFamily->"Times New Roman",
    FontSize->12,
    FontWeight->"Plain",
    FontSlant->"Plain",
    FontVariations->{"StrikeThrough"->False,
    "Underline"->False},
    FontColor->GrayLevel[0]], 
   RowBox[{"(", 
    RowBox[{"3.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "8.0"}], ")"}], 
   StyleBox[",",
    FontFamily->"Times New Roman",
    FontSize->12,
    FontWeight->"Plain",
    FontSlant->"Plain",
    FontVariations->{"StrikeThrough"->False,
    "Underline"->False},
    FontColor->GrayLevel[0]], 
   RowBox[{"(", 
    RowBox[{"4.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "13.0"}], ")"}], 
   StyleBox[",",
    FontFamily->"Times New Roman",
    FontSize->12,
    FontWeight->"Plain",
    FontSlant->"Plain",
    FontVariations->{"StrikeThrough"->False,
    "Underline"->False},
    FontColor->GrayLevel[0]], 
   RowBox[{"(", 
    RowBox[{"5.0", 
     StyleBox[",",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontVariations->{"StrikeThrough"->False,
      "Underline"->False},
      FontColor->GrayLevel[0]], " ", "21.0"}], ")"}]}]],
  AspectRatioFixed->False],
 ".  "
}], "Text",
 CellChangeTimes->{3.4739611104474435`*^9}],

Cell["Discuss which curve fits the data best.", "Text",
 CellChangeTimes->{{3.4739611131150484`*^9, 3.4739611229274654`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Interpolation", "Section",
 CellChangeTimes->{{3.4734833790304966`*^9, 3.473483383585705*^9}}],

Cell[TextData[{
 "Required Reading:\n\n",
 ButtonBox["Approximate Functions and Interpolation\n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ApproximateFunctionsAndInterpolation"],
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", "Guide", ")"}], " ", "Curve", " ", "Fitting"}], " ", 
      "&"}], " ", "Approximate", " ", "Functions"}],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/CurveFittingAndApproximateFunctions"], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.4740048721949615`*^9, 3.4740048754085665`*^9}, {
  3.4740049129890327`*^9, 3.474004950288698*^9}}],

Cell["Fitting and Interpolating data is closely related. ", "Text",
 CellChangeTimes->{{3.474004879480174*^9, 3.474004895735402*^9}}],

Cell[CellGroupData[{

Cell["InterpolatingPolynomial", "Subsection",
 CellChangeTimes->{{3.4740050106788063`*^9, 3.4740050164040165`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["InterpolatingPolynomial",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/InterpolatingPolynomial"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["f", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
    StyleBox["x", "TI"]}], "]"}]], "InlineFormula"],
 "constructs an interpolating polynomial in ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " which reproduces the function values ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineMath"],
 " at successive integer values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", "2", ",", "\[Ellipsis]"}], TraditionalForm]], 
  "InlineMath"],
 " of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath"],
 ". "
}], "Text",
 CellChangeTimes->{{3.474005043688464*^9, 3.4740050518940787`*^9}}],

Cell[TextData[{
 "The more general form is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["InterpolatingPolynomial",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/InterpolatingPolynomial"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["x", "TI"], 
           StyleBox["1", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        SubscriptBox[
         StyleBox["f", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["df", "TI"], 
         StyleBox["1", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["x", "TI"], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula"],
 "which ",
 "constructs an interpolating polynomial in the variable ",
 StyleBox["var", "TI"],
 " with the property that at each point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]], "InlineFormula"],
 ", it matches the function value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineFormula"],
 ", the value of the first derivative ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["f", "i", "\[Prime]"], TraditionalForm]], 
  "InlineFormula"],
 ", etc., up to the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "i"], TraditionalForm]], "InlineFormula"],
 "th derivative ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["f", "i", 
    RowBox[{"(", 
     SubscriptBox["n", "i"], ")"}]], TraditionalForm]], "InlineFormula"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "m"}], 
   TraditionalForm]], "InlineFormula"],
 ". The interpolating polynomial is written in a form that is very convenient \
for further numerical calculations. The degree of the polynomial is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "-", "1"}], TraditionalForm]], "InlineFormula"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", 
    RowBox[{
     SubscriptBox["n", "1"], "+", 
     SubscriptBox["n", "2"], "+", "\[CenterEllipsis]", "+", 
     SubscriptBox["n", "m"], "+", "m"}]}], TraditionalForm]], "InlineFormula"],
 " is the total number of individual data."
}], "Text",
 CellChangeTimes->{{3.474005077181723*^9, 3.4740050912217484`*^9}}],

Cell[BoxData[
 RowBox[{"InterpolatingPolynomial", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.4740052075667524`*^9, 3.474005218580372*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}]}], "}"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4740051677242823`*^9, 3.474005184104311*^9}}],

Cell["Here is another example:", "Text",
 CellChangeTimes->{{3.474013829900655*^9, 3.474013834315462*^9}}],

Cell[BoxData[{
 RowBox[{"InterpolatingPolynomial", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "2", ",", "8", ",", "9"}], "}"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7", ",", "2", ",", "8", ",", "9"}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4740138398222723`*^9, 3.4740138399782724`*^9}}],

Cell["\<\
By specifying an explicit value for the derivative we can influence the \
result. Now we fit the same data but want the polynomial to have derivative 0 \
at x-value 8:\
\>", "Text",
 CellChangeTimes->{{3.4740138458126826`*^9, 3.4740139152952046`*^9}}],

Cell[BoxData[{
 RowBox[{"InterpolatingPolynomial", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "0"}], "}"}], ",", "9"}], "}"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7", ",", "2", ",", "8", ",", "9"}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4740138398222723`*^9, 3.4740138399782724`*^9}, {
  3.4740139164964066`*^9, 3.4740139208956146`*^9}}],

Cell["You can also find a polynomial in 2 dimensions", "Text",
 CellChangeTimes->{{3.474013977523714*^9, 3.474013990502937*^9}}],

Cell[BoxData[
 RowBox[{"InterpolatingPolynomial", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], ",", "151"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", "47"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Now, let us consider the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{"arctan", "(", 
      RowBox[{"8", "x"}], ")"}]}]}], TraditionalForm]]],
 ". Like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"cos", "(", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"x", "/", "2"}]}], ")"}], "2"], TraditionalForm]]],
 ", it is a smooth function on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], TraditionalForm]]],
 ". But the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", " ", 
    RowBox[{"arctan", "(", 
     RowBox[{"8", "x"}], ")"}]}], TraditionalForm]]],
 " has a singularity near the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], TraditionalForm]]],
 ". As a result, of this singularity, we encounter the so\[Hyphen]called \
Runge phenomena\[LongDash]near \[PlusMinus]1 the convergence of the \
interpolating polynomial to the original function breaks down."
}], "Text",
 CellChangeTimes->{3.47401403814542*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "40"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"2", " ", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"8", " ", "x"}], "]"}], "/", "Pi"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
       RowBox[{"2", "/", "n"}]}], "}"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ipo", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"InterpolatingPolynomial", "[", 
    RowBox[{
     RowBox[{"data", " ", "//", " ", "N"}], ",", " ", "x"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"Axes", " ", "->", " ", "False"}], ",", "\n", "     ", 
      RowBox[{"DisplayFunction", " ", "->", " ", "Identity"}]}], "]"}], "&"}],
    " ", "/@", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"ipo", "[", "x", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4740140837443004`*^9, 3.4740140894851103`*^9}}],

Cell[TextData[{
 "One can avoid the Runge phenomena by using non-equidistant ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "\[Hyphen]values. "
}], "Text",
 CellChangeTimes->{{3.4740141442100067`*^9, 3.4740141804644704`*^9}, 
   3.4740145464951344`*^9, 3.4740483884726715`*^9}],

Cell[TextData[{
 "Another nice feature is to have ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " find a polynomial without specifying e.g. function values at the \
boundaries but only the derivatives. ",
 "Make the polynomial have zero derivative at -1 and 1 without specifying the \
values there:"
}], "Text",
 CellChangeTimes->{{3.4740145655271683`*^9, 3.4740146153692555`*^9}}],

Cell[BoxData[
 RowBox[{"InterpolatingPolynomial", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "Automatic", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "Automatic", ",", "0"}], "}"}]}], "}"}], ",", "x"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["InterpolatingFunction", "Subsection",
 CellChangeTimes->{{3.474014894640946*^9, 3.4740149011461573`*^9}}],

Cell[TextData[{
 "While ",
 ButtonBox["InterpolatingPolynomial",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InterpolatingPolynomial"],
 " allows interpolating data with polynomials (the whole set with one \
polynomial!) a much more versatile ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function for fitting and interpolation is ",
 ButtonBox["InterpolatingFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InterpolatingFunction"],
 "."
}], "Text",
 CellChangeTimes->{{3.4740149176521883`*^9, 3.4740150226403728`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["InterpolatingFunction",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/InterpolatingFunction"], "[", 
   RowBox[{
    StyleBox["domain", "TI"], ",", 
    StyleBox["table", "TI"]}], "]"}]], "InlineFormula"],
 "represents an approximate function whose values are found by interpolation. \
This means, InterpolatingFunction is actually the result of a successful \
interpolation. To solve an interpolation problem for given data, an ",
 StyleBox["InterpolatingFunction", "MR"],
 "\[Hyphen]object is produced as follows. "
}], "Text",
 CellChangeTimes->{{3.4740150350267944`*^9, 3.4740150993301077`*^9}, 
   3.4740484003442917`*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["Interpolation",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Interpolation"], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["x", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["f", "TI"], 
        StyleBox["1", "TR"]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["x", "TI"], 
        StyleBox["2", "TR"]], ",", 
       SubscriptBox[
        StyleBox["f", "TI"], 
        StyleBox["2", "TR"]]}], "}"}], ",", 
     StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}]], "InlineFormula"],
 "constructs an interpolation of the function values ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["f", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 " corresponding to ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " values ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.474015120296544*^9, 3.4740151254913535`*^9}}],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "5"}], "}"}], 
   "]"}]}]], "Input"],

Cell["We can apply the function to find interpolated values:", "Text",
 CellChangeTimes->{{3.4740151402333794`*^9, 3.4740151458025894`*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "2.3", "]"}]], "Input",
 CellChangeTimes->{{3.474015149780596*^9, 3.4740151512937984`*^9}}],

Cell[BoxData[
 RowBox[{"InputForm", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.4740152508687735`*^9, 3.474015252818777*^9}}],

Cell["We can plot the interpolation function:", "Text",
 CellChangeTimes->{{3.4740151625882187`*^9, 3.4740151682354283`*^9}, 
   3.474048406241102*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474015169998232*^9, 3.4740151820570526`*^9}}],

Cell[TextData[{
 "However, if we leave the original data domain we will get an error and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " tries to extrapolate the result."
}], "Text",
 CellChangeTimes->{{3.4740152722720113`*^9, 3.474015292177646*^9}, 
   3.474048412590314*^9}],

Cell[BoxData[
 RowBox[{"f", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.4740152955940523`*^9, 3.4740152964520535`*^9}}],

Cell["\<\
An interpolation function will ALWAYS go through the data points. \
\>", "Text",
 CellChangeTimes->{{3.474015190605868*^9, 3.474015202212288*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "5"}], "}"}], 
    "]"}]}], "]"}]], "Input"],

Cell[TextData[{
 ButtonBox["Interpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpolation"],
 " forms a piecewise polynomial interpolation as can be seen by comparing the \
interpolation together with its derivative. ",
 "The interpolation function will always be continuous, but may not be \
differentiable:"
}], "Text",
 CellChangeTimes->{{3.4740154358226986`*^9, 3.4740154611259427`*^9}, {
  3.474015747667246*^9, 3.474015747667246*^9}, {3.474015990029272*^9, 
  3.4740159918856754`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474015375653393*^9, 3.47401538543461*^9}}],

Cell[TextData[{
 "One option for Interpolation is the InterpolationOrder. ",
 "The default setting is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["InterpolationOrder",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/InterpolationOrder"], "->", "3"}]], 
  "InlineFormula"],
 ". ",
 ":"
}], "Text",
 CellChangeTimes->{{3.4740157675416813`*^9, 3.474015776589697*^9}, {
  3.4740158711414633`*^9, 3.474015871718664*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5", ",", "7", ",", "2", ",", "3", ",", "1"}], "}"}],
       ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], "[", "x", 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5", ",", "7", ",", "2", ",", "3", ",", "1"}], "}"}],
       ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", "x", 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5", ",", "7", ",", "2", ",", "3", ",", "1"}], "}"}],
       ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "x", 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
With the default choice of order, at least 4 points are needed in each \
dimension:\
\>", "Text",
 CellChangeTimes->{3.4740159726196413`*^9}],

Cell[BoxData[
 RowBox[{"Interpolation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4"}], "}"}], "]"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Interpolation",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Interpolation"]], "InlineFormula"],
 " supports a ",
 Cell[BoxData[
  ButtonBox["Method",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Method"]], "InlineFormula"],
 " option. Possible settings include ",
 Cell[BoxData["\"\<Spline\>\""], "InlineFormula"],
 " for spline interpolation and ",
 Cell[BoxData["\"\<Hermite\>\""], "InlineFormula"],
 " for Hermite interpolation. "
}], "Text",
 CellChangeTimes->{3.4740158994867125`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "10"}], "]"}], "/", "10"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "11"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"sp", " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"he", " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<Hermite\>\""}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sp", "[", "x", "]"}], ",", 
        RowBox[{"he", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"sp", "'"}], "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"he", "'"}], "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["You can also make the interpolation a periodic function:", "Text",
 CellChangeTimes->{{3.4740159287679644`*^9, 3.474015939500783*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5", ",", "7", ",", "2", ",", "3", ",", "1"}], "}"}],
       ",", 
      RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}], "[", "x",
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input"],

Cell[TextData[{
 "The data to be interpolated can contain symbolic entities. (This is similar \
to the ",
 StyleBox["InterpolatingPolynomial", "MR"],
 " case.)"
}], "Text",
 CellChangeTimes->{3.4740160907274485`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", " ", "\[Alpha]", ",", " ", "interp"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"interp", "[", "a_", "]"}], " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "9"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "16"}], "}"}], ",", " ", "\n", 
     "                        ", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "a"}], "}"}], ",", " ", "\n", 
     "                        ", 
     RowBox[{"{", 
      RowBox[{"6", ",", " ", "36"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"7", ",", " ", "49"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", " ", "64"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"9", ",", " ", "81"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", ",", " ", "100"}], "}"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.474016098808263*^9, 3.4740161034570713`*^9}}],

Cell[TextData[{
 "Here, the resulting interpolating function as a function of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " is shown. We plot over the ",
 StyleBox["x", "TI"],
 "\[Hyphen]range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}], TraditionalForm]]],
 ". All data were contained in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "10"}], "}"}], TraditionalForm]]],
 ". Outside, the last domain extrapolation is used and a warning message is \
issued."
}], "Text",
 CellChangeTimes->{3.474016119462699*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ipo", "[", "a", "]"}], "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "0", ",", " ", "50"}], "}"}], ",", " ", "\n", 
   "      ", 
   RowBox[{"PlotPoints", " ", "->", " ", "50"}]}], "]"}]], "Input",
 CellChangeTimes->{3.474016128635515*^9}],

Cell["\<\
 When repeatedly interpolating in a calculation, it is often advantageous to \
change the interpolation points to prevent the rise of numerical artifacts.\
\>", "Text",
 CellChangeTimes->{{3.474016243358117*^9, 3.4740162541533356`*^9}, 
   3.4740484166775208`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["ListInterpolation", "Subsection",
 CellChangeTimes->{{3.4740183877833004`*^9, 3.4740183901545043`*^9}}],

Cell["\<\
Another function to interpolate a list of data points is ListInterpolation.\
\>", "Text",
 CellChangeTimes->{{3.47401839335251*^9, 3.474018409670139*^9}, 
   3.474048419126725*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["ListInterpolation",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ListInterpolation"], "[", 
   StyleBox["array", "TI"], "]"}]], "InlineFormula"],
 "constructs an ",
 Cell[BoxData[
  ButtonBox["InterpolatingFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InterpolatingFunction"]], "InlineFormula"],
 " object which represents an approximate function that interpolates the \
array of values given. ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["ListInterpolation",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ListInterpolation"], "[", 
   StyleBox["array", "TI"], "]"}]], "InlineFormula"],
 " assumes grid lines at integer positions in each direction. "
}], "Text",
 CellChangeTimes->{{3.4740184173921523`*^9, 3.474018424084564*^9}, 
   3.47401845614262*^9, 3.4740484228707314`*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["ListInterpolation",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ListInterpolation"], "[", 
   RowBox[{
    StyleBox["array", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["x", "TI"], 
         StyleBox["min", "TI"]], ",", 
        SubscriptBox[
         StyleBox["x", "TI"], 
         StyleBox["max", "TI"]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["y", "TI"], 
         StyleBox["min", "TI"]], ",", 
        SubscriptBox[
         StyleBox["y", "TI"], 
         StyleBox["max", "TI"]]}], "}"}], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]]],
 "specifies the domain of the grid from which the values in ",
 Cell[BoxData[
  StyleBox["array", "TI"]], "InlineFormula"],
 " are assumed to come. You can replace ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["x", "TI"], 
     StyleBox["min", "TI"]], ",", 
    SubscriptBox[
     StyleBox["x", "TI"], 
     StyleBox["max", "TI"]]}], "}"}]], "InlineFormula"],
 " etc. by explicit lists of positions for grid lines. The grid lines are \
otherwise assumed to be equally spaced. "
}], "Text",
 CellChangeTimes->{{3.474018440261792*^9, 3.474018450823011*^9}, 
   3.474048424555535*^9}],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "5"}], "}"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Construct an approximate function with the ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " values equally spaced on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "1"}], "]"}], TraditionalForm]], "InlineMath"],
 ": "
}], "Text",
 CellChangeTimes->{3.4740184809310637`*^9}],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "5"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}], "/", "5"}], 
          ",", "#1"}], "}"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "5"}], 
       "}"}]}], "]"}]}]}], "]"}]], "Input"],

Cell["\<\
Construct an approximate function that interpolates the values from an array \
of values:\
\>", "Text",
 CellChangeTimes->{3.4740185051423063`*^9}],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"x", " ", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1", ",", ".25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", 
            RowBox[{"Sin", "[", 
             RowBox[{"x", " ", "y"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1", ",", ".25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}]}], 
      "}"}], "]"}]}], "}"}], "]"}]], "Input"],

Cell["\<\
If you want to interpolate on arbitrary grid points, you can explicitly \
specify them:\
\>", "Text",
 CellChangeTimes->{{3.474018518948331*^9, 3.4740185414903708`*^9}}],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", ".3", ",", ".6", ",", 
      RowBox[{"-", ".2"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", ".1", ",", ".5", ",", "1", ",", "2"}], "}"}], "}"}]}],
    "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell["The x values may be included in the data directly :", "Text"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListInterpolation", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.1", "}"}], ",", "0.3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.5", "}"}], ",", "0.6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"-", "0.2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", "3"}], "}"}]}], "}"}], "]"}], "[", "x",
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell["", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionInterpolation", "Subsection",
 CellChangeTimes->{3.474016390194786*^9}],

Cell[TextData[{
 "If you have a  function (not data points) that you would like to \
interpolate this can be conveniently done with  ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["FunctionInterpolation",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FunctionInterpolation"], "[", 
   RowBox[{
    StyleBox["expr", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["x", "TI"], ",", 
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["min", "TI"]], ",", 
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula"],
 "which evaluates ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula"],
 " with ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " running from ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["min", "TI"]]], "InlineFormula"],
 " to ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["max", "TI"]]], "InlineFormula"],
 " and constructs an ",
 Cell[BoxData[
  ButtonBox["InterpolatingFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InterpolatingFunction"]], "InlineFormula"],
 " object which represents an approximate function corresponding to the \
result. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " chooses the underlying griding points to optimize accuracy of the fit \
(non-equidistant, etc.)"
}], "Text",
 CellChangeTimes->{{3.474016400210004*^9, 3.47401644379648*^9}, {
   3.474016486103755*^9, 3.474016515330008*^9}, 3.474048430374345*^9}],

Cell[BoxData[
 RowBox[{"sinInterp", "=", 
  RowBox[{"FunctionInterpolation", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.474016539962451*^9, 3.4740165435348577`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"sinInterp", "[", "x", "]"}], " ", "-", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.474016570788105*^9}],

Cell[TextData[{
 "About 150 points were used to approximate the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"2", "x"}], ")"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{3.4740165876829348`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sinInterp", "[", 
   RowBox[{"[", 
    RowBox[{"3", ",", "1"}], "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{3.4740165966685505`*^9}],

Cell["\<\
When plotting the third derivative we nicely see the discrete sampling:\
\>", "Text",
 CellChangeTimes->{{3.4740166593962607`*^9, 3.474016672952685*^9}, 
   3.4740484370043564`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"sinInterp", "'''"}], "[", "x", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474016631019811*^9, 3.474016644747835*^9}}],

Cell[TextData[{
 "The use of ",
 ButtonBox["FunctionInterpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref7FunctionInterpolation"],
 " is recommended when the calculation of a function takes a relatively long \
time and function values are repeatedly used. ",
 " One such function is ",
 StyleBox["FresnelC", "MR"]
}], "Text",
 CellChangeTimes->{{3.474016695463524*^9, 3.4740167003931327`*^9}, {
  3.4740168619158163`*^9, 3.474016862305817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"FresnelC", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}], " ", "//", " ", 
  "Timing"}]], "Input"],

Cell["Over 2000 points are needed for the generation of this pot:", "Text",
 CellChangeTimes->{{3.4740168740682383`*^9, 3.474016896766278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "1", ",", "3", ",", "2", ",", "1"}], "]"}], 
   "]"}], "//", "Length"}]], "Input"],

Cell["\<\
To achieve a six-digit interpolation, we only need about half as many points.\
\>", "Text",
 CellChangeTimes->{{3.474016915170311*^9, 3.474016915622712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"fipFresnelC", " ", "=", " ", 
    RowBox[{"FunctionInterpolation", "[", 
     RowBox[{
      RowBox[{"FresnelC", "[", "x", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", "\n", 
      "                                     ", 
      RowBox[{"MaxRecursion", " ", "->", " ", "8"}]}], "]"}]}], ")"}], " ", "//",
   " ", "Timing"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fipFresnelC", "[", 
   RowBox[{"[", 
    RowBox[{"3", ",", " ", "1"}], "]"}], "]"}], " ", "//", " ", 
  "Length"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"fipFresnelC", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}], " ", "//", " ", 
  "Timing"}]], "Input"],

Cell[TextData[{
 "One important application is to use ",
 Cell[BoxData[
  ButtonBox["FunctionInterpolation",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FunctionInterpolation"]], "InlineFormula"],
 " to generate a single ",
 Cell[BoxData[
  ButtonBox["InterpolatingFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InterpolatingFunction"]], "InlineFormula"],
 " object from an expression containing several such objects. "
}], "Text",
 CellChangeTimes->{{3.4740193473862405`*^9, 3.474019365248272*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.4740196756906404`*^9, 3.474019678295845*^9}, 
   3.4740199399863048`*^9}],

Cell["\<\
Interpolate the sinc(x) function in the interval (-50,50). Remember that \
sinc(x)=sin(x)/x. Visualize the precision of your interpolation.\
\>", "Text",
 CellChangeTimes->{{3.4740197992740574`*^9, 3.4740198626101685`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Interpolate the  Airy function in the interval (-100, 50). Visualize the \
precision of your interpolation.\
\>", "Text",
 CellChangeTimes->{{3.474019913419458*^9, 3.474019924199077*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Links to Untouched Topics", "Section",
 CellChangeTimes->{{3.474046640827124*^9, 3.47404664989074*^9}, {
  3.4740477346950564`*^9, 3.4740477371598606`*^9}}],

Cell[CellGroupData[{

Cell["Parallel Computing", "Subsection",
 CellChangeTimes->{{3.474034279008012*^9, 3.4740342816288166`*^9}}],

Cell[TextData[{
 ButtonBox["Parallel Computing",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ParallelComputing"],
 "\n",
 ButtonBox["Parallel Computing Tools User Guide",
  BaseStyle->"Link",
  ButtonData->"paclet:ParallelTools/tutorial/Overview"]
}], "Text",
 CellChangeTimes->{{3.4740466839923997`*^9, 3.4740467324616847`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Contexts and Packages", "Subsection",
 CellChangeTimes->{{3.47403428373482*^9, 3.4740342879780273`*^9}}],

Cell[TextData[{
 ButtonBox["Contexts",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Contexts"],
 "\n",
 ButtonBox["Contexts and Packages\n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ContextsAndPackages"],
 ButtonBox["Setting Up Mathematica Packages",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SettingUpMathematicaPackages"]
}], "Text",
 CellChangeTimes->{{3.4740467453317075`*^9, 3.4740468047210116`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Image Processing", "Subsection",
 CellChangeTimes->{{3.474034290817232*^9, 3.474034293282037*^9}}],

Cell[TextData[{
 ButtonBox["Image Processing & Analysis\n",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ImageProcessing"],
 ButtonBox["Image Processing",
  BaseStyle->"Link",
  ButtonData->"paclet:Image Processing"],
 ButtonBox["\n",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ImageProcessing"],
 ButtonBox["Image Filtering & Neighborhood Processing",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ImageFilteringAndNeighborhoodProcessing"],
 "\n",
 ButtonBox["Mathematical Morphology",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/MathematicalMorphology"]
}], "Text",
 CellChangeTimes->{{3.474046817965435*^9, 3.4740469027843857`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["MathLink", "Subsection",
 CellChangeTimes->{{3.474034310972468*^9, 3.474034324560092*^9}}],

Cell[TextData[{
 ButtonBox["Introduction to MathLink",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/IntroductionToMathLink"],
 "\n",
 ButtonBox["MathLink API",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/MathLinkAPI"],
 "\n",
 ButtonBox["How MathLink Is Used\n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/HowMathLinkIsUsed"],
 ButtonBox["MathLink and External Program Communication",
  BaseStyle->"Link",
  ButtonData->
   "paclet:tutorial/MathLinkAndExternalProgramCommunicationOverview"]
}], "Text",
 CellChangeTimes->{{3.4740469142972064`*^9, 3.474046979558922*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Statistics", "Subsection",
 CellChangeTimes->{{3.4740343375573177`*^9, 3.4740343405057225`*^9}}],

Cell[TextData[{
 ButtonBox["Statistics",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Statistics"],
 "\n",
 ButtonBox["Basic Statistics\n",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/BasicStatistics"],
 ButtonBox["Statistical Model Analysis",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/StatisticalModelAnalysis"]
}], "Text",
 CellChangeTimes->{{3.47404699007334*^9, 3.474047044351836*^9}, {
  3.474047077252294*^9, 3.4740470838823056`*^9}}]
}, Closed]],

Cell[TextData[ButtonBox["Random Number Generation",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/RandomNumberGenerationOverview"]], "Subsection",
 CellChangeTimes->{{3.47404699007334*^9, 3.474047065926674*^9}}],

Cell[CellGroupData[{

Cell["Compile", "Subsection",
 CellChangeTimes->{{3.474034359771756*^9, 3.4740343606609583`*^9}}],

Cell[TextData[ButtonBox["Compiling Mathematica Expressions",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/CompilingMathematicaExpressions"]], "Text",
 CellChangeTimes->{{3.4740471009331355`*^9, 3.4740471316963897`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sound and Sonification", "Subsection",
 CellChangeTimes->{{3.4740344359466906`*^9, 3.4740344393786964`*^9}}],

Cell[TextData[{
 ButtonBox["Sound",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Sound"],
 "\n",
 ButtonBox["The Representation of Sound",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/TheRepresentationOfSound"],
 "\n",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Sound", " ", "and", " ", "Sonification"}],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/SoundAndSonification"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.4740471510560236`*^9, 3.474047190196492*^9}, {
  3.4740472515374026`*^9, 3.4740472515374026`*^9}}]
}, Closed]],

Cell[TextData[ButtonBox["Signal Processing",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/SignalProcessing"]], "Subsection",
 CellChangeTimes->{{3.4740344559303255`*^9, 3.47403445844193*^9}, {
  3.474047235761775*^9, 3.474047235761775*^9}}],

Cell[CellGroupData[{

Cell["Binary Data", "Subsection",
 CellChangeTimes->{{3.4740344645883408`*^9, 3.4740344668815446`*^9}}],

Cell[TextData[{
 ButtonBox["Binary Data",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/BinaryData"],
 "\n",
 ButtonBox["Binary Files",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/BinaryFiles"]
}], "Text",
 CellChangeTimes->{{3.474047271084237*^9, 3.474047293376676*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Databases", "Subsection",
 CellChangeTimes->{{3.474034470999952*^9, 3.474034472263554*^9}}],

Cell[TextData[{
 ButtonBox["DatabaseLink User Guide",
  BaseStyle->"Link",
  ButtonData->"paclet:DatabaseLink/tutorial/Overview"],
 "\n",
 ButtonBox["Database Connectivity",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/DatabaseConnectivity"],
 "\n",
 ButtonBox["Using the Example Databases",
  BaseStyle->"Link",
  ButtonData->"paclet:DatabaseLink/tutorial/UsingTheExampleDatabases"]
}], "Text",
 CellChangeTimes->{{3.4740473139999123`*^9, 3.4740473747376194`*^9}, {
  3.47404741487649*^9, 3.474047416592493*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Notebook Programming", "Subsection",
 CellChangeTimes->{{3.47403448705238*^9, 3.4740344941347923`*^9}}],

Cell[TextData[{
 ButtonBox["Notebooks and Documents",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/NotebooksAndDocumentsOverview"],
 "\n",
 ButtonBox["Low-Level Notebook Programming",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/LowLevelNotebookProgramming"],
 "\n",
 ButtonBox["Document Generation",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/DocumentGeneration"]
}], "Text",
 CellChangeTimes->{{3.4740474339865236`*^9, 3.474047467885383*^9}, {
  3.474047518605472*^9, 3.474047520914276*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Splines", "Subsection",
 CellChangeTimes->{{3.4740345555833006`*^9, 3.474034556503702*^9}}],

Cell[TextData[ButtonBox["Splines",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/Splines"]], "Text",
 CellChangeTimes->{{3.474047529899892*^9, 3.474047536779504*^9}, 
   3.4740475795703793`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatic Report Generation (SendMail, Twitter, etc.)", "Subsection",
 CellChangeTimes->{{3.474034607016591*^9, 3.4740346181706104`*^9}}],

Cell[TextData[{
 ButtonBox["Sending Email",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SendingEmail"],
 "\n",
 ButtonBox["Twitter",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.wolfram.com/2009/04/30/twittering-with-mathematica/"], 
    None},
  ButtonNote->
   "http://blog.wolfram.com/2009/04/30/twittering-with-mathematica/"]
}], "Text",
 CellChangeTimes->{{3.4740475922220016`*^9, 3.4740476419704933`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Intervals", "Subsection",
 CellChangeTimes->{{3.474034961870414*^9, 3.474034964148018*^9}, 
   3.4740476533897133`*^9}],

Cell[TextData[ButtonBox["Interval Arithmetic",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/IntervalArithmetic"]], "Text",
 CellChangeTimes->{{3.47404766299933*^9, 3.474047671158144*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Notation, Symbolize, etc.", "Subsection",
 CellChangeTimes->{{3.4740350115565014`*^9, 3.4740350202769165`*^9}}],

Cell[TextData[{
 ButtonBox["Notation Package",
  BaseStyle->"Link",
  ButtonData->"paclet:Notation/guide/NotationPackage"],
 "\n",
 ButtonBox["Notation, Symbolize and InfixNotation",
  BaseStyle->"Link",
  ButtonData->"paclet:Notation/tutorial/NotationSymbolizeAndInfixNotation"]
}], "Text",
 CellChangeTimes->{{3.4740476875829735`*^9, 3.4740477095322123`*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{873, 761},
WindowMargins->{{137, Automatic}, {Automatic, -6}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 187, 5, 157, "Title"],
Cell[757, 29, 730, 14, 152, "Subtitle"],
Cell[CellGroupData[{
Cell[1512, 47, 93, 1, 94, "Section"],
Cell[1608, 50, 889, 23, 159, "Text"],
Cell[CellGroupData[{
Cell[2522, 77, 91, 1, 46, "Subsection"],
Cell[2616, 80, 405, 13, 70, "Text"],
Cell[3024, 95, 734, 21, 71, "Text"],
Cell[3761, 118, 398, 9, 88, "Input"],
Cell[4162, 129, 181, 3, 60, "Input"],
Cell[4346, 134, 508, 14, 60, "Input"],
Cell[4857, 150, 229, 7, 42, "Text"],
Cell[5089, 159, 185, 5, 60, "Input"],
Cell[5277, 166, 224, 4, 68, "Text"],
Cell[5504, 172, 784, 22, 116, "Input"],
Cell[6291, 196, 121, 1, 42, "Text"],
Cell[6415, 199, 231, 6, 60, "Input"],
Cell[6649, 207, 328, 8, 60, "Input"],
Cell[6980, 217, 154, 3, 42, "Text"],
Cell[7137, 222, 865, 24, 116, "Input"],
Cell[8005, 248, 645, 11, 201, "Text"],
Cell[8653, 261, 503, 10, 146, "Text"],
Cell[9159, 273, 1153, 35, 116, "Input"],
Cell[10315, 310, 430, 7, 95, "Text"],
Cell[10748, 319, 744, 18, 143, "Input"],
Cell[11495, 339, 705, 20, 116, "Input"],
Cell[12203, 361, 244, 4, 68, "Text"],
Cell[12450, 367, 188, 4, 60, "Input"],
Cell[12641, 373, 249, 4, 68, "Text"],
Cell[12893, 379, 691, 20, 88, "Input"],
Cell[13587, 401, 137, 2, 60, "Input"],
Cell[13727, 405, 593, 17, 71, "Text"],
Cell[14323, 424, 338, 8, 65, "Input"],
Cell[14664, 434, 407, 7, 95, "Text"],
Cell[15074, 443, 1054, 31, 175, "Input"],
Cell[16131, 476, 727, 22, 88, "Input"],
Cell[16861, 500, 362, 8, 42, "Text"],
Cell[17226, 510, 490, 14, 88, "Input"],
Cell[17719, 526, 177, 4, 42, "Text"],
Cell[17899, 532, 247, 5, 68, "Text"],
Cell[18149, 539, 666, 21, 60, "Input"],
Cell[18818, 562, 150, 4, 42, "Text"],
Cell[18971, 568, 327, 10, 60, "Input"],
Cell[19301, 580, 46, 0, 42, "Text"],
Cell[19350, 582, 329, 9, 60, "Input"],
Cell[19682, 593, 187, 4, 42, "Text"],
Cell[19872, 599, 550, 16, 60, "Input"],
Cell[20425, 617, 140, 1, 42, "Text"],
Cell[20568, 620, 1046, 28, 116, "Input"],
Cell[21617, 650, 135, 1, 42, "Text"],
Cell[21755, 653, 1178, 31, 116, "Input"],
Cell[CellGroupData[{
Cell[22958, 688, 130, 2, 41, "Subsubsection"],
Cell[23091, 692, 216, 5, 43, "Text"],
Cell[23310, 699, 194, 3, 43, "Text"],
Cell[23507, 704, 2411, 66, 418, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[25967, 776, 104, 1, 35, "Subsection"],
Cell[26074, 779, 293, 8, 43, "Text"],
Cell[26370, 789, 2356, 80, 151, "Text"],
Cell[28729, 871, 351, 12, 60, "Input"],
Cell[29083, 885, 128, 3, 60, "Input"],
Cell[29214, 890, 127, 2, 60, "Input"],
Cell[29344, 894, 210, 6, 42, "Text"],
Cell[29557, 902, 60, 1, 60, "Input"],
Cell[29620, 905, 205, 5, 42, "Text"],
Cell[29828, 912, 125, 2, 60, "Input"],
Cell[29956, 916, 115, 1, 42, "Text"],
Cell[30074, 919, 318, 9, 60, "Input"],
Cell[30395, 930, 167, 2, 42, "Text"],
Cell[30565, 934, 74, 1, 60, "Input"],
Cell[30642, 937, 177, 4, 60, "Input"],
Cell[30822, 943, 111, 1, 42, "Text"],
Cell[30936, 946, 138, 2, 60, "Input"],
Cell[31077, 950, 117, 1, 42, "Text"],
Cell[31197, 953, 72, 1, 60, "Input"],
Cell[CellGroupData[{
Cell[31294, 958, 130, 2, 41, "Subsubsection"],
Cell[31427, 962, 211, 5, 43, "Text"],
Cell[31641, 969, 180, 3, 43, "Text"],
Cell[31824, 974, 384, 8, 98, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[32257, 988, 99, 1, 35, "Subsection"],
Cell[32359, 991, 2420, 85, 126, "Text"],
Cell[34782, 1078, 122, 1, 42, "Text"],
Cell[34907, 1081, 282, 8, 60, "Input"],
Cell[35192, 1091, 355, 12, 42, "Text"],
Cell[35550, 1105, 281, 8, 60, "Input"],
Cell[35834, 1115, 218, 4, 68, "Text"],
Cell[36055, 1121, 455, 13, 60, "Input"],
Cell[36513, 1136, 654, 21, 71, "Text"],
Cell[37170, 1159, 161, 5, 60, "Input"],
Cell[37334, 1166, 422, 13, 60, "Input"],
Cell[37759, 1181, 139, 3, 42, "Text"],
Cell[37901, 1186, 375, 11, 60, "Input"],
Cell[38279, 1199, 340, 10, 60, "Input"],
Cell[38622, 1211, 205, 4, 42, "Text"],
Cell[38830, 1217, 647, 18, 88, "Input"],
Cell[39480, 1237, 264, 5, 68, "Text"],
Cell[39747, 1244, 1247, 37, 116, "Input"],
Cell[40997, 1283, 124, 1, 42, "Text"],
Cell[41124, 1286, 250, 7, 60, "Input"],
Cell[41377, 1295, 171, 2, 42, "Text"],
Cell[41551, 1299, 359, 9, 60, "Input"],
Cell[41913, 1310, 569, 17, 88, "Input"],
Cell[42485, 1329, 186, 4, 42, "Text"],
Cell[42674, 1335, 1572, 51, 116, "Input"],
Cell[44249, 1388, 372, 11, 60, "Input"],
Cell[44624, 1401, 593, 17, 88, "Input"],
Cell[CellGroupData[{
Cell[45242, 1422, 129, 2, 41, "Subsubsection"],
Cell[45374, 1426, 258, 6, 71, "Text"],
Cell[45635, 1434, 528, 16, 60, "Input"],
Cell[46166, 1452, 169, 3, 43, "Text"],
Cell[46338, 1457, 225, 6, 43, "Text"],
Cell[46566, 1465, 167, 3, 43, "Text"],
Cell[46736, 1470, 1417, 45, 112, "Input"],
Cell[48156, 1517, 441, 14, 50, "Text"],
Cell[48600, 1533, 639, 18, 88, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[49288, 1557, 109, 1, 35, "Subsection"],
Cell[49400, 1560, 223, 7, 43, "Text"],
Cell[49626, 1569, 412, 14, 60, "Input"],
Cell[50041, 1585, 242, 7, 60, "Input"],
Cell[50286, 1594, 279, 7, 43, "Text"],
Cell[50568, 1603, 278, 8, 60, "Input"],
Cell[50849, 1613, 92, 1, 42, "Text"],
Cell[50944, 1616, 80, 1, 60, "Input"],
Cell[51027, 1619, 176, 5, 60, "Input"],
Cell[51206, 1626, 101, 1, 42, "Text"],
Cell[51310, 1629, 1354, 49, 71, "Text"],
Cell[52667, 1680, 892, 29, 71, "Text"],
Cell[CellGroupData[{
Cell[53584, 1713, 178, 2, 41, "Subsubsection"],
Cell[53765, 1717, 110, 1, 42, "Text"],
Cell[53878, 1720, 863, 26, 116, "Input"],
Cell[54744, 1748, 172, 3, 42, "Text"],
Cell[54919, 1753, 111, 1, 42, "Text"],
Cell[55033, 1756, 142, 1, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[55212, 1762, 130, 2, 41, "Subsubsection"],
Cell[55345, 1766, 119, 1, 42, "Text"],
Cell[55467, 1769, 2074, 45, 583, "Input"],
Cell[57544, 1816, 142, 1, 42, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[57735, 1823, 135, 1, 35, "Subsection"],
Cell[57873, 1826, 281, 5, 55, "Text"],
Cell[58157, 1833, 309, 11, 48, "Input"],
Cell[58469, 1846, 205, 4, 115, "Input"],
Cell[58677, 1852, 133, 1, 34, "Text"],
Cell[58813, 1855, 2382, 61, 225, "Input"],
Cell[61198, 1918, 95, 1, 34, "Text"],
Cell[61296, 1921, 1456, 37, 159, "Input"],
Cell[62755, 1960, 1357, 33, 137, "Input"],
Cell[64115, 1995, 166, 3, 34, "Text"],
Cell[64284, 2000, 2157, 58, 203, "Input"],
Cell[66444, 2060, 292, 5, 55, "Text"],
Cell[66739, 2067, 774, 23, 71, "Input"],
Cell[67516, 2092, 102, 1, 34, "Text"],
Cell[67621, 2095, 3500, 88, 291, "Input"],
Cell[71124, 2185, 382, 7, 76, "Text"],
Cell[71509, 2194, 898, 25, 83, "Input"],
Cell[72410, 2221, 6245, 169, 500, "Input"],
Cell[78658, 2392, 146, 2, 34, "Text"],
Cell[78807, 2396, 831, 22, 148, "Input"],
Cell[79641, 2420, 163, 3, 34, "Text"],
Cell[79807, 2425, 4331, 117, 379, "Input"],
Cell[84141, 2544, 318, 6, 55, "Text"],
Cell[84462, 2552, 8996, 236, 696, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[93495, 2793, 174, 2, 35, "Subsection"],
Cell[93672, 2797, 367, 8, 68, "Text"],
Cell[94042, 2807, 452, 15, 43, "Text"],
Cell[94497, 2824, 93, 1, 42, "Text"],
Cell[94593, 2827, 251, 6, 60, "Input"],
Cell[94847, 2835, 848, 27, 70, "Text"],
Cell[95698, 2864, 91, 1, 42, "Text"],
Cell[95792, 2867, 638, 20, 60, "Input"],
Cell[96433, 2889, 538, 12, 95, "Text"],
Cell[96974, 2903, 701, 20, 88, "Input"],
Cell[97678, 2925, 192, 4, 42, "Text"],
Cell[97873, 2931, 844, 23, 116, "Input"],
Cell[98720, 2956, 188, 5, 42, "Text"],
Cell[98911, 2963, 166, 3, 60, "Input"],
Cell[99080, 2968, 166, 3, 60, "Input"],
Cell[99249, 2973, 306, 5, 68, "Text"],
Cell[99558, 2980, 10902, 183, 290, "Text"],
Cell[110463, 3165, 272, 5, 68, "Text"],
Cell[110738, 3172, 8865, 150, 347, "Text"],
Cell[119606, 3324, 606, 14, 42, "Text"],
Cell[120215, 3340, 1464, 25, 587, "Text"],
Cell[121682, 3367, 1818, 54, 143, "Input"],
Cell[123503, 3423, 218, 4, 60, "Input"],
Cell[123724, 3429, 506, 12, 68, "Text"],
Cell[124233, 3443, 140, 2, 60, "Input"],
Cell[124376, 3447, 460, 11, 88, "Input"],
Cell[124839, 3460, 237, 5, 88, "Input"],
Cell[125079, 3467, 437, 9, 95, "Text"],
Cell[125519, 3478, 69, 1, 60, "Input"],
Cell[125591, 3481, 276, 6, 68, "Text"],
Cell[125870, 3489, 219, 4, 60, "Input"],
Cell[126092, 3495, 180, 4, 60, "Input"],
Cell[126275, 3501, 354, 8, 88, "Input"],
Cell[126632, 3511, 159, 3, 60, "Input"],
Cell[126794, 3516, 554, 16, 60, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[127385, 3537, 133, 1, 35, "Subsection"],
Cell[127521, 3540, 254, 5, 55, "Text"],
Cell[127778, 3547, 571, 17, 27, "DisplayFormula"],
Cell[128352, 3566, 109, 1, 34, "Text"],
Cell[128464, 3569, 3637, 85, 467, "Input"],
Cell[132104, 3656, 294, 6, 48, "Input"],
Cell[132401, 3664, 318, 6, 55, "Text"],
Cell[132722, 3672, 513, 16, 45, "DisplayFormula"],
Cell[133238, 3690, 166, 3, 34, "Text"],
Cell[133407, 3695, 722, 17, 101, "Input"],
Cell[134132, 3714, 192, 4, 34, "Text"],
Cell[134327, 3720, 1185, 32, 115, "Input"],
Cell[135515, 3754, 760, 20, 76, "Input"],
Cell[136278, 3776, 545, 16, 57, "Text"],
Cell[136826, 3794, 1731, 52, 144, "Input"],
Cell[138560, 3848, 600, 15, 101, "Input"],
Cell[139163, 3865, 806, 22, 76, "Input"],
Cell[139972, 3889, 348, 6, 55, "Text"],
Cell[140323, 3897, 1858, 49, 181, "Input"],
Cell[142184, 3948, 189, 4, 34, "Text"],
Cell[142376, 3954, 2168, 60, 199, "Input"],
Cell[144547, 4016, 427, 13, 57, "Text"],
Cell[144977, 4031, 2169, 55, 181, "Input"],
Cell[147149, 4088, 453, 14, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[147639, 4107, 266, 8, 35, "Subsection"],
Cell[147908, 4117, 485, 11, 88, "Text"],
Cell[148396, 4130, 1203, 31, 183, "Input"],
Cell[149602, 4163, 2806, 71, 363, "Input"],
Cell[152411, 4236, 99, 1, 60, "Input"],
Cell[152513, 4239, 905, 25, 95, "Input"],
Cell[153421, 4266, 160, 3, 42, "Text"],
Cell[153584, 4271, 269, 7, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[153890, 4283, 127, 2, 35, "Subsection"],
Cell[CellGroupData[{
Cell[154042, 4289, 70, 1, 41, "Subsubsection"],
Cell[154115, 4292, 2555, 89, 71, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[156707, 4386, 70, 1, 41, "Subsubsection"],
Cell[156780, 4389, 243, 7, 43, "Text"],
Cell[157026, 4398, 1705, 48, 253, "Input"],
Cell[158734, 4448, 386, 7, 95, "Text"],
Cell[159123, 4457, 52, 0, 42, "Text"],
Cell[159178, 4459, 615, 23, 65, "Text"],
Cell[159796, 4484, 94, 2, 42, "Text"],
Cell[159893, 4488, 274, 9, 58, "Text"],
Cell[160170, 4499, 67, 2, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[160274, 4506, 70, 1, 41, "Subsubsection"],
Cell[160347, 4509, 2564, 89, 70, "Text"],
Cell[162914, 4600, 125, 1, 42, "Text"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[163100, 4608, 100, 1, 56, "Section"],
Cell[163203, 4611, 679, 19, 93, "Text"],
Cell[163885, 4632, 133, 1, 34, "Text"],
Cell[CellGroupData[{
Cell[164043, 4637, 115, 1, 46, "Subsection"],
Cell[164161, 4640, 1021, 34, 70, "Text"],
Cell[165185, 4676, 2448, 77, 160, "Text"],
Cell[167636, 4755, 408, 12, 60, "Input"],
Cell[168047, 4769, 561, 17, 60, "Input"],
Cell[168611, 4788, 106, 1, 42, "Text"],
Cell[168720, 4791, 574, 16, 88, "Input"],
Cell[169297, 4809, 261, 5, 68, "Text"],
Cell[169561, 4816, 680, 19, 88, "Input"],
Cell[170244, 4837, 128, 1, 42, "Text"],
Cell[170375, 4840, 902, 30, 116, "Input"],
Cell[171280, 4872, 1162, 38, 123, "Text"],
Cell[172445, 4912, 642, 20, 116, "Input"],
Cell[173090, 4934, 233, 7, 60, "Input"],
Cell[173326, 4943, 682, 17, 116, "Input"],
Cell[174011, 4962, 284, 7, 42, "Text"],
Cell[174298, 4971, 388, 9, 95, "Text"],
Cell[174689, 4982, 389, 12, 88, "Input"],
Cell[175081, 4996, 160, 5, 60, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[175278, 5006, 111, 1, 35, "Subsection"],
Cell[175392, 5009, 540, 15, 68, "Text"],
Cell[175935, 5026, 688, 16, 97, "Text"],
Cell[176626, 5044, 1114, 40, 71, "Text"],
Cell[177743, 5086, 182, 5, 60, "Input"],
Cell[177928, 5093, 140, 1, 42, "Text"],
Cell[178071, 5096, 124, 2, 60, "Input"],
Cell[178198, 5100, 130, 2, 60, "Input"],
Cell[178331, 5104, 151, 2, 42, "Text"],
Cell[178485, 5108, 236, 6, 60, "Input"],
Cell[178724, 5116, 283, 7, 42, "Text"],
Cell[179010, 5125, 124, 2, 60, "Input"],
Cell[179137, 5129, 156, 3, 42, "Text"],
Cell[179296, 5134, 212, 6, 60, "Input"],
Cell[179511, 5142, 506, 11, 68, "Text"],
Cell[180020, 5155, 337, 10, 60, "Input"],
Cell[180360, 5167, 416, 13, 66, "Text"],
Cell[180779, 5182, 393, 12, 137, "Input"],
Cell[181175, 5196, 393, 12, 137, "Input"],
Cell[181571, 5210, 393, 12, 137, "Input"],
Cell[181967, 5224, 151, 4, 65, "Text"],
Cell[182121, 5230, 123, 3, 93, "Input"],
Cell[182247, 5235, 542, 16, 110, "Text"],
Cell[182792, 5253, 333, 10, 93, "Input"],
Cell[183128, 5265, 181, 4, 93, "Input"],
Cell[183312, 5271, 182, 4, 93, "Input"],
Cell[183497, 5277, 788, 25, 137, "Input"],
Cell[184288, 5304, 140, 1, 65, "Text"],
Cell[184431, 5307, 400, 12, 137, "Input"],
Cell[184834, 5321, 216, 6, 70, "Text"],
Cell[185053, 5329, 1164, 32, 143, "Input"],
Cell[186220, 5363, 621, 20, 96, "Text"],
Cell[186844, 5385, 446, 12, 88, "Input"],
Cell[187293, 5399, 274, 5, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[187604, 5409, 109, 1, 35, "Subsection"],
Cell[187716, 5412, 190, 4, 42, "Text"],
Cell[187909, 5418, 857, 23, 97, "Text"],
Cell[188769, 5443, 1361, 44, 97, "Text"],
Cell[190133, 5489, 186, 5, 60, "Input"],
Cell[190322, 5496, 168, 5, 60, "Input"],
Cell[190493, 5503, 339, 11, 43, "Text"],
Cell[190835, 5516, 291, 9, 60, "Input"],
Cell[191129, 5527, 682, 21, 88, "Input"],
Cell[191814, 5550, 157, 4, 42, "Text"],
Cell[191974, 5556, 564, 17, 88, "Input"],
Cell[192541, 5575, 948, 27, 116, "Input"],
Cell[193492, 5604, 179, 4, 42, "Text"],
Cell[193674, 5610, 337, 10, 60, "Input"],
Cell[194014, 5622, 168, 5, 60, "Input"],
Cell[194185, 5629, 67, 0, 42, "Text"],
Cell[194255, 5631, 772, 25, 116, "Input"],
Cell[195030, 5658, 16, 0, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[195083, 5663, 85, 1, 35, "Subsection"],
Cell[195171, 5666, 1528, 48, 148, "Text"],
Cell[196702, 5716, 316, 8, 60, "Input"],
Cell[197021, 5726, 421, 11, 60, "Input"],
Cell[197445, 5739, 237, 8, 42, "Text"],
Cell[197685, 5749, 184, 5, 60, "Input"],
Cell[197872, 5756, 191, 4, 42, "Text"],
Cell[198066, 5762, 377, 9, 60, "Input"],
Cell[198446, 5773, 453, 11, 70, "Text"],
Cell[198902, 5786, 298, 8, 60, "Input"],
Cell[199203, 5796, 143, 1, 42, "Text"],
Cell[199349, 5799, 176, 5, 60, "Input"],
Cell[199528, 5806, 167, 3, 42, "Text"],
Cell[199698, 5811, 444, 11, 88, "Input"],
Cell[200145, 5824, 160, 5, 60, "Input"],
Cell[200308, 5831, 301, 8, 60, "Input"],
Cell[200612, 5841, 517, 13, 71, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[201166, 5859, 127, 2, 35, "Subsection"],
Cell[201296, 5863, 285, 6, 71, "Text"],
Cell[201584, 5871, 249, 6, 43, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[201882, 5883, 162, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[202069, 5889, 108, 1, 57, "Subsection"],
Cell[202180, 5892, 334, 9, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[202551, 5906, 110, 1, 57, "Subsection"],
Cell[202664, 5909, 433, 12, 95, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[203134, 5926, 104, 1, 57, "Subsection"],
Cell[203241, 5929, 653, 18, 121, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[203931, 5952, 96, 1, 57, "Subsection"],
Cell[204030, 5955, 591, 17, 121, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[204658, 5977, 102, 1, 57, "Subsection"],
Cell[204763, 5980, 462, 13, 95, "Text"]
}, Closed]],
Cell[205240, 5996, 215, 3, 57, "Subsection"],
Cell[CellGroupData[{
Cell[205480, 6003, 97, 1, 43, "Subsection"],
Cell[205580, 6006, 224, 3, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[205841, 6014, 114, 1, 57, "Subsection"],
Cell[205958, 6017, 590, 18, 90, "Text"]
}, Closed]],
Cell[206563, 6038, 242, 4, 57, "Subsection"],
Cell[CellGroupData[{
Cell[206830, 6046, 103, 1, 43, "Subsection"],
Cell[206936, 6049, 282, 9, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[207255, 6063, 97, 1, 57, "Subsection"],
Cell[207355, 6066, 517, 14, 95, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[207909, 6085, 109, 1, 57, "Subsection"],
Cell[208021, 6088, 507, 14, 95, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[208565, 6107, 97, 1, 57, "Subsection"],
Cell[208665, 6110, 195, 4, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[208897, 6119, 143, 1, 57, "Subsection"],
Cell[209043, 6122, 437, 13, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[209517, 6140, 125, 2, 57, "Subsection"],
Cell[209645, 6144, 189, 3, 42, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[209871, 6152, 117, 1, 57, "Subsection"],
Cell[209991, 6155, 361, 9, 68, "Text"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
